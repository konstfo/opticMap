{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\javascript_studying\\\\opticMap\\\\optic-map\\\\src\\\\OpticMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, View } from \"ol\"; // import getPixelFromCoordinate from \"ol/Map\";\n\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Stroke, Style, Icon } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport LineString from \"ol/geom/LineString\"; // import switchesArray from \"./res/switches.json\";\n// import opticsArray from \"./res/optics.json\";\n// import clientStationsArray from \"./res/clientStations.json\";\n\nimport clientStationIcon from \"./img/client_station_icon.png\";\nimport switchIcon from \"./img/switch_icon.png\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = evt => {\n      evt.preventDefault();\n      console.log(this.refs.coordinateFormField.value);\n      console.log(this.refs.addressFormField.value);\n      console.log(this.refs.ipAddressFormField.value);\n      console.log(this.refs.locationInfoFormField.value);\n      console.log(this.refs.infoFormField.value);\n      this.setState({\n        currentForm: null\n      });\n    };\n\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      currentForm: null,\n      displayedFeatures: null,\n      featureInfo: {\n        featureCoordinates: null,\n        featureContainerArray: null,\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null\n      },\n      editedFeatureInfo: {\n        featureCoordinates: null,\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null\n      },\n      switchesContainerArray: [null],\n      opticsContainerArray: null,\n      clientStationsContainerArray: null\n    };\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.setSwitchesToRightControlPanel = this.setSwitchesToRightControlPanel.bind(this);\n    this.setOpticsToRightControlPanel = this.setOpticsToRightControlPanel.bind(this);\n    this.setClientStationsToRightControlPanel = this.setClientStationsToRightControlPanel.bind(this);\n    this.initMapComponent = this.initMapComponent.bind(this);\n    this.changeFeaturesSize = this.changeFeaturesSize.bind(this);\n    this.getFeatureInfo = this.getFeatureInfo.bind(this);\n    this.getfeatureInfoBlock = this.getfeatureInfoBlock.bind(this);\n    this.getEditingOrAddingForm = this.getEditingOrAddingForm.bind(this);\n  } //\n  //switch control methods\n\n\n  addNewSwitch(data) {\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"/api/addSwitch\", options).then(res => {\n      console.log(res.json());\n    }).then(() => {\n      this.getSwitches();\n    });\n  }\n\n  editSwitchInfo(data) {\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"/api/editSwitch\", options);\n  }\n\n  deleteSwitch(data) {\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"/api/deleteSwitch\", options).then(res => {\n      console.log(res.json());\n    }).then(() => {\n      this.getSwitches();\n    });\n  } //\n  //\n\n\n  initMapComponent() {\n    const extentView = transformExtent([20.969893\n    /** min x */\n    , 57.540673\n    /** min y */\n    , 28.413477\n    /** max x */\n    , 59.894102\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n    const extentLayer = transformExtent([16.581885\n    /** min x */\n    , 55.671002\n    /** min y */\n    , 32.794556\n    /** max x */\n    , 61.543774\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n\n    const layerVisibilityControl = function (Control) {\n      function layerVisibilityControl(layerName, className, buttontext) {\n        const button = document.createElement(\"button\");\n        button.innerHTML = buttontext;\n        var element = document.createElement(\"div\");\n        element.className = className + \" ol-unselectable ol-control\";\n        element.appendChild(button);\n        Control.call(this, {\n          element: element\n        });\n        button.addEventListener(\"click\", this.handlelayerVisibilityControl.bind(this, layerName), false);\n      }\n\n      if (Control) layerVisibilityControl.__proto__ = Control;\n      layerVisibilityControl.prototype = Object.create(Control && Control.prototype);\n      layerVisibilityControl.prototype.constructor = layerVisibilityControl;\n\n      layerVisibilityControl.prototype.handlelayerVisibilityControl = function handlelayerVisibilityControl(layerName) {\n        map.getLayers().getArray().map(layer => {\n          if (layer.getClassName() === layerName) {\n            layer.setVisible(!layer.getVisible());\n          }\n        });\n      };\n\n      return layerVisibilityControl;\n    }(Control);\n\n    const map = new Map({\n      target: this.refs.mapContainer,\n      layers: [new TileLayer({\n        source: new OSM(),\n        extent: extentLayer,\n        zIndex: 0\n      })],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5\n      }),\n      controls: defaults({\n        attributionOptions: {\n          target: this.refs.mapContainer\n        }\n      }).extend([new layerVisibilityControl(\"switchesLayer\", \"switches-visible\", \"switches\"), new layerVisibilityControl(\"opticsLayer\", \"optics-visible\", \"optic cables\"), new layerVisibilityControl(\"clientStationsLayer\", \"clientStations-visible\", \"client stations\")])\n    });\n    let switchFeatureArray = [];\n    let opticsFeatureArray = [];\n    let clientStationsFeatureArray = []; //get switches from server\n\n    fetch(\"/api/switches\").then(res => res.json()).then(switches => switches.map(data => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        featureType: \"switch\",\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n        featureCoordinates: data.coordinates\n      });\n      switchFeatureArray.push(featureElement);\n    }));\n    this.setState({\n      switchesContainerArray: switchFeatureArray\n    }); // switchesArray.map((data) => {\n    //   let featureElement = new Feature({\n    //     geometry: new Point(fromLonLat(data.coordinates)),\n    //     featureType: \"switch\",\n    //     address: data.address,\n    //     ipAddress: data.ipAddress,\n    //     info: data.info,\n    //     locationInfo: data.locationInfo,\n    //     featureCoordinates: data.coordinates,\n    //   });\n    //   switchFeatureArray.push(featureElement);\n    //   this.setState({\n    //     switchesContainerArray: switchFeatureArray,\n    //   });\n    // });\n    //get optics from server\n\n    fetch(\"/api/optics\").then(res => res.json()).then(optics => optics.map(data => {\n      let coordinatesArray = [];\n      data.coordinates.map(coordinate => {\n        coordinatesArray.push(fromLonLat(coordinate));\n      });\n      let featureElement = new Feature({\n        geometry: new LineString(coordinatesArray),\n        featureType: \"optics\",\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n        featureCoordinates: data.coordinates\n      });\n      opticsFeatureArray.push(featureElement);\n      this.setState({\n        opticsContainerArray: opticsFeatureArray\n      });\n    })); // opticsArray.map((data) => {\n    //       let coordinatesArray = [];\n    //       data.coordinates.map((coordinate) => {\n    //         coordinatesArray.push(fromLonLat(coordinate));\n    //       });\n    //       let featureElement = new Feature({\n    //         geometry: new LineString(coordinatesArray),\n    //         featureType: \"optics\",\n    //         address: data.address,\n    //         ipAddress: data.ipAddress,\n    //         info: data.info,\n    //         locationInfo: data.locationInfo,\n    //         featureCoordinates: data.coordinates,\n    //       });\n    //       opticsFeatureArray.push(featureElement);\n    //       this.setState({\n    //         opticsContainerArray: opticsFeatureArray,\n    //       });\n    //     });\n    //get client stations from server\n\n    fetch(\"/api/clientStations\").then(res => res.json()).then(clientStations => clientStations.map(data => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        featureType: \"clientStation\",\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n        featureCoordinates: data.coordinates\n      });\n      clientStationsFeatureArray.push(featureElement);\n      this.setState({\n        clientStationsContainerArray: clientStationsFeatureArray\n      });\n    })); // clientStationsArray.map((data) => {\n    //   let featureElement = new Feature({\n    //     geometry: new Point(fromLonLat(data.coordinates)),\n    //     featureType: \"clientStation\",\n    //     address: data.address,\n    //     ipAddress: data.ipAddress,\n    //     info: data.info,\n    //     locationInfo: data.locationInfo,\n    //     featureCoordinates: data.coordinates,\n    //   });\n    //   clientStationsFeatureArray.push(featureElement);\n    //   this.setState({\n    //     clientStationsContainerArray: clientStationsFeatureArray,\n    //   });\n    // });\n\n    let opticsLayerSource = new VectorSource({\n      features: opticsFeatureArray\n    });\n    this.opticsLayer = new VectorLayer({\n      className: \"opticsLayer\",\n      source: opticsLayerSource,\n      visible: true,\n      style: new Style({\n        stroke: new Stroke({\n          width: 2,\n          color: \"skyblue\"\n        })\n      })\n    });\n    let clientStationsLayerSource = new VectorSource({\n      features: clientStationsFeatureArray\n    });\n    this.clientStationsLayer = new VectorLayer({\n      className: \"clientStationsLayer\",\n      source: clientStationsLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: clientStationIcon,\n          scale: 0.09\n        })\n      })\n    });\n    let switchesLayerSource = new VectorSource({\n      features: switchFeatureArray\n    });\n    console.log(switchesLayerSource);\n    this.switchesLayer = new VectorLayer({\n      className: \"switchesLayer\",\n      source: switchesLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: switchIcon,\n          scale: 0.09\n        })\n      })\n    }); //layers with network equipment\n    //map feature settings\n    //layers settings\n\n    map.addLayer(this.clientStationsLayer);\n    map.addLayer(this.switchesLayer);\n    map.addLayer(this.opticsLayer); //layers settings\n    //click on map\n\n    map.on(\"click\", function (pointOfClick) {\n      const clickedCoordinate = transform(pointOfClick.coordinate, \"EPSG:3857\", \"EPSG:4326\");\n      let coordinateString = clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n      this.setState({\n        coordinates: coordinateString\n      });\n      map.forEachFeatureAtPixel(pointOfClick.pixel, function (feature) {\n        this.setState({\n          featureInfo: {\n            featureCoordinates: feature.getProperties().featureCoordinates,\n            address: feature.getProperties().address,\n            ipAddress: feature.getProperties().ipAddress,\n            info: feature.getProperties().info,\n            locationInfo: feature.getProperties().locationInfo,\n            featureContainerArray: feature.getProperties().featureContainerArray\n          }\n        });\n        this.state.map.getView().animate({\n          center: fromLonLat(clickedCoordinate)\n        }, {\n          zoom: 19\n        });\n      }.bind(this));\n    }.bind(this)); // change features size on zoom change\n\n    map.getView().on(\"propertychange\", e => {\n      // switch (e.key) {\n      //   case \"resolution\":\n      //     this.handleZoom(map.getView().getZoom());\n      //     break;\n      // }\n      if (e.key === \"resolution\") {\n        this.handleZoom(map.getView().getZoom());\n      }\n    });\n    this.setState({\n      map: map\n    });\n  }\n\n  componentDidMount() {\n    this.initMapComponent();\n    console.log(this.state.switchesContainerArray);\n  }\n\n  setSwitchesToRightControlPanel() {\n    this.setState({\n      displayedFeatures: this.state.switchesContainerArray\n    });\n  }\n\n  setOpticsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: this.state.opticsContainerArray\n    });\n  }\n\n  setClientStationsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: this.state.clientStationsContainerArray\n    });\n  }\n\n  handleRightPanelItemClick(item) {\n    if (item.getProperties().ipAddress === null) {\n      this.state.map.getView().animate({\n        center: fromLonLat(item.getProperties().featureCoordinates[0])\n      }, {\n        zoom: 17.5\n      });\n    } else {\n      this.state.map.getView().animate({\n        center: fromLonLat(item.getProperties().featureCoordinates)\n      }, {\n        zoom: 19\n      });\n    }\n\n    this.setState({\n      featureInfo: {\n        featureCoordinates: item.getProperties().featureCoordinates,\n        address: item.getProperties().address,\n        ipAddress: item.getProperties().ipAddress,\n        info: item.getProperties().info,\n        locationInfo: item.getProperties().locationInfo\n      }\n    }); // switch (item.getProperties().featureType) {\n    //   case \"switch\":\n    //     console.log(this.state.switchesContainerArray);\n    //     break;\n    //   case \"clientStation\":\n    //     console.log(this.state.clientStationsContainerArray);\n    //     break;\n    //   case \"optics\":\n    //     console.log(this.state.opticsContainerArray);\n    //     break;\n    //   default:\n    //     console.log(item.getProperties().featureType);\n    // }\n  }\n\n  changeFeaturesSize(strokeWidth, iconsScale) {\n    this.switchesLayer.setStyle(new Style({\n      image: new Icon({\n        opacity: 1,\n        src: switchIcon,\n        scale: iconsScale\n      })\n    }));\n    this.opticsLayer.setStyle(new Style({\n      stroke: new Stroke({\n        width: strokeWidth,\n        color: \"skyblue\"\n      })\n    }));\n    this.clientStationsLayer.setStyle(new Style({\n      image: new Icon({\n        opacity: 1,\n        src: clientStationIcon,\n        scale: iconsScale\n      })\n    }));\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12) {\n      this.changeFeaturesSize(0.5, 0.01);\n    } else if (zoomSize < 13) {\n      this.changeFeaturesSize(2, 0.05);\n    } else if (zoomSize < 14) {\n      this.changeFeaturesSize(2, 0.08);\n    } else if (zoomSize < 16) {\n      this.changeFeaturesSize(2, 0.1);\n    } else if (zoomSize < 18) {\n      this.changeFeaturesSize(4, 0.12);\n    } else {\n      this.changeFeaturesSize(7, 0.25);\n    }\n  }\n\n  getFeatureInfo(featureInfo) {\n    return featureInfo !== null ? React.createElement(\"div\", {\n      className: \"featureInfoElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 576\n      },\n      __self: this\n    }, featureInfo) : React.createElement(\"div\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 578\n      },\n      __self: this\n    });\n  }\n\n  getfeatureInfoBlock() {\n    if (this.state.featureInfo.featureCoordinates !== null) {\n      return React.createElement(\"div\", {\n        className: \"featureInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584\n        },\n        __self: this\n      }, this.getFeatureInfo(this.state.featureInfo.address), this.getFeatureInfo(this.state.featureInfo.ipAddress), this.getFeatureInfo(this.state.featureInfo.info), this.getFeatureInfo(this.state.featureInfo.locationInfo), React.createElement(\"div\", {\n        className: \"editButton\",\n        onClick: () => {\n          this.setState({\n            currentForm: \"edit\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, \"Edit\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 602\n        },\n        __self: this\n      });\n    }\n  }\n\n  getEditingOrAddingForm() {\n    if (this.state.currentForm === \"add\") {\n      return React.createElement(\"div\", {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 620\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"addForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 621\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"coordinateFormField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 622\n        },\n        __self: this\n      }, this.state.coordinates), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"addressFormField\",\n        placeholder: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 625\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"ipAddressFormField\",\n        placeholder: \"ip address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 630\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"locationInfoFormField\",\n        placeholder: \"location info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 635\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"infoFormField\",\n        placeholder: \"additional info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 640\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"formButtonsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 645\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 646\n        },\n        __self: this\n      }, \"Submit\"))));\n    } else if (this.state.currentForm === \"edit\") {\n      return React.createElement(\"div\", {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 653\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"editForm\",\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 654\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"coordinateFormField\",\n        defaultValue: this.state.featureInfo.featureCoordinates,\n        style: {\n          backgroundColor: \"lightgray\"\n        },\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 655\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"addressFormField\",\n        placeholder: \"address\",\n        defaultValue: this.state.featureInfo.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 662\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"ipAddressFormField\",\n        placeholder: \"ip address\",\n        defaultValue: this.state.featureInfo.ipAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 668\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"locationInfoFormField\",\n        placeholder: \"location info\",\n        defaultValue: this.state.featureInfo.locationInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 674\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"infoFormField\",\n        placeholder: \"additional info\",\n        defaultValue: this.state.featureInfo.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 680\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"formButtonsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 686\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 687\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 688\n        },\n        __self: this\n      }, \"Submit\"))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 694\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"opticMapComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 700\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 701\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"coordinateString\",\n      id: \"coordinateString\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 702\n      },\n      __self: this\n    }, this.state.coordinates), React.createElement(\"div\", {\n      className: \"objectButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 706\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"featureInfoAddControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 707\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      onClick: this.setSwitchesToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708\n      },\n      __self: this\n    }, \"switches\")), React.createElement(\"div\", {\n      className: \"featureInfoAddControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 716\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      onClick: this.setOpticsToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 717\n      },\n      __self: this\n    }, \"optic cable\")), React.createElement(\"div\", {\n      className: \"featureInfoAddControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 725\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      onClick: this.setClientStationsToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 726\n      },\n      __self: this\n    }, \"client stations\"))), this.getfeatureInfoBlock(), this.getEditingOrAddingForm(this.state.featureInfo.featureCoordinates, this.state.featureInfo.address, this.state.featureInfo.ipAddress, this.state.featureInfo.locationInfo, this.state.featureInfo.info)), React.createElement(\"div\", {\n      className: \"mapContainer\",\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 744\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rightMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 745\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"displayedFeatures\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 746\n      },\n      __self: this\n    }, this.state.displayedFeatures !== null ? this.state.displayedFeatures.map(feature => {\n      return React.createElement(\"li\", {\n        className: \"displayedFeature\",\n        key: feature.getProperties().featureCoordinates,\n        onClick: this.handleRightPanelItemClick.bind(this, feature),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 750\n        },\n        __self: this\n      }, feature.getProperties().address);\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 760\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default OpticMap;","map":{"version":3,"sources":["C:/Users/asus/Documents/javascript_studying/opticMap/optic-map/src/OpticMap.js"],"names":["React","Component","Map","View","TileLayer","OSM","fromLonLat","transformExtent","transform","Stroke","Style","Icon","Feature","Point","Control","defaults","VectorLayer","VectorSource","LineString","clientStationIcon","switchIcon","OpticMap","constructor","props","handleSubmit","evt","preventDefault","console","log","refs","coordinateFormField","value","addressFormField","ipAddressFormField","locationInfoFormField","infoFormField","setState","currentForm","state","map","coordinates","displayedFeatures","featureInfo","featureCoordinates","featureContainerArray","address","ipAddress","info","locationInfo","editedFeatureInfo","switchesContainerArray","opticsContainerArray","clientStationsContainerArray","bind","handleZoom","setSwitchesToRightControlPanel","setOpticsToRightControlPanel","setClientStationsToRightControlPanel","initMapComponent","changeFeaturesSize","getFeatureInfo","getfeatureInfoBlock","getEditingOrAddingForm","addNewSwitch","data","options","method","headers","body","JSON","stringify","fetch","then","res","json","getSwitches","editSwitchInfo","deleteSwitch","extentView","extentLayer","layerVisibilityControl","layerName","className","buttontext","button","document","createElement","innerHTML","element","appendChild","call","addEventListener","handlelayerVisibilityControl","__proto__","prototype","Object","create","getLayers","getArray","layer","getClassName","setVisible","getVisible","target","mapContainer","layers","source","extent","zIndex","view","center","zoom","minZoom","controls","attributionOptions","extend","switchFeatureArray","opticsFeatureArray","clientStationsFeatureArray","switches","featureElement","geometry","featureType","push","optics","coordinatesArray","coordinate","clientStations","opticsLayerSource","features","opticsLayer","visible","style","stroke","width","color","clientStationsLayerSource","clientStationsLayer","image","opacity","src","scale","switchesLayerSource","switchesLayer","addLayer","on","pointOfClick","clickedCoordinate","coordinateString","toFixed","forEachFeatureAtPixel","pixel","feature","getProperties","getView","animate","e","key","getZoom","componentDidMount","handleRightPanelItemClick","item","strokeWidth","iconsScale","setStyle","zoomSize","backgroundColor","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\n// import getPixelFromCoordinate from \"ol/Map\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Stroke, Style, Icon } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport LineString from \"ol/geom/LineString\";\n// import switchesArray from \"./res/switches.json\";\n// import opticsArray from \"./res/optics.json\";\n// import clientStationsArray from \"./res/clientStations.json\";\n\nimport clientStationIcon from \"./img/client_station_icon.png\";\nimport switchIcon from \"./img/switch_icon.png\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      currentForm: null,\n      displayedFeatures: null,\n      featureInfo: {\n        featureCoordinates: null,\n        featureContainerArray: null,\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null,\n      },\n      editedFeatureInfo: {\n        featureCoordinates: null,\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null,\n      },\n      switchesContainerArray: [null],\n      opticsContainerArray: null,\n      clientStationsContainerArray: null,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleZoom = this.handleZoom.bind(this);\n\n    this.setSwitchesToRightControlPanel = this.setSwitchesToRightControlPanel.bind(\n      this\n    );\n\n    this.setOpticsToRightControlPanel = this.setOpticsToRightControlPanel.bind(\n      this\n    );\n\n    this.setClientStationsToRightControlPanel = this.setClientStationsToRightControlPanel.bind(\n      this\n    );\n\n    this.initMapComponent = this.initMapComponent.bind(this);\n\n    this.changeFeaturesSize = this.changeFeaturesSize.bind(this);\n\n    this.getFeatureInfo = this.getFeatureInfo.bind(this);\n    this.getfeatureInfoBlock = this.getfeatureInfoBlock.bind(this);\n\n    this.getEditingOrAddingForm = this.getEditingOrAddingForm.bind(this);\n  }\n\n  //\n  //switch control methods\n  addNewSwitch(data) {\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n    fetch(\"/api/addSwitch\", options)\n      .then((res) => {\n        console.log(res.json());\n      })\n      .then(() => {\n        this.getSwitches();\n      });\n  }\n\n  editSwitchInfo(data) {\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n    fetch(\"/api/editSwitch\", options);\n  }\n\n  deleteSwitch(data) {\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n    fetch(\"/api/deleteSwitch\", options)\n      .then((res) => {\n        console.log(res.json());\n      })\n      .then(() => {\n        this.getSwitches();\n      });\n  }\n  //\n  //\n\n  initMapComponent() {\n    const extentView = transformExtent(\n      [\n        20.969893 /** min x */,\n        57.540673 /** min y */,\n        28.413477 /** max x */,\n        59.894102 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n    const extentLayer = transformExtent(\n      [\n        16.581885 /** min x */,\n        55.671002 /** min y */,\n        32.794556 /** max x */,\n        61.543774 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n\n    const layerVisibilityControl = (function (Control) {\n      function layerVisibilityControl(layerName, className, buttontext) {\n        const button = document.createElement(\"button\");\n        button.innerHTML = buttontext;\n\n        var element = document.createElement(\"div\");\n        element.className = className + \" ol-unselectable ol-control\";\n        element.appendChild(button);\n\n        Control.call(this, {\n          element: element,\n        });\n\n        button.addEventListener(\n          \"click\",\n          this.handlelayerVisibilityControl.bind(this, layerName),\n          false\n        );\n      }\n\n      if (Control) layerVisibilityControl.__proto__ = Control;\n      layerVisibilityControl.prototype = Object.create(\n        Control && Control.prototype\n      );\n      layerVisibilityControl.prototype.constructor = layerVisibilityControl;\n\n      layerVisibilityControl.prototype.handlelayerVisibilityControl = function handlelayerVisibilityControl(\n        layerName\n      ) {\n        map\n          .getLayers()\n          .getArray()\n          .map((layer) => {\n            if (layer.getClassName() === layerName) {\n              layer.setVisible(!layer.getVisible());\n            }\n          });\n      };\n\n      return layerVisibilityControl;\n    })(Control);\n\n    const map = new Map({\n      target: this.refs.mapContainer,\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n          extent: extentLayer,\n          zIndex: 0,\n        }),\n      ],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5,\n      }),\n      controls: defaults({\n        attributionOptions: {\n          target: this.refs.mapContainer,\n        },\n      }).extend([\n        new layerVisibilityControl(\n          \"switchesLayer\",\n          \"switches-visible\",\n          \"switches\"\n        ),\n        new layerVisibilityControl(\n          \"opticsLayer\",\n          \"optics-visible\",\n          \"optic cables\"\n        ),\n        new layerVisibilityControl(\n          \"clientStationsLayer\",\n          \"clientStations-visible\",\n          \"client stations\"\n        ),\n      ]),\n    });\n    let switchFeatureArray = [];\n    let opticsFeatureArray = [];\n    let clientStationsFeatureArray = [];\n\n    //get switches from server\n\n    fetch(\"/api/switches\")\n      .then((res) => res.json())\n      .then((switches) =>\n        switches.map((data) => {\n          let featureElement = new Feature({\n            geometry: new Point(fromLonLat(data.coordinates)),\n            featureType: \"switch\",\n            address: data.address,\n            ipAddress: data.ipAddress,\n            info: data.info,\n            locationInfo: data.locationInfo,\n            featureCoordinates: data.coordinates,\n          });\n\n          switchFeatureArray.push(featureElement);\n        })\n      );\n    this.setState({\n      switchesContainerArray: switchFeatureArray,\n    });\n    // switchesArray.map((data) => {\n    //   let featureElement = new Feature({\n    //     geometry: new Point(fromLonLat(data.coordinates)),\n    //     featureType: \"switch\",\n    //     address: data.address,\n    //     ipAddress: data.ipAddress,\n    //     info: data.info,\n    //     locationInfo: data.locationInfo,\n    //     featureCoordinates: data.coordinates,\n    //   });\n\n    //   switchFeatureArray.push(featureElement);\n\n    //   this.setState({\n    //     switchesContainerArray: switchFeatureArray,\n    //   });\n    // });\n\n    //get optics from server\n    fetch(\"/api/optics\")\n      .then((res) => res.json())\n      .then((optics) =>\n        optics.map((data) => {\n          let coordinatesArray = [];\n          data.coordinates.map((coordinate) => {\n            coordinatesArray.push(fromLonLat(coordinate));\n          });\n\n          let featureElement = new Feature({\n            geometry: new LineString(coordinatesArray),\n            featureType: \"optics\",\n            address: data.address,\n            ipAddress: data.ipAddress,\n            info: data.info,\n            locationInfo: data.locationInfo,\n            featureCoordinates: data.coordinates,\n          });\n\n          opticsFeatureArray.push(featureElement);\n          this.setState({\n            opticsContainerArray: opticsFeatureArray,\n          });\n        })\n      );\n\n    // opticsArray.map((data) => {\n    //       let coordinatesArray = [];\n    //       data.coordinates.map((coordinate) => {\n    //         coordinatesArray.push(fromLonLat(coordinate));\n    //       });\n\n    //       let featureElement = new Feature({\n    //         geometry: new LineString(coordinatesArray),\n    //         featureType: \"optics\",\n    //         address: data.address,\n    //         ipAddress: data.ipAddress,\n    //         info: data.info,\n    //         locationInfo: data.locationInfo,\n    //         featureCoordinates: data.coordinates,\n    //       });\n\n    //       opticsFeatureArray.push(featureElement);\n    //       this.setState({\n    //         opticsContainerArray: opticsFeatureArray,\n    //       });\n    //     });\n\n    //get client stations from server\n    fetch(\"/api/clientStations\")\n      .then((res) => res.json())\n      .then((clientStations) =>\n        clientStations.map((data) => {\n          let featureElement = new Feature({\n            geometry: new Point(fromLonLat(data.coordinates)),\n            featureType: \"clientStation\",\n            address: data.address,\n            ipAddress: data.ipAddress,\n            info: data.info,\n            locationInfo: data.locationInfo,\n            featureCoordinates: data.coordinates,\n          });\n\n          clientStationsFeatureArray.push(featureElement);\n          this.setState({\n            clientStationsContainerArray: clientStationsFeatureArray,\n          });\n        })\n      );\n\n    // clientStationsArray.map((data) => {\n    //   let featureElement = new Feature({\n    //     geometry: new Point(fromLonLat(data.coordinates)),\n    //     featureType: \"clientStation\",\n    //     address: data.address,\n    //     ipAddress: data.ipAddress,\n    //     info: data.info,\n    //     locationInfo: data.locationInfo,\n    //     featureCoordinates: data.coordinates,\n    //   });\n\n    //   clientStationsFeatureArray.push(featureElement);\n    //   this.setState({\n    //     clientStationsContainerArray: clientStationsFeatureArray,\n    //   });\n    // });\n\n    let opticsLayerSource = new VectorSource({\n      features: opticsFeatureArray,\n    });\n\n    this.opticsLayer = new VectorLayer({\n      className: \"opticsLayer\",\n      source: opticsLayerSource,\n      visible: true,\n      style: new Style({\n        stroke: new Stroke({\n          width: 2,\n          color: \"skyblue\",\n        }),\n      }),\n    });\n\n    let clientStationsLayerSource = new VectorSource({\n      features: clientStationsFeatureArray,\n    });\n\n    this.clientStationsLayer = new VectorLayer({\n      className: \"clientStationsLayer\",\n      source: clientStationsLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: clientStationIcon,\n          scale: 0.09,\n        }),\n      }),\n    });\n\n    let switchesLayerSource = new VectorSource({\n      features: switchFeatureArray,\n    });\n    console.log(switchesLayerSource);\n    this.switchesLayer = new VectorLayer({\n      className: \"switchesLayer\",\n      source: switchesLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: switchIcon,\n          scale: 0.09,\n        }),\n      }),\n    });\n\n    //layers with network equipment\n\n    //map feature settings\n\n    //layers settings\n    map.addLayer(this.clientStationsLayer);\n    map.addLayer(this.switchesLayer);\n    map.addLayer(this.opticsLayer);\n    //layers settings\n    //click on map\n    map.on(\n      \"click\",\n      function (pointOfClick) {\n        const clickedCoordinate = transform(\n          pointOfClick.coordinate,\n          \"EPSG:3857\",\n          \"EPSG:4326\"\n        );\n\n        let coordinateString =\n          clickedCoordinate[0].toFixed(6) +\n          \",\" +\n          clickedCoordinate[1].toFixed(6);\n        this.setState({ coordinates: coordinateString });\n\n        map.forEachFeatureAtPixel(\n          pointOfClick.pixel,\n          function (feature) {\n            this.setState({\n              featureInfo: {\n                featureCoordinates: feature.getProperties().featureCoordinates,\n                address: feature.getProperties().address,\n                ipAddress: feature.getProperties().ipAddress,\n                info: feature.getProperties().info,\n                locationInfo: feature.getProperties().locationInfo,\n                featureContainerArray: feature.getProperties()\n                  .featureContainerArray,\n              },\n            });\n            this.state.map\n              .getView()\n              .animate({ center: fromLonLat(clickedCoordinate) }, { zoom: 19 });\n          }.bind(this)\n        );\n      }.bind(this)\n    );\n\n    // change features size on zoom change\n    map.getView().on(\"propertychange\", (e) => {\n      // switch (e.key) {\n      //   case \"resolution\":\n      //     this.handleZoom(map.getView().getZoom());\n      //     break;\n      // }\n      if (e.key === \"resolution\") {\n        this.handleZoom(map.getView().getZoom());\n      }\n    });\n\n    this.setState({\n      map: map,\n    });\n  }\n\n  componentDidMount() {\n    this.initMapComponent();\n    console.log(this.state.switchesContainerArray);\n  }\n\n  setSwitchesToRightControlPanel() {\n    this.setState({\n      displayedFeatures: this.state.switchesContainerArray,\n    });\n  }\n  setOpticsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: this.state.opticsContainerArray,\n    });\n  }\n  setClientStationsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: this.state.clientStationsContainerArray,\n    });\n  }\n\n  handleRightPanelItemClick(item) {\n    if (item.getProperties().ipAddress === null) {\n      this.state.map.getView().animate(\n        {\n          center: fromLonLat(item.getProperties().featureCoordinates[0]),\n        },\n        { zoom: 17.5 }\n      );\n    } else {\n      this.state.map\n        .getView()\n        .animate(\n          { center: fromLonLat(item.getProperties().featureCoordinates) },\n          { zoom: 19 }\n        );\n    }\n\n    this.setState({\n      featureInfo: {\n        featureCoordinates: item.getProperties().featureCoordinates,\n        address: item.getProperties().address,\n        ipAddress: item.getProperties().ipAddress,\n        info: item.getProperties().info,\n        locationInfo: item.getProperties().locationInfo,\n      },\n    });\n    // switch (item.getProperties().featureType) {\n    //   case \"switch\":\n    //     console.log(this.state.switchesContainerArray);\n    //     break;\n    //   case \"clientStation\":\n    //     console.log(this.state.clientStationsContainerArray);\n    //     break;\n    //   case \"optics\":\n    //     console.log(this.state.opticsContainerArray);\n    //     break;\n    //   default:\n    //     console.log(item.getProperties().featureType);\n    // }\n  }\n\n  changeFeaturesSize(strokeWidth, iconsScale) {\n    this.switchesLayer.setStyle(\n      new Style({\n        image: new Icon({\n          opacity: 1,\n          src: switchIcon,\n          scale: iconsScale,\n        }),\n      })\n    );\n    this.opticsLayer.setStyle(\n      new Style({\n        stroke: new Stroke({\n          width: strokeWidth,\n          color: \"skyblue\",\n        }),\n      })\n    );\n    this.clientStationsLayer.setStyle(\n      new Style({\n        image: new Icon({\n          opacity: 1,\n          src: clientStationIcon,\n          scale: iconsScale,\n        }),\n      })\n    );\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12) {\n      this.changeFeaturesSize(0.5, 0.01);\n    } else if (zoomSize < 13) {\n      this.changeFeaturesSize(2, 0.05);\n    } else if (zoomSize < 14) {\n      this.changeFeaturesSize(2, 0.08);\n    } else if (zoomSize < 16) {\n      this.changeFeaturesSize(2, 0.1);\n    } else if (zoomSize < 18) {\n      this.changeFeaturesSize(4, 0.12);\n    } else {\n      this.changeFeaturesSize(7, 0.25);\n    }\n  }\n\n  getFeatureInfo(featureInfo) {\n    return featureInfo !== null ? (\n      <div className=\"featureInfoElement\">{featureInfo}</div>\n    ) : (\n      <div className=\"hidden\"></div>\n    );\n  }\n  getfeatureInfoBlock() {\n    if (this.state.featureInfo.featureCoordinates !== null) {\n      return (\n        <div className=\"featureInfo\">\n          {this.getFeatureInfo(this.state.featureInfo.address)}\n          {this.getFeatureInfo(this.state.featureInfo.ipAddress)}\n          {this.getFeatureInfo(this.state.featureInfo.info)}\n          {this.getFeatureInfo(this.state.featureInfo.locationInfo)}\n          <div\n            className=\"editButton\"\n            onClick={() => {\n              this.setState({\n                currentForm: \"edit\",\n              });\n            }}\n          >\n            Edit\n          </div>\n        </div>\n      );\n    } else {\n      return <div className=\"hidden\"></div>;\n    }\n  }\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n    console.log(this.refs.coordinateFormField.value);\n    console.log(this.refs.addressFormField.value);\n    console.log(this.refs.ipAddressFormField.value);\n    console.log(this.refs.locationInfoFormField.value);\n    console.log(this.refs.infoFormField.value);\n    this.setState({\n      currentForm: null,\n    });\n  };\n  getEditingOrAddingForm() {\n    if (this.state.currentForm === \"add\") {\n      return (\n        <div className=\"formContainer\">\n          <form className=\"addForm\">\n            <textarea className=\"formField\" ref=\"coordinateFormField\">\n              {this.state.coordinates}\n            </textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"addressFormField\"\n              placeholder=\"address\"\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"ipAddressFormField\"\n              placeholder=\"ip address\"\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"locationInfoFormField\"\n              placeholder=\"location info\"\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"infoFormField\"\n              placeholder=\"additional info\"\n            ></textarea>\n            <div className=\"formButtonsContainer\">\n              <button type=\"submit\">Submit</button>\n            </div>\n          </form>\n        </div>\n      );\n    } else if (this.state.currentForm === \"edit\") {\n      return (\n        <div className=\"formContainer\">\n          <form className=\"editForm\" onSubmit={this.handleSubmit}>\n            <textarea\n              className=\"formField\"\n              ref=\"coordinateFormField\"\n              defaultValue={this.state.featureInfo.featureCoordinates}\n              style={{ backgroundColor: \"lightgray\" }}\n              readOnly\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"addressFormField\"\n              placeholder=\"address\"\n              defaultValue={this.state.featureInfo.address}\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"ipAddressFormField\"\n              placeholder=\"ip address\"\n              defaultValue={this.state.featureInfo.ipAddress}\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"locationInfoFormField\"\n              placeholder=\"location info\"\n              defaultValue={this.state.featureInfo.locationInfo}\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"infoFormField\"\n              placeholder=\"additional info\"\n              defaultValue={this.state.featureInfo.info}\n            ></textarea>\n            <div className=\"formButtonsContainer\">\n              <button type=\"button\">Delete</button>\n              <button type=\"submit\">Submit</button>\n            </div>\n          </form>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"opticMapComponent\">\n        <div className=\"leftMapPanel\">\n          <div className=\"coordinateString\" id=\"coordinateString\">\n            {this.state.coordinates}\n          </div>\n\n          <div className=\"objectButtons\">\n            <div className=\"featureInfoAddControls\">\n              <div\n                className=\"objectButton\"\n                onClick={this.setSwitchesToRightControlPanel}\n              >\n                switches\n              </div>\n              {/* <div className=\"addFeatureButton\">add</div> */}\n            </div>\n            <div className=\"featureInfoAddControls\">\n              <div\n                className=\"objectButton\"\n                onClick={this.setOpticsToRightControlPanel}\n              >\n                optic cable\n              </div>\n              {/* <div className=\"addFeatureButton\">add</div> */}\n            </div>\n            <div className=\"featureInfoAddControls\">\n              <div\n                className=\"objectButton\"\n                onClick={this.setClientStationsToRightControlPanel}\n              >\n                client stations\n              </div>\n              {/* <div className=\"addFeatureButton\">add</div> */}\n            </div>\n          </div>\n          {this.getfeatureInfoBlock()}\n          {this.getEditingOrAddingForm(\n            this.state.featureInfo.featureCoordinates,\n            this.state.featureInfo.address,\n            this.state.featureInfo.ipAddress,\n            this.state.featureInfo.locationInfo,\n            this.state.featureInfo.info\n          )}\n        </div>\n        <div className=\"mapContainer\" ref=\"mapContainer\"></div>\n        <div className=\"rightMapPanel\">\n          <div className=\"displayedFeatures\">\n            {this.state.displayedFeatures !== null ? (\n              this.state.displayedFeatures.map((feature) => {\n                return (\n                  <li\n                    className=\"displayedFeature\"\n                    key={feature.getProperties().featureCoordinates}\n                    onClick={this.handleRightPanelItemClick.bind(this, feature)}\n                  >\n                    {feature.getProperties().address}\n                  </li>\n                );\n              })\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OpticMap;\n"]},"metadata":{},"sourceType":"module"}