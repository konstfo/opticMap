{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\javascript_studying\\\\opticMap\\\\optic-map\\\\src\\\\OpticMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, View } from \"ol\"; // import getPixelFromCoordinate from \"ol/Map\";\n\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Stroke, Style, Icon } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport LineString from \"ol/geom/LineString\"; // import switchesArray from \"./res/switches.json\";\n// import opticsArray from \"./res/optics.json\";\n// import clientStationsArray from \"./res/clientStations.json\";\n\nimport clientStationIcon from \"./img/client_station_icon.png\";\nimport switchIcon from \"./img/switch_icon.png\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleEditSubmit = (evt, itemType) => {\n      evt.preventDefault();\n      let editedItem = {\n        address: this.refs.addressFormField.value,\n        locationInfo: this.refs.locationInfoFormField.value,\n        ipAddress: this.refs.ipAddressFormField.value,\n        info: this.refs.infoFormField.value,\n        coordinates: this.refs.coordinateFormField.value.split(\",\")\n      };\n      let itemToEdit = {\n        address: this.state.featureInfo.address,\n        locationInfo: this.state.featureInfo.locationInfo,\n        ipAddress: this.state.featureInfo.ipAddress,\n        info: this.state.featureInfo.info,\n        coordinates: this.state.featureInfo.featureCoordinates\n      };\n      this.setState({\n        currentForm: null\n      });\n\n      function transformCoordinates(coordinates) {\n        let opticsCoordinates = [];\n        let formCoordinatesArray = coordinates.split(\",\");\n        console.log(formCoordinatesArray);\n        let arrayLenght = formCoordinatesArray.length;\n        let i = 0;\n\n        while (i < arrayLenght) {\n          console.log(formCoordinatesArray[i]);\n          console.log(formCoordinatesArray[i + 1]);\n          opticsCoordinates.push(new Array(formCoordinatesArray[i], formCoordinatesArray[i + 1]));\n          i++;\n          i++;\n        }\n\n        return opticsCoordinates;\n      }\n\n      this.editSwitch(itemToEdit, editedItem);\n      this.editClientStation(itemToEdit, editedItem);\n      this.editOptics({\n        address: this.state.featureInfo.address,\n        locationInfo: this.state.featureInfo.locationInfo,\n        ipAddress: this.state.featureInfo.ipAddress,\n        info: this.state.featureInfo.info,\n        coordinates: transformCoordinates(this.state.featureInfo.featureCoordinates)\n      }, {\n        address: this.refs.addressFormField.value,\n        locationInfo: this.refs.locationInfoFormField.value,\n        ipAddress: this.refs.ipAddressFormField.value,\n        info: this.refs.infoFormField.value,\n        coordinates: transformCoordinates(this.refs.coordinateFormField.value.split(\",\"))\n      });\n    };\n\n    this.handleDeleteButton = () => {\n      let itemToDelete = {\n        address: this.refs.addressFormField.value,\n        locationInfo: this.refs.locationInfoFormField.value,\n        ipAddress: this.refs.ipAddressFormField.value,\n        info: this.refs.infoFormField.value,\n        coordinates: this.refs.coordinateFormField.value.split(\",\")\n      };\n      let opticsCoordinates = [];\n      let formCoordinatesArray = this.refs.coordinateFormField.value.split(\",\");\n      console.log(formCoordinatesArray);\n      let arrayLenght = formCoordinatesArray.length;\n      let i = 0;\n\n      while (i < arrayLenght) {\n        console.log(formCoordinatesArray[i]);\n        console.log(formCoordinatesArray[i + 1]);\n        opticsCoordinates.push(new Array(formCoordinatesArray[i], formCoordinatesArray[i + 1]));\n        i++;\n        i++;\n      }\n\n      this.deleteSwitch(itemToDelete);\n      this.deleteClientStation(itemToDelete);\n      this.deleteOptics({\n        address: this.refs.addressFormField.value,\n        locationInfo: this.refs.locationInfoFormField.value,\n        ipAddress: this.refs.ipAddressFormField.value,\n        info: this.refs.infoFormField.value,\n        coordinates: opticsCoordinates\n      });\n    };\n\n    this.handleAddSubmit = evt => {\n      evt.preventDefault();\n      let itemType = this.state.formItemType;\n\n      switch (itemType) {\n        case \"switch\":\n          let switchCoordinatesFromForm = this.refs.coordinateFormField.value.split(\",\");\n\n          if (!Array.isArray(switchCoordinatesFromForm[0])) {\n            this.addNewSwitch({\n              address: this.refs.addressFormField.value,\n              locationInfo: this.refs.locationInfoFormField.value,\n              ipAddress: this.refs.ipAddressFormField.value,\n              info: this.refs.infoFormField.value,\n              coordinates: this.refs.coordinateFormField.value.split(\",\")\n            });\n          } else {\n            console.log(\"Wrong coordinates for switch.\");\n          }\n\n          break;\n\n        case \"clientStation\":\n          let clientStationCoordinatesFromForm = this.refs.coordinateFormField.value.split(\",\");\n\n          if (!Array.isArray(clientStationCoordinatesFromForm[0])) {\n            this.addNewClientStation({\n              address: this.refs.addressFormField.value,\n              locationInfo: this.refs.locationInfoFormField.value,\n              ipAddress: this.refs.ipAddressFormField.value,\n              info: this.refs.infoFormField.value,\n              coordinates: this.refs.coordinateFormField.value.split(\",\")\n            });\n          } else {\n            console.log(\"Wrong coordinates for client station.\");\n          }\n\n          break;\n\n        case \"opticCable\":\n          let opticsCoordinates = [];\n          let formCoordinatesArray = this.refs.coordinateFormField.value.split(\",\");\n          console.log(formCoordinatesArray);\n          let arrayLenght = formCoordinatesArray.length;\n          console.log(arrayLenght);\n\n          if (arrayLenght % 2 !== 0 || arrayLenght === 0) {\n            console.log(\"Wrong optics coordinates.\");\n          } else {\n            if (arrayLenght <= 2) {\n              console.log(\"need more points.\");\n            } else {\n              let i = 0;\n\n              while (i < arrayLenght) {\n                console.log(formCoordinatesArray[i]);\n                console.log(formCoordinatesArray[i + 1]);\n                opticsCoordinates.push(new Array(formCoordinatesArray[i], formCoordinatesArray[i + 1]));\n                i++;\n                i++;\n              }\n\n              console.log(opticsCoordinates);\n              this.addOptics({\n                address: this.refs.addressFormField.value,\n                locationInfo: this.refs.locationInfoFormField.value,\n                ipAddress: this.refs.ipAddressFormField.value,\n                info: this.refs.infoFormField.value,\n                coordinates: opticsCoordinates\n              });\n            }\n          }\n\n          break;\n\n        default:\n          console.log(\"Default case\");\n      }\n\n      this.setState({\n        currentForm: null\n      });\n    };\n\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      currentForm: null,\n      formItemType: null,\n      displayedFeatures: null,\n      featureInfo: {\n        featureCoordinates: null,\n        featureContainerArray: null,\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null\n      },\n      switchesContainerArray: null,\n      opticsContainerArray: null,\n      clientStationsContainerArray: null\n    };\n    this.addButton = this.handleAddButton.bind(this);\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n    this.handleAddSubmit = this.handleAddSubmit.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.setSwitchesToRightControlPanel = this.setSwitchesToRightControlPanel.bind(this);\n    this.setOpticsToRightControlPanel = this.setOpticsToRightControlPanel.bind(this);\n    this.setClientStationsToRightControlPanel = this.setClientStationsToRightControlPanel.bind(this);\n    this.initMapComponent = this.initMapComponent.bind(this);\n    this.changeFeaturesSize = this.changeFeaturesSize.bind(this);\n    this.getFeatureInfo = this.getFeatureInfo.bind(this);\n    this.getfeatureInfoBlock = this.getfeatureInfoBlock.bind(this);\n    this.getEditingOrAddingForm = this.getEditingOrAddingForm.bind(this);\n    this.addNewSwitch = this.addNewSwitch.bind(this);\n    this.deleteSwitch = this.deleteSwitch.bind(this);\n    this.editSwitchInfo = this.editSwitchInfo.bind(this);\n    this.addOptics = this.addOptics.bind(this);\n    this.deleteOptics = this.deleteOptics.bind(this);\n    this.editOptics = this.editOptics.bind(this);\n    this.addNewClientStation = this.addNewClientStation.bind(this);\n    this.deleteClientStation = this.deleteClientStation.bind(this);\n    this.editClientStationInfo = this.editClientStationInfo.bind(this);\n  } //\n  //switch control methods\n\n\n  addNewSwitch(data) {\n    console.log(\"addswitch\");\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"/api/addSwitch\", options).then(() => {\n      this.initMapComponent();\n    });\n  }\n\n  editSwitchInfo(data) {\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"/api/editSwitch\", options);\n  }\n\n  deleteSwitch(data) {\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"/api/deleteSwitch\", options).then(res => {\n      console.log(res.json());\n    }).then(() => {\n      this.initMapComponent();\n    });\n  } //\n  //\n  //\n  //client stations control methods\n\n\n  addNewClientStation(data) {\n    console.log(\"addswitch\");\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"/api/addClientStation\", options).then(() => {\n      this.initMapComponent();\n    });\n  }\n\n  editClientStationInfo(data) {\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"/api/editClientStation\", options).then(() => {\n      this.initMapComponent();\n    });\n  }\n\n  deleteClientStation(data) {\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"/api/deleteClientStation\", options).then(res => {\n      console.log(res.json());\n    }).then(() => {\n      this.initMapComponent();\n    });\n  } //\n  //\n  //\n  //optic cable control methods\n\n\n  addOptics(data) {\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"/api/addOptics\", options).then(() => {\n      this.initMapComponent();\n    });\n  }\n\n  editOptics(data) {\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"/api/editOptics\", options);\n  }\n\n  deleteOptics(data) {\n    let options = {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    };\n    fetch(\"/api/deleteOptics\", options).then(res => {\n      console.log(res.json());\n    }).then(() => {\n      this.initMapComponent();\n    });\n  } //\n  //\n\n\n  initMapComponent() {\n    let switchFeatureArray = [];\n    let opticsFeatureArray = [];\n    let clientStationsFeatureArray = []; //get switches from server\n\n    fetch(\"/api/switches\").then(res => res.json()).then(switches => {\n      switches.map(data => {\n        let featureElement = new Feature({\n          geometry: new Point(fromLonLat(data.coordinates)),\n          featureType: \"switch\",\n          address: data.address,\n          ipAddress: data.ipAddress,\n          info: data.info,\n          locationInfo: data.locationInfo,\n          featureCoordinates: data.coordinates\n        });\n        switchesLayerSource.addFeature(featureElement);\n        switchFeatureArray.push(featureElement);\n        this.setState({\n          switchesContainerArray: switchFeatureArray\n        });\n      });\n    }); //get optics from server\n\n    fetch(\"/api/optics\").then(res => res.json()).then(optics => optics.map(data => {\n      let coordinatesArray = [];\n      data.coordinates.map(coordinate => {\n        coordinatesArray.push(fromLonLat(coordinate));\n      });\n      let featureElement = new Feature({\n        geometry: new LineString(coordinatesArray),\n        featureType: \"optics\",\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n        featureCoordinates: data.coordinates\n      });\n      opticsLayerSource.addFeature(featureElement);\n      opticsFeatureArray.push(featureElement);\n      this.setState({\n        opticsContainerArray: opticsFeatureArray\n      });\n    }));\n    fetch(\"/api/clientStations\").then(res => res.json()).then(clientStations => {\n      clientStations.map(data => {\n        let featureElement = new Feature({\n          geometry: new Point(fromLonLat(data.coordinates)),\n          featureType: \"clientStation\",\n          address: data.address,\n          ipAddress: data.ipAddress,\n          info: data.info,\n          locationInfo: data.locationInfo,\n          featureCoordinates: data.coordinates\n        });\n        clientStationsLayerSource.addFeature(featureElement);\n        clientStationsFeatureArray.push(featureElement);\n        this.setState({\n          clientStationsContainerArray: clientStationsFeatureArray\n        });\n      });\n    });\n    const extentView = transformExtent([20.969893\n    /** min x */\n    , 57.540673\n    /** min y */\n    , 28.413477\n    /** max x */\n    , 59.894102\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n    const extentLayer = transformExtent([16.581885\n    /** min x */\n    , 55.671002\n    /** min y */\n    , 32.794556\n    /** max x */\n    , 61.543774\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n\n    const layerVisibilityControl = function (Control) {\n      function layerVisibilityControl(layerName, className, buttontext) {\n        const button = document.createElement(\"button\");\n        button.innerHTML = buttontext;\n        var element = document.createElement(\"div\");\n        element.className = className + \" ol-unselectable ol-control\";\n        element.appendChild(button);\n        Control.call(this, {\n          element: element\n        });\n        button.addEventListener(\"click\", this.handlelayerVisibilityControl.bind(this, layerName), false);\n      }\n\n      if (Control) layerVisibilityControl.__proto__ = Control;\n      layerVisibilityControl.prototype = Object.create(Control && Control.prototype);\n      layerVisibilityControl.prototype.constructor = layerVisibilityControl;\n\n      layerVisibilityControl.prototype.handlelayerVisibilityControl = function handlelayerVisibilityControl(layerName) {\n        map.getLayers().getArray().map(layer => {\n          if (layer.getClassName() === layerName) {\n            layer.setVisible(!layer.getVisible());\n          }\n        });\n      };\n\n      return layerVisibilityControl;\n    }(Control);\n\n    const map = new Map({\n      target: this.refs.mapContainer,\n      layers: [new TileLayer({\n        source: new OSM(),\n        extent: extentLayer,\n        zIndex: 0\n      })],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5\n      }),\n      controls: defaults({\n        attributionOptions: {\n          target: this.refs.mapContainer\n        }\n      }).extend([new layerVisibilityControl(\"switchesLayer\", \"switches-visible\", \"switches\"), new layerVisibilityControl(\"opticsLayer\", \"optics-visible\", \"optic cables\"), new layerVisibilityControl(\"clientStationsLayer\", \"clientStations-visible\", \"client stations\")])\n    });\n    let opticsLayerSource = new VectorSource({\n      features: opticsFeatureArray\n    });\n    this.opticsLayer = new VectorLayer({\n      className: \"opticsLayer\",\n      source: opticsLayerSource,\n      visible: true,\n      style: new Style({\n        stroke: new Stroke({\n          width: 2,\n          color: \"skyblue\"\n        })\n      })\n    });\n    let clientStationsLayerSource = new VectorSource({\n      features: clientStationsFeatureArray\n    });\n    this.clientStationsLayer = new VectorLayer({\n      className: \"clientStationsLayer\",\n      source: clientStationsLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: clientStationIcon,\n          scale: 0.09\n        })\n      })\n    });\n    let switchesLayerSource = new VectorSource({\n      features: switchFeatureArray\n    });\n    this.switchesLayer = new VectorLayer({\n      className: \"switchesLayer\",\n      source: switchesLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: switchIcon,\n          scale: 0.09\n        })\n      })\n    }); //layers with network equipment\n    //map feature settings\n    //layers settings\n\n    map.addLayer(this.clientStationsLayer);\n    map.addLayer(this.switchesLayer);\n    map.addLayer(this.opticsLayer); //layers settings\n    //click on map\n\n    map.on(\"click\", function (pointOfClick) {\n      const clickedCoordinate = transform(pointOfClick.coordinate, \"EPSG:3857\", \"EPSG:4326\");\n      let coordinateString = clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n      this.setState({\n        coordinates: coordinateString,\n        featureCoordinates: coordinateString\n      });\n      map.forEachFeatureAtPixel(pointOfClick.pixel, function (feature) {\n        this.setState({\n          featureInfo: {\n            featureCoordinates: feature.getProperties().featureCoordinates,\n            address: feature.getProperties().address,\n            ipAddress: feature.getProperties().ipAddress,\n            info: feature.getProperties().info,\n            locationInfo: feature.getProperties().locationInfo,\n            featureContainerArray: feature.getProperties().featureContainerArray\n          }\n        });\n        this.state.map.getView().animate({\n          center: fromLonLat(clickedCoordinate)\n        }, {\n          zoom: 19\n        });\n      }.bind(this));\n    }.bind(this)); // change features size on zoom change\n\n    map.getView().on(\"propertychange\", e => {\n      // switch (e.key) {\n      //   case \"resolution\":\n      //     this.handleZoom(map.getView().getZoom());\n      //     break;\n      // }\n      if (e.key === \"resolution\") {\n        this.handleZoom(map.getView().getZoom());\n      }\n    });\n    this.setState({\n      map: map\n    });\n  }\n\n  componentDidMount() {\n    this.initMapComponent();\n  }\n\n  setSwitchesToRightControlPanel() {\n    this.setState({\n      displayedFeatures: this.state.switchesContainerArray\n    });\n  }\n\n  setOpticsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: this.state.opticsContainerArray\n    });\n  }\n\n  setClientStationsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: this.state.clientStationsContainerArray\n    });\n  }\n\n  handleRightPanelItemClick(item) {\n    if (this.state.currentForm != null) {\n      this.setState({\n        currentForm: null,\n        formItemType: null\n      });\n    }\n\n    let coordinatesForAnimation;\n    let featureCoordinates = item.getProperties().featureCoordinates;\n\n    if (Array.isArray(featureCoordinates[0])) {\n      coordinatesForAnimation = featureCoordinates[0];\n    } else {\n      coordinatesForAnimation = featureCoordinates;\n    }\n\n    this.state.map.getView().animate({\n      center: fromLonLat(coordinatesForAnimation)\n    }, {\n      zoom: 18.5\n    });\n    this.setState({\n      featureInfo: {\n        featureCoordinates: item.getProperties().featureCoordinates,\n        address: item.getProperties().address,\n        ipAddress: item.getProperties().ipAddress,\n        info: item.getProperties().info,\n        locationInfo: item.getProperties().locationInfo\n      }\n    });\n  }\n\n  changeFeaturesSize(strokeWidth, iconsScale) {\n    this.switchesLayer.setStyle(new Style({\n      image: new Icon({\n        opacity: 1,\n        src: switchIcon,\n        scale: iconsScale\n      })\n    }));\n    this.opticsLayer.setStyle(new Style({\n      stroke: new Stroke({\n        width: strokeWidth,\n        color: \"skyblue\"\n      })\n    }));\n    this.clientStationsLayer.setStyle(new Style({\n      image: new Icon({\n        opacity: 1,\n        src: clientStationIcon,\n        scale: iconsScale\n      })\n    }));\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12) {\n      this.changeFeaturesSize(0.5, 0.01);\n    } else if (zoomSize < 13) {\n      this.changeFeaturesSize(2, 0.05);\n    } else if (zoomSize < 14) {\n      this.changeFeaturesSize(2, 0.08);\n    } else if (zoomSize < 16) {\n      this.changeFeaturesSize(2, 0.1);\n    } else if (zoomSize < 18) {\n      this.changeFeaturesSize(4, 0.12);\n    } else {\n      this.changeFeaturesSize(7, 0.25);\n    }\n  }\n\n  getFeatureInfo(featureInfo) {\n    return featureInfo !== null ? React.createElement(\"div\", {\n      className: \"featureInfoElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 604\n      },\n      __self: this\n    }, featureInfo) : React.createElement(\"div\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606\n      },\n      __self: this\n    });\n  }\n\n  getfeatureInfoBlock() {\n    if (this.state.featureInfo.featureCoordinates !== null) {\n      return React.createElement(\"div\", {\n        className: \"featureInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 612\n        },\n        __self: this\n      }, this.getFeatureInfo(this.state.featureInfo.address), this.getFeatureInfo(this.state.featureInfo.ipAddress), this.getFeatureInfo(this.state.featureInfo.info), this.getFeatureInfo(this.state.featureInfo.locationInfo), React.createElement(\"div\", {\n        className: \"editButton\",\n        onClick: () => {\n          this.setState({\n            currentForm: null\n          });\n          this.setState({\n            currentForm: \"edit\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 617\n        },\n        __self: this\n      }, \"Edit\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 633\n        },\n        __self: this\n      });\n    }\n  }\n\n  handleAddButton(itemType) {\n    console.log(itemType);\n    this.setState({\n      formItemType: itemType\n    });\n  }\n\n  getEditingOrAddingForm(itemType) {\n    if (this.state.currentForm === \"add\") {\n      return React.createElement(\"div\", {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 831\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"addForm\",\n        onSubmit: evt => this.handleAddSubmit(evt, itemType),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 832\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"coordinateFormField\",\n        placeholder: \"coordinates\",\n        defaultValue: this.state.featureCoordinates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 836\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"addressFormField\",\n        placeholder: \"address\",\n        defaultValue: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"ipAddressFormField\",\n        placeholder: \"ip address\",\n        defaultValue: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 848\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"locationInfoFormField\",\n        placeholder: \"location info\",\n        defaultValue: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 854\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"infoFormField\",\n        placeholder: \"additional info\",\n        defaultValue: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"formButtonsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 866\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 867\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => this.setState({\n          currentForm: null\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 868\n        },\n        __self: this\n      }, \"Cancel\"))));\n    } else if (this.state.currentForm === \"edit\") {\n      return React.createElement(\"div\", {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 880\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"editForm\",\n        onSubmit: evt => this.handleEditSubmit(evt, itemType),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 881\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"coordinateFormField\",\n        defaultValue: this.state.featureInfo.featureCoordinates,\n        style: {\n          backgroundColor: \"lightgray\"\n        },\n        readOnly: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 885\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"addressFormField\",\n        placeholder: \"address\",\n        defaultValue: this.state.featureInfo.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 892\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"ipAddressFormField\",\n        placeholder: \"ip address\",\n        defaultValue: this.state.featureInfo.ipAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 898\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"locationInfoFormField\",\n        placeholder: \"location info\",\n        defaultValue: this.state.featureInfo.locationInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"infoFormField\",\n        placeholder: \"additional info\",\n        defaultValue: this.state.featureInfo.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 910\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"formButtonsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 916\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => {\n          this.handleDeleteButton(itemType);\n          this.setState({\n            currentForm: null\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 917\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 928\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(\"button\", {\n        type: \"button\",\n        onClick: () => this.setState({\n          currentForm: null\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 929\n        },\n        __self: this\n      }, \"Cancel\"))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 940\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"opticMapComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 946\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 947\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"coordinateString\",\n      id: \"coordinateString\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 948\n      },\n      __self: this\n    }, this.state.coordinates), React.createElement(\"div\", {\n      className: \"objectButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 952\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"featureInfoAddControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 953\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      onClick: this.setSwitchesToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 954\n      },\n      __self: this\n    }, \"switches\"), React.createElement(\"div\", {\n      className: \"addFeatureButton\",\n      onClick: () => {\n        this.setState({\n          currentForm: null\n        });\n        this.handleAddButton(\"switch\");\n        this.setState({\n          currentForm: \"add\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 960\n      },\n      __self: this\n    }, \"add\")), React.createElement(\"div\", {\n      className: \"featureInfoAddControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 971\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      onClick: this.setOpticsToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 972\n      },\n      __self: this\n    }, \"optic cable\"), React.createElement(\"div\", {\n      className: \"addFeatureButton\",\n      onClick: () => {\n        this.setState({\n          currentForm: null\n        });\n        this.handleAddButton(\"opticCable\");\n        this.setState({\n          currentForm: \"add\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 978\n      },\n      __self: this\n    }, \"add\")), React.createElement(\"div\", {\n      className: \"featureInfoAddControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 989\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      onClick: this.setClientStationsToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 990\n      },\n      __self: this\n    }, \"client stations\"), React.createElement(\"div\", {\n      className: \"addFeatureButton\",\n      onClick: () => {\n        this.setState({\n          currentForm: null\n        });\n        this.handleAddButton(\"clientStation\");\n        this.setState({\n          currentForm: \"add\"\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 996\n      },\n      __self: this\n    }, \"add\"))), this.getfeatureInfoBlock(), this.getEditingOrAddingForm(this.state.featureInfo.featureCoordinates, this.state.featureInfo.address, this.state.featureInfo.ipAddress, this.state.featureInfo.locationInfo, this.state.featureInfo.info)), React.createElement(\"div\", {\n      className: \"mapContainer\",\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1017\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rightMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1018\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"displayedFeatures\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1019\n      },\n      __self: this\n    }, this.state.displayedFeatures !== null ? this.state.displayedFeatures.map(feature => {\n      return React.createElement(\"li\", {\n        className: \"displayedFeature\",\n        key: feature.getProperties().featureCoordinates,\n        onClick: this.handleRightPanelItemClick.bind(this, feature),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 1023\n        },\n        __self: this\n      }, feature.getProperties().address);\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 1033\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default OpticMap;","map":{"version":3,"sources":["C:/Users/asus/Documents/javascript_studying/opticMap/optic-map/src/OpticMap.js"],"names":["React","Component","Map","View","TileLayer","OSM","fromLonLat","transformExtent","transform","Stroke","Style","Icon","Feature","Point","Control","defaults","VectorLayer","VectorSource","LineString","clientStationIcon","switchIcon","OpticMap","constructor","props","handleEditSubmit","evt","itemType","preventDefault","editedItem","address","refs","addressFormField","value","locationInfo","locationInfoFormField","ipAddress","ipAddressFormField","info","infoFormField","coordinates","coordinateFormField","split","itemToEdit","state","featureInfo","featureCoordinates","setState","currentForm","transformCoordinates","opticsCoordinates","formCoordinatesArray","console","log","arrayLenght","length","i","push","Array","editSwitch","editClientStation","editOptics","handleDeleteButton","itemToDelete","deleteSwitch","deleteClientStation","deleteOptics","handleAddSubmit","formItemType","switchCoordinatesFromForm","isArray","addNewSwitch","clientStationCoordinatesFromForm","addNewClientStation","addOptics","map","displayedFeatures","featureContainerArray","switchesContainerArray","opticsContainerArray","clientStationsContainerArray","addButton","handleAddButton","bind","handleZoom","setSwitchesToRightControlPanel","setOpticsToRightControlPanel","setClientStationsToRightControlPanel","initMapComponent","changeFeaturesSize","getFeatureInfo","getfeatureInfoBlock","getEditingOrAddingForm","editSwitchInfo","editClientStationInfo","data","options","method","headers","body","JSON","stringify","fetch","then","res","json","switchFeatureArray","opticsFeatureArray","clientStationsFeatureArray","switches","featureElement","geometry","featureType","switchesLayerSource","addFeature","optics","coordinatesArray","coordinate","opticsLayerSource","clientStations","clientStationsLayerSource","extentView","extentLayer","layerVisibilityControl","layerName","className","buttontext","button","document","createElement","innerHTML","element","appendChild","call","addEventListener","handlelayerVisibilityControl","__proto__","prototype","Object","create","getLayers","getArray","layer","getClassName","setVisible","getVisible","target","mapContainer","layers","source","extent","zIndex","view","center","zoom","minZoom","controls","attributionOptions","extend","features","opticsLayer","visible","style","stroke","width","color","clientStationsLayer","image","opacity","src","scale","switchesLayer","addLayer","on","pointOfClick","clickedCoordinate","coordinateString","toFixed","forEachFeatureAtPixel","pixel","feature","getProperties","getView","animate","e","key","getZoom","componentDidMount","handleRightPanelItemClick","item","coordinatesForAnimation","strokeWidth","iconsScale","setStyle","zoomSize","backgroundColor","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\n// import getPixelFromCoordinate from \"ol/Map\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Stroke, Style, Icon } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport LineString from \"ol/geom/LineString\";\n// import switchesArray from \"./res/switches.json\";\n// import opticsArray from \"./res/optics.json\";\n// import clientStationsArray from \"./res/clientStations.json\";\n\nimport clientStationIcon from \"./img/client_station_icon.png\";\nimport switchIcon from \"./img/switch_icon.png\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      currentForm: null,\n      formItemType: null,\n      displayedFeatures: null,\n      featureInfo: {\n        featureCoordinates: null,\n        featureContainerArray: null,\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null,\n      },\n      switchesContainerArray: null,\n      opticsContainerArray: null,\n      clientStationsContainerArray: null,\n    };\n\n    this.addButton = this.handleAddButton.bind(this);\n\n    this.handleEditSubmit = this.handleEditSubmit.bind(this);\n    this.handleAddSubmit = this.handleAddSubmit.bind(this);\n\n    this.handleZoom = this.handleZoom.bind(this);\n\n    this.setSwitchesToRightControlPanel = this.setSwitchesToRightControlPanel.bind(\n      this\n    );\n\n    this.setOpticsToRightControlPanel = this.setOpticsToRightControlPanel.bind(\n      this\n    );\n\n    this.setClientStationsToRightControlPanel = this.setClientStationsToRightControlPanel.bind(\n      this\n    );\n\n    this.initMapComponent = this.initMapComponent.bind(this);\n\n    this.changeFeaturesSize = this.changeFeaturesSize.bind(this);\n\n    this.getFeatureInfo = this.getFeatureInfo.bind(this);\n    this.getfeatureInfoBlock = this.getfeatureInfoBlock.bind(this);\n\n    this.getEditingOrAddingForm = this.getEditingOrAddingForm.bind(this);\n\n    this.addNewSwitch = this.addNewSwitch.bind(this);\n    this.deleteSwitch = this.deleteSwitch.bind(this);\n    this.editSwitchInfo = this.editSwitchInfo.bind(this);\n\n    this.addOptics = this.addOptics.bind(this);\n    this.deleteOptics = this.deleteOptics.bind(this);\n    this.editOptics = this.editOptics.bind(this);\n\n    this.addNewClientStation = this.addNewClientStation.bind(this);\n    this.deleteClientStation = this.deleteClientStation.bind(this);\n    this.editClientStationInfo = this.editClientStationInfo.bind(this);\n  }\n\n  //\n  //switch control methods\n  addNewSwitch(data) {\n    console.log(\"addswitch\");\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n    fetch(\"/api/addSwitch\", options).then(() => {\n      this.initMapComponent();\n    });\n  }\n\n  editSwitchInfo(data) {\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n    fetch(\"/api/editSwitch\", options);\n  }\n\n  deleteSwitch(data) {\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n    fetch(\"/api/deleteSwitch\", options)\n      .then((res) => {\n        console.log(res.json());\n      })\n      .then(() => {\n        this.initMapComponent();\n      });\n  }\n  //\n  //\n\n  //\n  //client stations control methods\n  addNewClientStation(data) {\n    console.log(\"addswitch\");\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n    fetch(\"/api/addClientStation\", options).then(() => {\n      this.initMapComponent();\n    });\n  }\n\n  editClientStationInfo(data) {\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n    fetch(\"/api/editClientStation\", options).then(() => {\n      this.initMapComponent();\n    });\n  }\n\n  deleteClientStation(data) {\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n    fetch(\"/api/deleteClientStation\", options)\n      .then((res) => {\n        console.log(res.json());\n      })\n      .then(() => {\n        this.initMapComponent();\n      });\n  }\n  //\n  //\n\n  //\n  //optic cable control methods\n  addOptics(data) {\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n    fetch(\"/api/addOptics\", options).then(() => {\n      this.initMapComponent();\n    });\n  }\n\n  editOptics(data) {\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n    fetch(\"/api/editOptics\", options);\n  }\n\n  deleteOptics(data) {\n    let options = {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(data),\n    };\n    fetch(\"/api/deleteOptics\", options)\n      .then((res) => {\n        console.log(res.json());\n      })\n      .then(() => {\n        this.initMapComponent();\n      });\n  }\n  //\n  //\n\n  initMapComponent() {\n    let switchFeatureArray = [];\n    let opticsFeatureArray = [];\n    let clientStationsFeatureArray = [];\n\n    //get switches from server\n    fetch(\"/api/switches\")\n      .then((res) => res.json())\n      .then((switches) => {\n        switches.map((data) => {\n          let featureElement = new Feature({\n            geometry: new Point(fromLonLat(data.coordinates)),\n            featureType: \"switch\",\n            address: data.address,\n            ipAddress: data.ipAddress,\n            info: data.info,\n            locationInfo: data.locationInfo,\n            featureCoordinates: data.coordinates,\n          });\n          switchesLayerSource.addFeature(featureElement);\n\n          switchFeatureArray.push(featureElement);\n          this.setState({ switchesContainerArray: switchFeatureArray });\n        });\n      });\n\n    //get optics from server\n    fetch(\"/api/optics\")\n      .then((res) => res.json())\n      .then((optics) =>\n        optics.map((data) => {\n          let coordinatesArray = [];\n          data.coordinates.map((coordinate) => {\n            coordinatesArray.push(fromLonLat(coordinate));\n          });\n\n          let featureElement = new Feature({\n            geometry: new LineString(coordinatesArray),\n            featureType: \"optics\",\n            address: data.address,\n            ipAddress: data.ipAddress,\n            info: data.info,\n            locationInfo: data.locationInfo,\n            featureCoordinates: data.coordinates,\n          });\n\n          opticsLayerSource.addFeature(featureElement);\n\n          opticsFeatureArray.push(featureElement);\n          this.setState({\n            opticsContainerArray: opticsFeatureArray,\n          });\n        })\n      );\n\n    fetch(\"/api/clientStations\")\n      .then((res) => res.json())\n      .then((clientStations) => {\n        clientStations.map((data) => {\n          let featureElement = new Feature({\n            geometry: new Point(fromLonLat(data.coordinates)),\n            featureType: \"clientStation\",\n            address: data.address,\n            ipAddress: data.ipAddress,\n            info: data.info,\n            locationInfo: data.locationInfo,\n            featureCoordinates: data.coordinates,\n          });\n          clientStationsLayerSource.addFeature(featureElement);\n\n          clientStationsFeatureArray.push(featureElement);\n          this.setState({\n            clientStationsContainerArray: clientStationsFeatureArray,\n          });\n        });\n      });\n\n    const extentView = transformExtent(\n      [\n        20.969893 /** min x */,\n        57.540673 /** min y */,\n        28.413477 /** max x */,\n        59.894102 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n    const extentLayer = transformExtent(\n      [\n        16.581885 /** min x */,\n        55.671002 /** min y */,\n        32.794556 /** max x */,\n        61.543774 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n\n    const layerVisibilityControl = (function (Control) {\n      function layerVisibilityControl(layerName, className, buttontext) {\n        const button = document.createElement(\"button\");\n        button.innerHTML = buttontext;\n\n        var element = document.createElement(\"div\");\n        element.className = className + \" ol-unselectable ol-control\";\n        element.appendChild(button);\n\n        Control.call(this, {\n          element: element,\n        });\n\n        button.addEventListener(\n          \"click\",\n          this.handlelayerVisibilityControl.bind(this, layerName),\n          false\n        );\n      }\n\n      if (Control) layerVisibilityControl.__proto__ = Control;\n      layerVisibilityControl.prototype = Object.create(\n        Control && Control.prototype\n      );\n      layerVisibilityControl.prototype.constructor = layerVisibilityControl;\n\n      layerVisibilityControl.prototype.handlelayerVisibilityControl = function handlelayerVisibilityControl(\n        layerName\n      ) {\n        map\n          .getLayers()\n          .getArray()\n          .map((layer) => {\n            if (layer.getClassName() === layerName) {\n              layer.setVisible(!layer.getVisible());\n            }\n          });\n      };\n\n      return layerVisibilityControl;\n    })(Control);\n\n    const map = new Map({\n      target: this.refs.mapContainer,\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n          extent: extentLayer,\n          zIndex: 0,\n        }),\n      ],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5,\n      }),\n      controls: defaults({\n        attributionOptions: {\n          target: this.refs.mapContainer,\n        },\n      }).extend([\n        new layerVisibilityControl(\n          \"switchesLayer\",\n          \"switches-visible\",\n          \"switches\"\n        ),\n        new layerVisibilityControl(\n          \"opticsLayer\",\n          \"optics-visible\",\n          \"optic cables\"\n        ),\n        new layerVisibilityControl(\n          \"clientStationsLayer\",\n          \"clientStations-visible\",\n          \"client stations\"\n        ),\n      ]),\n    });\n\n    let opticsLayerSource = new VectorSource({\n      features: opticsFeatureArray,\n    });\n\n    this.opticsLayer = new VectorLayer({\n      className: \"opticsLayer\",\n      source: opticsLayerSource,\n      visible: true,\n      style: new Style({\n        stroke: new Stroke({\n          width: 2,\n          color: \"skyblue\",\n        }),\n      }),\n    });\n\n    let clientStationsLayerSource = new VectorSource({\n      features: clientStationsFeatureArray,\n    });\n\n    this.clientStationsLayer = new VectorLayer({\n      className: \"clientStationsLayer\",\n      source: clientStationsLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: clientStationIcon,\n          scale: 0.09,\n        }),\n      }),\n    });\n\n    let switchesLayerSource = new VectorSource({\n      features: switchFeatureArray,\n    });\n\n    this.switchesLayer = new VectorLayer({\n      className: \"switchesLayer\",\n      source: switchesLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: switchIcon,\n          scale: 0.09,\n        }),\n      }),\n    });\n\n    //layers with network equipment\n\n    //map feature settings\n\n    //layers settings\n    map.addLayer(this.clientStationsLayer);\n    map.addLayer(this.switchesLayer);\n    map.addLayer(this.opticsLayer);\n    //layers settings\n    //click on map\n    map.on(\n      \"click\",\n      function (pointOfClick) {\n        const clickedCoordinate = transform(\n          pointOfClick.coordinate,\n          \"EPSG:3857\",\n          \"EPSG:4326\"\n        );\n\n        let coordinateString =\n          clickedCoordinate[0].toFixed(6) +\n          \",\" +\n          clickedCoordinate[1].toFixed(6);\n        this.setState({\n          coordinates: coordinateString,\n          featureCoordinates: coordinateString,\n        });\n\n        map.forEachFeatureAtPixel(\n          pointOfClick.pixel,\n          function (feature) {\n            this.setState({\n              featureInfo: {\n                featureCoordinates: feature.getProperties().featureCoordinates,\n                address: feature.getProperties().address,\n                ipAddress: feature.getProperties().ipAddress,\n                info: feature.getProperties().info,\n                locationInfo: feature.getProperties().locationInfo,\n                featureContainerArray: feature.getProperties()\n                  .featureContainerArray,\n              },\n            });\n            this.state.map\n              .getView()\n              .animate({ center: fromLonLat(clickedCoordinate) }, { zoom: 19 });\n          }.bind(this)\n        );\n      }.bind(this)\n    );\n\n    // change features size on zoom change\n    map.getView().on(\"propertychange\", (e) => {\n      // switch (e.key) {\n      //   case \"resolution\":\n      //     this.handleZoom(map.getView().getZoom());\n      //     break;\n      // }\n      if (e.key === \"resolution\") {\n        this.handleZoom(map.getView().getZoom());\n      }\n    });\n\n    this.setState({\n      map: map,\n    });\n  }\n\n  componentDidMount() {\n    this.initMapComponent();\n  }\n\n  setSwitchesToRightControlPanel() {\n    this.setState({\n      displayedFeatures: this.state.switchesContainerArray,\n    });\n  }\n  setOpticsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: this.state.opticsContainerArray,\n    });\n  }\n  setClientStationsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: this.state.clientStationsContainerArray,\n    });\n  }\n\n  handleRightPanelItemClick(item) {\n    if (this.state.currentForm != null) {\n      this.setState({\n        currentForm: null,\n        formItemType: null,\n      });\n    }\n\n    let coordinatesForAnimation;\n    let featureCoordinates = item.getProperties().featureCoordinates;\n\n    if (Array.isArray(featureCoordinates[0])) {\n      coordinatesForAnimation = featureCoordinates[0];\n    } else {\n      coordinatesForAnimation = featureCoordinates;\n    }\n\n    this.state.map.getView().animate(\n      {\n        center: fromLonLat(coordinatesForAnimation),\n      },\n      { zoom: 18.5 }\n    );\n\n    this.setState({\n      featureInfo: {\n        featureCoordinates: item.getProperties().featureCoordinates,\n        address: item.getProperties().address,\n        ipAddress: item.getProperties().ipAddress,\n        info: item.getProperties().info,\n        locationInfo: item.getProperties().locationInfo,\n      },\n    });\n  }\n\n  changeFeaturesSize(strokeWidth, iconsScale) {\n    this.switchesLayer.setStyle(\n      new Style({\n        image: new Icon({\n          opacity: 1,\n          src: switchIcon,\n          scale: iconsScale,\n        }),\n      })\n    );\n    this.opticsLayer.setStyle(\n      new Style({\n        stroke: new Stroke({\n          width: strokeWidth,\n          color: \"skyblue\",\n        }),\n      })\n    );\n    this.clientStationsLayer.setStyle(\n      new Style({\n        image: new Icon({\n          opacity: 1,\n          src: clientStationIcon,\n          scale: iconsScale,\n        }),\n      })\n    );\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12) {\n      this.changeFeaturesSize(0.5, 0.01);\n    } else if (zoomSize < 13) {\n      this.changeFeaturesSize(2, 0.05);\n    } else if (zoomSize < 14) {\n      this.changeFeaturesSize(2, 0.08);\n    } else if (zoomSize < 16) {\n      this.changeFeaturesSize(2, 0.1);\n    } else if (zoomSize < 18) {\n      this.changeFeaturesSize(4, 0.12);\n    } else {\n      this.changeFeaturesSize(7, 0.25);\n    }\n  }\n\n  getFeatureInfo(featureInfo) {\n    return featureInfo !== null ? (\n      <div className=\"featureInfoElement\">{featureInfo}</div>\n    ) : (\n      <div className=\"hidden\"></div>\n    );\n  }\n  getfeatureInfoBlock() {\n    if (this.state.featureInfo.featureCoordinates !== null) {\n      return (\n        <div className=\"featureInfo\">\n          {this.getFeatureInfo(this.state.featureInfo.address)}\n          {this.getFeatureInfo(this.state.featureInfo.ipAddress)}\n          {this.getFeatureInfo(this.state.featureInfo.info)}\n          {this.getFeatureInfo(this.state.featureInfo.locationInfo)}\n          <div\n            className=\"editButton\"\n            onClick={() => {\n              this.setState({\n                currentForm: null,\n              });\n              this.setState({\n                currentForm: \"edit\",\n              });\n            }}\n          >\n            Edit\n          </div>\n        </div>\n      );\n    } else {\n      return <div className=\"hidden\"></div>;\n    }\n  }\n\n  handleEditSubmit = (evt, itemType) => {\n    evt.preventDefault();\n    let editedItem = {\n      address: this.refs.addressFormField.value,\n      locationInfo: this.refs.locationInfoFormField.value,\n      ipAddress: this.refs.ipAddressFormField.value,\n      info: this.refs.infoFormField.value,\n      coordinates: this.refs.coordinateFormField.value.split(\",\"),\n    };\n    let itemToEdit = {\n      address: this.state.featureInfo.address,\n      locationInfo: this.state.featureInfo.locationInfo,\n      ipAddress: this.state.featureInfo.ipAddress,\n      info: this.state.featureInfo.info,\n      coordinates: this.state.featureInfo.featureCoordinates,\n    };\n\n    this.setState({\n      currentForm: null,\n    });\n    function transformCoordinates(coordinates) {\n      let opticsCoordinates = [];\n      let formCoordinatesArray = coordinates.split(\",\");\n      console.log(formCoordinatesArray);\n      let arrayLenght = formCoordinatesArray.length;\n\n      let i = 0;\n      while (i < arrayLenght) {\n        console.log(formCoordinatesArray[i]);\n        console.log(formCoordinatesArray[i + 1]);\n\n        opticsCoordinates.push(\n          new Array(formCoordinatesArray[i], formCoordinatesArray[i + 1])\n        );\n        i++;\n        i++;\n      }\n      return opticsCoordinates;\n    }\n\n    this.editSwitch(itemToEdit, editedItem);\n    this.editClientStation(itemToEdit, editedItem);\n    this.editOptics(\n      {\n        address: this.state.featureInfo.address,\n        locationInfo: this.state.featureInfo.locationInfo,\n        ipAddress: this.state.featureInfo.ipAddress,\n        info: this.state.featureInfo.info,\n        coordinates: transformCoordinates(\n          this.state.featureInfo.featureCoordinates\n        ),\n      },\n      {\n        address: this.refs.addressFormField.value,\n        locationInfo: this.refs.locationInfoFormField.value,\n        ipAddress: this.refs.ipAddressFormField.value,\n        info: this.refs.infoFormField.value,\n        coordinates: transformCoordinates(\n          this.refs.coordinateFormField.value.split(\",\")\n        ),\n      }\n    );\n  };\n\n  handleDeleteButton = () => {\n    let itemToDelete = {\n      address: this.refs.addressFormField.value,\n      locationInfo: this.refs.locationInfoFormField.value,\n      ipAddress: this.refs.ipAddressFormField.value,\n      info: this.refs.infoFormField.value,\n      coordinates: this.refs.coordinateFormField.value.split(\",\"),\n    };\n\n    let opticsCoordinates = [];\n    let formCoordinatesArray = this.refs.coordinateFormField.value.split(\",\");\n    console.log(formCoordinatesArray);\n    let arrayLenght = formCoordinatesArray.length;\n\n    let i = 0;\n    while (i < arrayLenght) {\n      console.log(formCoordinatesArray[i]);\n      console.log(formCoordinatesArray[i + 1]);\n\n      opticsCoordinates.push(\n        new Array(formCoordinatesArray[i], formCoordinatesArray[i + 1])\n      );\n      i++;\n      i++;\n    }\n\n    this.deleteSwitch(itemToDelete);\n    this.deleteClientStation(itemToDelete);\n    this.deleteOptics({\n      address: this.refs.addressFormField.value,\n      locationInfo: this.refs.locationInfoFormField.value,\n      ipAddress: this.refs.ipAddressFormField.value,\n      info: this.refs.infoFormField.value,\n      coordinates: opticsCoordinates,\n    });\n  };\n\n  handleAddSubmit = (evt) => {\n    evt.preventDefault();\n\n    let itemType = this.state.formItemType;\n\n    switch (itemType) {\n      case \"switch\":\n        let switchCoordinatesFromForm = this.refs.coordinateFormField.value.split(\n          \",\"\n        );\n        if (!Array.isArray(switchCoordinatesFromForm[0])) {\n          this.addNewSwitch({\n            address: this.refs.addressFormField.value,\n            locationInfo: this.refs.locationInfoFormField.value,\n            ipAddress: this.refs.ipAddressFormField.value,\n            info: this.refs.infoFormField.value,\n            coordinates: this.refs.coordinateFormField.value.split(\",\"),\n          });\n        } else {\n          console.log(\"Wrong coordinates for switch.\");\n        }\n\n        break;\n      case \"clientStation\":\n        let clientStationCoordinatesFromForm = this.refs.coordinateFormField.value.split(\n          \",\"\n        );\n        if (!Array.isArray(clientStationCoordinatesFromForm[0])) {\n          this.addNewClientStation({\n            address: this.refs.addressFormField.value,\n            locationInfo: this.refs.locationInfoFormField.value,\n            ipAddress: this.refs.ipAddressFormField.value,\n            info: this.refs.infoFormField.value,\n            coordinates: this.refs.coordinateFormField.value.split(\",\"),\n          });\n        } else {\n          console.log(\"Wrong coordinates for client station.\");\n        }\n        break;\n      case \"opticCable\":\n        let opticsCoordinates = [];\n        let formCoordinatesArray = this.refs.coordinateFormField.value.split(\n          \",\"\n        );\n        console.log(formCoordinatesArray);\n        let arrayLenght = formCoordinatesArray.length;\n        console.log(arrayLenght);\n        if (arrayLenght % 2 !== 0 || arrayLenght === 0) {\n          console.log(\"Wrong optics coordinates.\");\n        } else {\n          if (arrayLenght <= 2) {\n            console.log(\"need more points.\");\n          } else {\n            let i = 0;\n            while (i < arrayLenght) {\n              console.log(formCoordinatesArray[i]);\n              console.log(formCoordinatesArray[i + 1]);\n\n              opticsCoordinates.push(\n                new Array(formCoordinatesArray[i], formCoordinatesArray[i + 1])\n              );\n              i++;\n              i++;\n            }\n            console.log(opticsCoordinates);\n            this.addOptics({\n              address: this.refs.addressFormField.value,\n              locationInfo: this.refs.locationInfoFormField.value,\n              ipAddress: this.refs.ipAddressFormField.value,\n              info: this.refs.infoFormField.value,\n              coordinates: opticsCoordinates,\n            });\n          }\n        }\n\n        break;\n      default:\n        console.log(\"Default case\");\n    }\n\n    this.setState({\n      currentForm: null,\n    });\n  };\n\n  handleAddButton(itemType) {\n    console.log(itemType);\n    this.setState({ formItemType: itemType });\n  }\n\n  getEditingOrAddingForm(itemType) {\n    if (this.state.currentForm === \"add\") {\n      return (\n        <div className=\"formContainer\">\n          <form\n            className=\"addForm\"\n            onSubmit={(evt) => this.handleAddSubmit(evt, itemType)}\n          >\n            <textarea\n              className=\"formField\"\n              ref=\"coordinateFormField\"\n              placeholder=\"coordinates\"\n              defaultValue={this.state.featureCoordinates}\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"addressFormField\"\n              placeholder=\"address\"\n              defaultValue=\"\"\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"ipAddressFormField\"\n              placeholder=\"ip address\"\n              defaultValue=\"\"\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"locationInfoFormField\"\n              placeholder=\"location info\"\n              defaultValue=\"\"\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"infoFormField\"\n              placeholder=\"additional info\"\n              defaultValue=\"\"\n            ></textarea>\n            <div className=\"formButtonsContainer\">\n              <button type=\"submit\">Submit</button>\n              <button\n                type=\"button\"\n                onClick={() => this.setState({ currentForm: null })}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      );\n    } else if (this.state.currentForm === \"edit\") {\n      return (\n        <div className=\"formContainer\">\n          <form\n            className=\"editForm\"\n            onSubmit={(evt) => this.handleEditSubmit(evt, itemType)}\n          >\n            <textarea\n              className=\"formField\"\n              ref=\"coordinateFormField\"\n              defaultValue={this.state.featureInfo.featureCoordinates}\n              style={{ backgroundColor: \"lightgray\" }}\n              readOnly\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"addressFormField\"\n              placeholder=\"address\"\n              defaultValue={this.state.featureInfo.address}\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"ipAddressFormField\"\n              placeholder=\"ip address\"\n              defaultValue={this.state.featureInfo.ipAddress}\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"locationInfoFormField\"\n              placeholder=\"location info\"\n              defaultValue={this.state.featureInfo.locationInfo}\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"infoFormField\"\n              placeholder=\"additional info\"\n              defaultValue={this.state.featureInfo.info}\n            ></textarea>\n            <div className=\"formButtonsContainer\">\n              <button\n                type=\"button\"\n                onClick={() => {\n                  this.handleDeleteButton(itemType);\n                  this.setState({\n                    currentForm: null,\n                  });\n                }}\n              >\n                Delete\n              </button>\n              <button type=\"submit\">Submit</button>\n              <button\n                type=\"button\"\n                onClick={() => this.setState({ currentForm: null })}\n              >\n                Cancel\n              </button>\n            </div>\n          </form>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"opticMapComponent\">\n        <div className=\"leftMapPanel\">\n          <div className=\"coordinateString\" id=\"coordinateString\">\n            {this.state.coordinates}\n          </div>\n\n          <div className=\"objectButtons\">\n            <div className=\"featureInfoAddControls\">\n              <div\n                className=\"objectButton\"\n                onClick={this.setSwitchesToRightControlPanel}\n              >\n                switches\n              </div>\n              <div\n                className=\"addFeatureButton\"\n                onClick={() => {\n                  this.setState({ currentForm: null });\n                  this.handleAddButton(\"switch\");\n                  this.setState({ currentForm: \"add\" });\n                }}\n              >\n                add\n              </div>\n            </div>\n            <div className=\"featureInfoAddControls\">\n              <div\n                className=\"objectButton\"\n                onClick={this.setOpticsToRightControlPanel}\n              >\n                optic cable\n              </div>\n              <div\n                className=\"addFeatureButton\"\n                onClick={() => {\n                  this.setState({ currentForm: null });\n                  this.handleAddButton(\"opticCable\");\n                  this.setState({ currentForm: \"add\" });\n                }}\n              >\n                add\n              </div>\n            </div>\n            <div className=\"featureInfoAddControls\">\n              <div\n                className=\"objectButton\"\n                onClick={this.setClientStationsToRightControlPanel}\n              >\n                client stations\n              </div>\n              <div\n                className=\"addFeatureButton\"\n                onClick={() => {\n                  this.setState({ currentForm: null });\n                  this.handleAddButton(\"clientStation\");\n                  this.setState({ currentForm: \"add\" });\n                }}\n              >\n                add\n              </div>\n            </div>\n          </div>\n          {this.getfeatureInfoBlock()}\n          {this.getEditingOrAddingForm(\n            this.state.featureInfo.featureCoordinates,\n            this.state.featureInfo.address,\n            this.state.featureInfo.ipAddress,\n            this.state.featureInfo.locationInfo,\n            this.state.featureInfo.info\n          )}\n        </div>\n        <div className=\"mapContainer\" ref=\"mapContainer\"></div>\n        <div className=\"rightMapPanel\">\n          <div className=\"displayedFeatures\">\n            {this.state.displayedFeatures !== null ? (\n              this.state.displayedFeatures.map((feature) => {\n                return (\n                  <li\n                    className=\"displayedFeature\"\n                    key={feature.getProperties().featureCoordinates}\n                    onClick={this.handleRightPanelItemClick.bind(this, feature)}\n                  >\n                    {feature.getProperties().address}\n                  </li>\n                );\n              })\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OpticMap;\n"]},"metadata":{},"sourceType":"module"}