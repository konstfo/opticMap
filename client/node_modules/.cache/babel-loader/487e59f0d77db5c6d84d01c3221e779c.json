{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\javascript_studying\\\\opticMap\\\\optic-map\\\\src\\\\OpticMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport Style from \"ol/style/Style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\"; // import Group from \"ol/layer/Group\";\n\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport switchesArray from \"./res/switches.json\";\nimport Fill from \"ol/style/Fill\";\n\nclass OpticMap extends Component {\n  componentDidMount() {\n    const extentView = transformExtent([20.969893\n    /** min x */\n    , 57.540673\n    /** min y */\n    , 28.413477\n    /** max x */\n    , 59.894102\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n    const extentLayer = transformExtent([16.581885\n    /** min x */\n    , 55.671002\n    /** min y */\n    , 32.794556\n    /** max x */\n    , 61.543774\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n    let map = new Map({\n      target: this.refs.mapContainer,\n      layers: [new TileLayer({\n        source: new OSM(),\n        extent: extentLayer,\n        zIndex: 0\n      })],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5\n      })\n    }); // let marker = new Feature({\n    //   geometry: new Point(fromLonLat([28.185281, 59.374348])),\n    // });\n    // let marker1 = new Feature({\n    //   geometry: new Point(fromLonLat([28.185453, 59.374122])),\n    // });\n\n    var featureList = [];\n    switchesArray.map(data => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress\n      });\n      featureElement.setStyle(Style({\n        image: Style.Circle({\n          fill: Fill({\n            color: \"red\"\n          }),\n          radius: 3\n        })\n      }));\n      featureList.push(featureElement);\n      console.log(data.address);\n      console.log(featureElement.getKeys());\n    });\n    let vectorSource = new VectorSource({\n      features: featureList\n    });\n    let markerVectorLayer = new VectorLayer({\n      source: vectorSource,\n      visible: true\n    });\n    map.addLayer(markerVectorLayer);\n    const coordinateContainerElement = this.refs.coordinateString;\n    const featureInfoElement = this.refs.featureInfo;\n    this.setState({\n      map: map\n    }); // get coordinates by click on map\n\n    map.on(\"click\", function (pointOfClick) {\n      const clickedCoordinate = transform(pointOfClick.coordinate, \"EPSG:3857\", \"EPSG:4326\");\n      coordinateContainerElement.innerHTML = clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n      map.forEachFeatureAtPixel(pointOfClick.pixel, function (feature, layer) {\n        featureInfoElement.innerHTML = feature.getProperties().address;\n        console.log(feature.getProperties().address);\n        console.log(feature.getProperties().ipAddress);\n      });\n    });\n    map.getView().on(\"propertychange\", function (e) {\n      switch (e.key) {\n        case \"resolution\":\n          if (map.getView().getZoom() < 13) {\n            markerVectorLayer.setVisible(false);\n          } else {\n            markerVectorLayer.setVisible(true);\n          }\n\n          break;\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"opticMapComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"coordinateString\",\n      id: \"coordinateString\",\n      ref: \"coordinateString\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"coordinates\"), React.createElement(\"div\", {\n      className: \"featureLayers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"layerCheckBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"featureLayerCheckbox\",\n      value: \"switchesLayer\",\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, \"switches\")), React.createElement(\"div\", {\n      className: \"layerCheckBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"featureLayerCheckbox\",\n      value: \"clutchesLayer\",\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }, \"optic clutches\")), React.createElement(\"div\", {\n      className: \"layerCheckBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"featureLayerCheckbox\",\n      value: \"cableLayer\",\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, \"optic Cable\"))), React.createElement(\"div\", {\n      className: \"featureInfo\",\n      id: \"featureInfo\",\n      ref: \"featureInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapContainer\",\n      id: \"mapContainer\",\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rightMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default OpticMap;","map":{"version":3,"sources":["C:/Users/asus/Documents/javascript_studying/opticMap/optic-map/src/OpticMap.js"],"names":["React","Component","Map","View","TileLayer","OSM","fromLonLat","transformExtent","transform","Style","Feature","Point","VectorLayer","VectorSource","switchesArray","Fill","OpticMap","componentDidMount","extentView","extentLayer","map","target","refs","mapContainer","layers","source","extent","zIndex","view","center","zoom","minZoom","featureList","data","featureElement","geometry","coordinates","address","ipAddress","setStyle","image","Circle","fill","color","radius","push","console","log","getKeys","vectorSource","features","markerVectorLayer","visible","addLayer","coordinateContainerElement","coordinateString","featureInfoElement","featureInfo","setState","on","pointOfClick","clickedCoordinate","coordinate","innerHTML","toFixed","forEachFeatureAtPixel","pixel","feature","layer","getProperties","getView","e","key","getZoom","setVisible","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport Style from \"ol/style/Style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\n// import Group from \"ol/layer/Group\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport switchesArray from \"./res/switches.json\";\nimport Fill from \"ol/style/Fill\";\n\nclass OpticMap extends Component {\n  componentDidMount() {\n    const extentView = transformExtent(\n      [\n        20.969893 /** min x */,\n        57.540673 /** min y */,\n        28.413477 /** max x */,\n        59.894102 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n    const extentLayer = transformExtent(\n      [\n        16.581885 /** min x */,\n        55.671002 /** min y */,\n        32.794556 /** max x */,\n        61.543774 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n\n    let map = new Map({\n      target: this.refs.mapContainer,\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n          extent: extentLayer,\n          zIndex: 0,\n        }),\n      ],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5,\n      }),\n    });\n\n    // let marker = new Feature({\n    //   geometry: new Point(fromLonLat([28.185281, 59.374348])),\n    // });\n\n    // let marker1 = new Feature({\n    //   geometry: new Point(fromLonLat([28.185453, 59.374122])),\n    // });\n\n    var featureList = [];\n\n    switchesArray.map((data) => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n      });\n      featureElement.setStyle(\n        Style({\n          image: Style.Circle({\n            fill: Fill({ color: \"red\" }),\n            radius: 3,\n          }),\n        })\n      );\n      featureList.push(featureElement);\n      console.log(data.address);\n      console.log(featureElement.getKeys());\n    });\n\n    let vectorSource = new VectorSource({\n      features: featureList,\n    });\n\n    let markerVectorLayer = new VectorLayer({\n      source: vectorSource,\n      visible: true,\n    });\n\n    map.addLayer(markerVectorLayer);\n\n    const coordinateContainerElement = this.refs.coordinateString;\n    const featureInfoElement = this.refs.featureInfo;\n    this.setState({\n      map: map,\n    });\n\n    // get coordinates by click on map\n    map.on(\"click\", function (pointOfClick) {\n      const clickedCoordinate = transform(\n        pointOfClick.coordinate,\n        \"EPSG:3857\",\n        \"EPSG:4326\"\n      );\n\n      coordinateContainerElement.innerHTML =\n        clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n\n      map.forEachFeatureAtPixel(pointOfClick.pixel, function (feature, layer) {\n        featureInfoElement.innerHTML = feature.getProperties().address;\n        console.log(feature.getProperties().address);\n        console.log(feature.getProperties().ipAddress);\n      });\n    });\n\n    map.getView().on(\"propertychange\", function (e) {\n      switch (e.key) {\n        case \"resolution\":\n          if (map.getView().getZoom() < 13) {\n            markerVectorLayer.setVisible(false);\n          } else {\n            markerVectorLayer.setVisible(true);\n          }\n\n          break;\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"opticMapComponent\">\n        <div className=\"leftMapPanel\">\n          <div\n            className=\"coordinateString\"\n            id=\"coordinateString\"\n            ref=\"coordinateString\"\n          >\n            coordinates\n          </div>\n          <div className=\"featureLayers\">\n            <div className=\"layerCheckBox\">\n              <input\n                type=\"checkbox\"\n                name=\"featureLayerCheckbox\"\n                value=\"switchesLayer\"\n                className=\"switch\"\n              />\n              <span className=\"slider\"></span>\n              <div>switches</div>\n            </div>\n\n            <div className=\"layerCheckBox\">\n              <input\n                type=\"checkbox\"\n                name=\"featureLayerCheckbox\"\n                value=\"clutchesLayer\"\n                className=\"switch\"\n              />\n              <span className=\"slider\"></span>\n              <div>optic clutches</div>\n            </div>\n\n            <div className=\"layerCheckBox\">\n              <input\n                type=\"checkbox\"\n                name=\"featureLayerCheckbox\"\n                value=\"cableLayer\"\n                className=\"switch\"\n              />\n              <span className=\"slider\"></span>\n              <div>optic Cable</div>\n            </div>\n          </div>\n          <div className=\"featureInfo\" id=\"featureInfo\" ref=\"featureInfo\"></div>\n        </div>\n        <div\n          className=\"mapContainer\"\n          id=\"mapContainer\"\n          ref=\"mapContainer\"\n        ></div>\n        <div className=\"rightMapPanel\"></div>\n      </div>\n    );\n  }\n}\n\nexport default OpticMap;\n"]},"metadata":{},"sourceType":"module"}