{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\javascript_studying\\\\opticMap\\\\optic-map\\\\src\\\\OpticMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\n\nclass OpticMap extends Component {\n  render() {\n    return React.createElement(\"div\", {\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, \" \");\n  }\n\n  componentDidMount() {\n    // create feature layer and vector source\n    var featuresLayer = new VectorLayer({\n      source: new VectorSource({\n        features: []\n      })\n    }); // create map object with feature layer\n\n    var map = new Map({\n      target: this.refs.mapContainer,\n      layers: [//default OSM layer\n      new TileLayer({\n        source: new OSM()\n      }), featuresLayer],\n      view: new View({\n        center: [-11718716.28195593, 4869217.172379018],\n        //Boulder, CO\n        zoom: 13\n      })\n    }); // save map and layer references to local state\n\n    this.setState({\n      map: map,\n      featuresLayer: featuresLayer\n    });\n    map.on(\"click\", this.handleMapClick.bind(this));\n  }\n\n  handleMapClick(event) {\n    // create WKT writer\n    var wktWriter = new ol.format.WKT(); // derive map coordinate (references map from Wrapper Component state)\n\n    var clickedCoordinate = this.state.map.getCoordinateFromPixel(event.pixel); // create Point geometry from clicked coordinate\n\n    var clickedPointGeom = new ol.geom.Point(clickedCoordinate); // write Point geometry to WKT with wktWriter\n\n    var clickedPointWkt = wktWriter.writeGeometry(clickedPointGeom); // place Flux Action call to notify Store map coordinate was clicked\n\n    Actions.setRoutingCoord(clickedPointWkt);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    this.state.featuresLayer.setSource(new VectorSource({\n      features: this.props.routes\n    }));\n  }\n\n}\n\nexport default OpticMap;","map":{"version":3,"sources":["C:/Users/asus/Documents/javascript_studying/opticMap/optic-map/src/OpticMap.js"],"names":["React","Component","Map","View","VectorLayer","VectorSource","TileLayer","OSM","OpticMap","render","componentDidMount","featuresLayer","source","features","map","target","refs","mapContainer","layers","view","center","zoom","setState","on","handleMapClick","bind","event","wktWriter","ol","format","WKT","clickedCoordinate","state","getCoordinateFromPixel","pixel","clickedPointGeom","geom","Point","clickedPointWkt","writeGeometry","Actions","setRoutingCoord","componentDidUpdate","prevProps","prevState","setSource","props","routes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,GAAT,EAAcC,IAAd,QAA0B,IAA1B;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;;AAEA,MAAMC,QAAN,SAAuBP,SAAvB,CAAiC;AAC/BQ,EAAAA,MAAM,GAAG;AACP,WAAO;AAAK,MAAA,GAAG,EAAC,cAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,QAAIC,aAAa,GAAG,IAAIP,WAAJ,CAAgB;AAClCQ,MAAAA,MAAM,EAAE,IAAIP,YAAJ,CAAiB;AACvBQ,QAAAA,QAAQ,EAAE;AADa,OAAjB;AAD0B,KAAhB,CAApB,CAFkB,CAQlB;;AACA,QAAIC,GAAG,GAAG,IAAIZ,GAAJ,CAAQ;AAChBa,MAAAA,MAAM,EAAE,KAAKC,IAAL,CAAUC,YADF;AAEhBC,MAAAA,MAAM,EAAE,CACN;AACA,UAAIZ,SAAJ,CAAc;AACZM,QAAAA,MAAM,EAAE,IAAIL,GAAJ;AADI,OAAd,CAFM,EAKNI,aALM,CAFQ;AAShBQ,MAAAA,IAAI,EAAE,IAAIhB,IAAJ,CAAS;AACbiB,QAAAA,MAAM,EAAE,CAAC,CAAC,iBAAF,EAAqB,iBAArB,CADK;AACoC;AACjDC,QAAAA,IAAI,EAAE;AAFO,OAAT;AATU,KAAR,CAAV,CATkB,CAwBlB;;AACA,SAAKC,QAAL,CAAc;AACZR,MAAAA,GAAG,EAAEA,GADO;AAEZH,MAAAA,aAAa,EAAEA;AAFH,KAAd;AAKAG,IAAAA,GAAG,CAACS,EAAJ,CAAO,OAAP,EAAgB,KAAKC,cAAL,CAAoBC,IAApB,CAAyB,IAAzB,CAAhB;AACD;;AACDD,EAAAA,cAAc,CAACE,KAAD,EAAQ;AACpB;AACA,QAAIC,SAAS,GAAG,IAAIC,EAAE,CAACC,MAAH,CAAUC,GAAd,EAAhB,CAFoB,CAIpB;;AACA,QAAIC,iBAAiB,GAAG,KAAKC,KAAL,CAAWlB,GAAX,CAAemB,sBAAf,CAAsCP,KAAK,CAACQ,KAA5C,CAAxB,CALoB,CAOpB;;AACA,QAAIC,gBAAgB,GAAG,IAAIP,EAAE,CAACQ,IAAH,CAAQC,KAAZ,CAAkBN,iBAAlB,CAAvB,CARoB,CAUpB;;AACA,QAAIO,eAAe,GAAGX,SAAS,CAACY,aAAV,CAAwBJ,gBAAxB,CAAtB,CAXoB,CAapB;;AACAK,IAAAA,OAAO,CAACC,eAAR,CAAwBH,eAAxB;AACD;;AACDI,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvC,SAAKZ,KAAL,CAAWrB,aAAX,CAAyBkC,SAAzB,CACE,IAAIxC,YAAJ,CAAiB;AACfQ,MAAAA,QAAQ,EAAE,KAAKiC,KAAL,CAAWC;AADN,KAAjB,CADF;AAKD;;AA1D8B;;AA6DjC,eAAevC,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Map, View } from \"ol\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\n\nclass OpticMap extends Component {\n  render() {\n    return <div ref=\"mapContainer\"> </div>;\n  }\n  componentDidMount() {\n    // create feature layer and vector source\n    var featuresLayer = new VectorLayer({\n      source: new VectorSource({\n        features: []\n      })\n    });\n\n    // create map object with feature layer\n    var map = new Map({\n      target: this.refs.mapContainer,\n      layers: [\n        //default OSM layer\n        new TileLayer({\n          source: new OSM()\n        }),\n        featuresLayer\n      ],\n      view: new View({\n        center: [-11718716.28195593, 4869217.172379018], //Boulder, CO\n        zoom: 13\n      })\n    });\n\n    // save map and layer references to local state\n    this.setState({\n      map: map,\n      featuresLayer: featuresLayer\n    });\n\n    map.on(\"click\", this.handleMapClick.bind(this));\n  }\n  handleMapClick(event) {\n    // create WKT writer\n    var wktWriter = new ol.format.WKT();\n\n    // derive map coordinate (references map from Wrapper Component state)\n    var clickedCoordinate = this.state.map.getCoordinateFromPixel(event.pixel);\n\n    // create Point geometry from clicked coordinate\n    var clickedPointGeom = new ol.geom.Point(clickedCoordinate);\n\n    // write Point geometry to WKT with wktWriter\n    var clickedPointWkt = wktWriter.writeGeometry(clickedPointGeom);\n\n    // place Flux Action call to notify Store map coordinate was clicked\n    Actions.setRoutingCoord(clickedPointWkt);\n  }\n  componentDidUpdate(prevProps, prevState) {\n    this.state.featuresLayer.setSource(\n      new VectorSource({\n        features: this.props.routes\n      })\n    );\n  }\n}\n\nexport default OpticMap;\n"]},"metadata":{},"sourceType":"module"}