{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\javascript_studying\\\\opticMap\\\\optic-map\\\\src\\\\OpticMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport Style from \"ol/style/Style\";\nimport { Circle, Stroke, Fill } from \"ol/style\";\nimport Icon from \"ol/style/Icon\";\nimport \"./OpticMap.css\";\nimport Feature from \"ol/Feature\";\nimport Polygon from \"ol/geom/Polygon\";\nimport Point from \"ol/geom/Point\";\nimport Group from \"ol/layer/Group\"; // import VectorContext from \"ol/render/VectorContext\";\n\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\n\nclass OpticMap extends Component {\n  componentDidMount() {\n    var features = [];\n    var iconFeature = new Feature({\n      geometry: new Point([28.185281, 59.374348], \"XY\")\n    });\n    var iconStyle = new Style({\n      image: new Circle({\n        fill: new Fill({\n          color: [77, 219, 105, 0.6]\n        }),\n        stroke: new Stroke({\n          color: [6, 125, 34, 1],\n          width: 2\n        }),\n        radius: 12\n      })\n    });\n    iconFeature.setStyle(iconStyle);\n    features.push(iconFeature); // console.log(feature.getKeys());\n\n    console.log(iconFeature.getProperties());\n    const extentView = transformExtent([20.969893\n    /** min x */\n    , 57.540673\n    /** min y */\n    , 28.413477\n    /** max x */\n    , 59.894102\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n    const extentLayer = transformExtent([16.581885\n    /** min x */\n    , 55.671002\n    /** min y */\n    , 32.794556\n    /** max x */\n    , 61.543774\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\"); //\n    // const aussieCitiesStyle = function(feature){\n    //   const styles = [\n    //     new ol.style.Style({\n    //       image: new ol.style.Circle({\n    //         fill: new ol.style.Fill({\n    //           color: [77, 219, 105, 0.6]\n    //         }),\n    //         stroke: new ol.style.Stroke({\n    //           color: [6, 125, 34, 1],\n    //           width: 2\n    //         }),\n    //         radius: 12\n    //       }),\n    //       // text: new ol.style.Text({\n    //       //   text: cityIDString,\n    //       //   scale: 1.5,\n    //       //   fill: new ol.style.Fill({\n    //       //     color: [232, 26, 26, 1]\n    //       //   }),\n    //       //   stroke: new ol.style.Stroke({\n    //       //     color: [232, 26, 26, 1],\n    //       //     width:0.3\n    //       //   })\n    //       // })\n    //     })\n    //   ]\n    //   return styles\n    // }\n    // const austCitiesLayer = new ol.layer.Vector({\n    //   source: new ol.source.Vector({\n    //     format: new ol.format.GeoJSON(),\n    //     url: './data/aust_cities.geojson'\n    //   }),\n    //   style: aussieCitiesStyle\n    // })\n    // map.addLayer(austCitiesLayer);\n    //\n\n    let switchesLayer = new VectorLayer({\n      source: new VectorSource({\n        projection: \"EPSH:4326\",\n        features: [new Feature(new Circle(fromLonLat([28.185281, 59.374348], 4000)))]\n      }),\n      style: [new ol.style.Style({\n        stroke: new ol.style.Stroke({\n          color: \"blue\",\n          width: 3\n        }),\n        fill: new ol.style.Fill({\n          color: \"rgba(0, 0, 255, 0.1)\"\n        })\n      })],\n      zIndex: 99999\n    });\n    let clutchesLayer = new VectorLayer({\n      source: new VectorSource()\n    });\n    let cableLayer = new VectorLayer({\n      source: new VectorSource()\n    });\n    const layerGroup = new Group({\n      layers: [switchesLayer, clutchesLayer, cableLayer]\n    });\n    let map = new Map({\n      target: this.refs.mapContainer,\n      layers: [new TileLayer({\n        source: new OSM(),\n        extent: extentLayer,\n        zIndex: 0\n      })],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5\n      })\n    });\n    map.addLayer(layerGroup);\n    const coordinateContainerElement = this.refs.coordinateString;\n    this.setState({\n      map: map\n    }); // get coordinates by click on map\n\n    map.on(\"click\", function (pointOfClick) {\n      const clickedCoordinate = transform(pointOfClick.coordinate, \"EPSG:3857\", \"EPSG:4326\");\n      coordinateContainerElement.innerHTML = clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"opticMapComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"coordinateString\",\n      id: \"coordinateString\",\n      ref: \"coordinateString\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173\n      },\n      __self: this\n    }, \"coordinates\"), React.createElement(\"div\", {\n      className: \"featureLayers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"layerCheckBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"featureLayerCheckbox\",\n      value: \"switchesLayer\",\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"switches\")), React.createElement(\"div\", {\n      className: \"layerCheckBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"featureLayerCheckbox\",\n      value: \"clutchesLayer\",\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, \"optic clutches\")), React.createElement(\"div\", {\n      className: \"layerCheckBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      name: \"featureLayerCheckbox\",\n      value: \"cableLayer\",\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, \"optic Cable\")))), React.createElement(\"div\", {\n      className: \"mapContainer\",\n      id: \"mapContainer\",\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rightMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default OpticMap;","map":{"version":3,"sources":["C:/Users/asus/Documents/javascript_studying/opticMap/optic-map/src/OpticMap.js"],"names":["React","Component","Map","View","TileLayer","OSM","fromLonLat","transformExtent","transform","Style","Circle","Stroke","Fill","Icon","Feature","Polygon","Point","Group","VectorLayer","VectorSource","OpticMap","componentDidMount","features","iconFeature","geometry","iconStyle","image","fill","color","stroke","width","radius","setStyle","push","console","log","getProperties","extentView","extentLayer","switchesLayer","source","projection","style","ol","zIndex","clutchesLayer","cableLayer","layerGroup","layers","map","target","refs","mapContainer","extent","view","center","zoom","minZoom","addLayer","coordinateContainerElement","coordinateString","setState","on","pointOfClick","clickedCoordinate","coordinate","innerHTML","toFixed","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport Style from \"ol/style/Style\";\nimport { Circle, Stroke, Fill } from \"ol/style\";\nimport Icon from \"ol/style/Icon\";\nimport \"./OpticMap.css\";\nimport Feature from \"ol/Feature\";\nimport Polygon from \"ol/geom/Polygon\";\nimport Point from \"ol/geom/Point\";\nimport Group from \"ol/layer/Group\";\n// import VectorContext from \"ol/render/VectorContext\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\n\nclass OpticMap extends Component {\n  componentDidMount() {\n    var features = [];\n\n    var iconFeature = new Feature({\n      geometry: new Point([28.185281, 59.374348], \"XY\")\n    });\n\n    var iconStyle = new Style({\n      image: new Circle({\n        fill: new Fill({\n          color: [77, 219, 105, 0.6]\n        }),\n        stroke: new Stroke({\n          color: [6, 125, 34, 1],\n          width: 2\n        }),\n        radius: 12\n      })\n    });\n\n    iconFeature.setStyle(iconStyle);\n    features.push(iconFeature);\n    // console.log(feature.getKeys());\n    console.log(iconFeature.getProperties());\n    const extentView = transformExtent(\n      [\n        20.969893 /** min x */,\n        57.540673 /** min y */,\n        28.413477 /** max x */,\n        59.894102 /** max y */\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n    const extentLayer = transformExtent(\n      [\n        16.581885 /** min x */,\n        55.671002 /** min y */,\n        32.794556 /** max x */,\n        61.543774 /** max y */\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n    //\n    // const aussieCitiesStyle = function(feature){\n\n    //   const styles = [\n    //     new ol.style.Style({\n    //       image: new ol.style.Circle({\n    //         fill: new ol.style.Fill({\n    //           color: [77, 219, 105, 0.6]\n    //         }),\n    //         stroke: new ol.style.Stroke({\n    //           color: [6, 125, 34, 1],\n    //           width: 2\n    //         }),\n    //         radius: 12\n    //       }),\n    //       // text: new ol.style.Text({\n    //       //   text: cityIDString,\n    //       //   scale: 1.5,\n    //       //   fill: new ol.style.Fill({\n    //       //     color: [232, 26, 26, 1]\n    //       //   }),\n    //       //   stroke: new ol.style.Stroke({\n    //       //     color: [232, 26, 26, 1],\n    //       //     width:0.3\n    //       //   })\n    //       // })\n    //     })\n    //   ]\n    //   return styles\n    // }\n\n    // const austCitiesLayer = new ol.layer.Vector({\n    //   source: new ol.source.Vector({\n    //     format: new ol.format.GeoJSON(),\n    //     url: './data/aust_cities.geojson'\n    //   }),\n    //   style: aussieCitiesStyle\n    // })\n    // map.addLayer(austCitiesLayer);\n\n    //\n    let switchesLayer = new VectorLayer({\n      source: new VectorSource({\n        projection: \"EPSH:4326\",\n        features: [\n          new Feature(new Circle(fromLonLat([28.185281, 59.374348], 4000)))\n        ]\n      }),\n      style: [\n        new ol.style.Style({\n          stroke: new ol.style.Stroke({\n            color: \"blue\",\n            width: 3\n          }),\n          fill: new ol.style.Fill({\n            color: \"rgba(0, 0, 255, 0.1)\"\n          })\n        })\n      ],\n      zIndex: 99999\n    });\n    let clutchesLayer = new VectorLayer({\n      source: new VectorSource()\n    });\n    let cableLayer = new VectorLayer({\n      source: new VectorSource()\n    });\n    const layerGroup = new Group({\n      layers: [switchesLayer, clutchesLayer, cableLayer]\n    });\n\n    let map = new Map({\n      target: this.refs.mapContainer,\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n          extent: extentLayer,\n          zIndex: 0\n        })\n      ],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5\n      })\n    });\n    map.addLayer(layerGroup);\n\n    const coordinateContainerElement = this.refs.coordinateString;\n    this.setState({\n      map: map\n    });\n    // get coordinates by click on map\n    map.on(\"click\", function(pointOfClick) {\n      const clickedCoordinate = transform(\n        pointOfClick.coordinate,\n        \"EPSG:3857\",\n        \"EPSG:4326\"\n      );\n      coordinateContainerElement.innerHTML =\n        clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"opticMapComponent\">\n        <div className=\"leftMapPanel\">\n          <div\n            className=\"coordinateString\"\n            id=\"coordinateString\"\n            ref=\"coordinateString\"\n          >\n            coordinates\n          </div>\n          <div className=\"featureLayers\">\n            <div className=\"layerCheckBox\">\n              <input\n                type=\"checkbox\"\n                name=\"featureLayerCheckbox\"\n                value=\"switchesLayer\"\n                className=\"switch\"\n              />\n              <span className=\"slider\"></span>\n              <div>switches</div>\n            </div>\n\n            <div className=\"layerCheckBox\">\n              <input\n                type=\"checkbox\"\n                name=\"featureLayerCheckbox\"\n                value=\"clutchesLayer\"\n                className=\"switch\"\n              />\n              <span className=\"slider\"></span>\n              <div>optic clutches</div>\n            </div>\n\n            <div className=\"layerCheckBox\">\n              <input\n                type=\"checkbox\"\n                name=\"featureLayerCheckbox\"\n                value=\"cableLayer\"\n                className=\"switch\"\n              />\n              <span className=\"slider\"></span>\n              <div>optic Cable</div>\n            </div>\n          </div>\n        </div>\n        <div\n          className=\"mapContainer\"\n          id=\"mapContainer\"\n          ref=\"mapContainer\"\n        ></div>\n        <div className=\"rightMapPanel\"></div>\n      </div>\n    );\n  }\n}\n\nexport default OpticMap;\n"]},"metadata":{},"sourceType":"module"}