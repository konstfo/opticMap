{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\javascript_studying\\\\opticMap\\\\optic-map\\\\src\\\\OpticMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Circle as CircleStyle, Fill, Stroke, Style } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\"; // import Group from \"ol/layer/Group\";\n\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport switchesArray from \"./res/switches.json\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      switchesLayerVisible: true\n    };\n    this.handleZoom = this.handleZoom.bind(this);\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12.8) {\n      this.switchesLayer.setStyle(new Style({\n        image: new CircleStyle({\n          radius: 1,\n          stroke: new Stroke({\n            color: \"black\",\n            width: 1\n          }),\n          fill: new Fill({\n            color: \"tomato\"\n          })\n        })\n      }));\n    } else if (zoomSize < 14) {\n      this.switchesLayer.setStyle(new Style({\n        image: new CircleStyle({\n          radius: 2.5,\n          stroke: new Stroke({\n            color: \"black\",\n            width: 1\n          }),\n          fill: new Fill({\n            color: \"tomato\"\n          })\n        })\n      }));\n    } else {\n      this.switchesLayer.setStyle(new Style({\n        image: new CircleStyle({\n          radius: 4,\n          stroke: new Stroke({\n            color: \"black\",\n            width: 1\n          }),\n          fill: new Fill({\n            color: \"tomato\"\n          })\n        })\n      }));\n    }\n  }\n\n  componentDidMount() {\n    // map settings\n    const extentView = transformExtent([20.969893\n    /** min x */\n    , 57.540673\n    /** min y */\n    , 28.413477\n    /** max x */\n    , 59.894102\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n    const extentLayer = transformExtent([16.581885\n    /** min x */\n    , 55.671002\n    /** min y */\n    , 32.794556\n    /** max x */\n    , 61.543774\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\"); //custom map controls\n\n    const switchesVisibility = /*@__PURE__*/function (Control) {\n      function RotateNorthControl(opt_options) {\n        var options = opt_options || {};\n        var button = document.createElement(\"button\");\n        button.innerHTML = \"N\";\n        var element = document.createElement(\"div\");\n        element.className = \"rotate-north ol-unselectable ol-control\";\n        element.appendChild(button);\n        Control.call(this, {\n          element: element,\n          target: options.target\n        });\n        button.addEventListener(\"click\", this.handleRotateNorth.bind(this), false);\n      }\n\n      if (Control) RotateNorthControl.__proto__ = Control;\n      RotateNorthControl.prototype = Object.create(Control && Control.prototype);\n      RotateNorthControl.prototype.constructor = RotateNorthControl;\n\n      RotateNorthControl.prototype.handleRotateNorth = function handleRotateNorth() {\n        this.getMap().getView().setRotation(0);\n      };\n\n      return RotateNorthControl;\n    }(Control); //custom map controls\n\n\n    let map = new Map({\n      target: this.refs.mapContainer,\n      layers: [new TileLayer({\n        source: new OSM(),\n        extent: extentLayer,\n        zIndex: 0\n      })],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5\n      }),\n      controls: defaults().extend([])\n    }); // map settings\n    //map feature settings\n\n    var featureList = [];\n    switchesArray.map(data => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress\n      });\n      featureList.push(featureElement);\n      console.log(featureElement.getKeys());\n    });\n    let vectorSource = new VectorSource({\n      features: featureList\n    });\n    this.switchesLayer = new VectorLayer({\n      source: vectorSource,\n      visible: true,\n      style: new Style({\n        image: new CircleStyle({\n          radius: 3.8,\n          stroke: new Stroke({\n            color: \"black\",\n            width: 1\n          }),\n          fill: new Fill({\n            color: \"tomato\"\n          })\n        })\n      })\n    });\n    const switchesCheckBoxElement = this.switchesCheckBoxRef; // switchesCheckBoxElement.current.onclick = () => {\n    //   console.log(this.switchesLayer.visible);\n    // };\n    //map feature settings\n    //layers settings\n\n    map.addLayer(this.switchesLayer); //layers settings\n    // get coordinates by click on map\n\n    map.on(\"click\", function (pointOfClick) {\n      const clickedCoordinate = transform(pointOfClick.coordinate, \"EPSG:3857\", \"EPSG:4326\");\n      let coordinateString = clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n      this.setState({\n        coordinates: coordinateString\n      });\n      map.forEachFeatureAtPixel(pointOfClick.pixel, function (feature, layer) {\n        console.log(feature.getProperties().address);\n        console.log(feature.getProperties().ipAddress);\n      });\n    }.bind(this)); // change features size on zoom change\n\n    map.getView().on(\"propertychange\", e => {\n      switch (e.key) {\n        case \"resolution\":\n          this.handleZoom(map.getView().getZoom());\n          console.log(map.getView().getZoom());\n          break;\n      }\n    });\n    this.setState({\n      map: map\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"opticMapComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"coordinateString\",\n      id: \"coordinateString\",\n      ref: this.coordinateRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }, this.state.coordinates)), React.createElement(\"div\", {\n      className: \"featureLayers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"switches\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241\n      },\n      __self: this\n    }, \"switches\")), React.createElement(\"div\", {\n      className: \"opticClutches\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, \"optic clutches\")), React.createElement(\"div\", {\n      className: \"opticCable\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, \"optic Cable\"))), React.createElement(\"div\", {\n      className: \"featureInfo\",\n      id: \"featureInfo\",\n      ref: \"featureInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapContainer\",\n      id: \"mapContainer\",\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rightMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 258\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default OpticMap;","map":{"version":3,"sources":["C:/Users/asus/Documents/javascript_studying/opticMap/optic-map/src/OpticMap.js"],"names":["React","Component","Map","View","TileLayer","OSM","fromLonLat","transformExtent","transform","Circle","CircleStyle","Fill","Stroke","Style","Feature","Point","Control","defaults","VectorLayer","VectorSource","switchesArray","OpticMap","constructor","props","state","map","coordinates","switchesLayerVisible","handleZoom","bind","zoomSize","switchesLayer","setStyle","image","radius","stroke","color","width","fill","componentDidMount","extentView","extentLayer","switchesVisibility","RotateNorthControl","opt_options","options","button","document","createElement","innerHTML","element","className","appendChild","call","target","addEventListener","handleRotateNorth","__proto__","prototype","Object","create","getMap","getView","setRotation","refs","mapContainer","layers","source","extent","zIndex","view","center","zoom","minZoom","controls","extend","featureList","data","featureElement","geometry","address","ipAddress","push","console","log","getKeys","vectorSource","features","visible","style","switchesCheckBoxElement","switchesCheckBoxRef","addLayer","on","pointOfClick","clickedCoordinate","coordinate","coordinateString","toFixed","setState","forEachFeatureAtPixel","pixel","feature","layer","getProperties","e","key","getZoom","render","coordinateRef"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Circle as CircleStyle, Fill, Stroke, Style } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\";\n// import Group from \"ol/layer/Group\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport switchesArray from \"./res/switches.json\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      switchesLayerVisible: true,\n    };\n\n    this.handleZoom = this.handleZoom.bind(this);\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12.8) {\n      this.switchesLayer.setStyle(\n        new Style({\n          image: new CircleStyle({\n            radius: 1,\n            stroke: new Stroke({ color: \"black\", width: 1 }),\n            fill: new Fill({ color: \"tomato\" }),\n          }),\n        })\n      );\n    } else if (zoomSize < 14) {\n      this.switchesLayer.setStyle(\n        new Style({\n          image: new CircleStyle({\n            radius: 2.5,\n            stroke: new Stroke({ color: \"black\", width: 1 }),\n            fill: new Fill({ color: \"tomato\" }),\n          }),\n        })\n      );\n    } else {\n      this.switchesLayer.setStyle(\n        new Style({\n          image: new CircleStyle({\n            radius: 4,\n            stroke: new Stroke({ color: \"black\", width: 1 }),\n            fill: new Fill({ color: \"tomato\" }),\n          }),\n        })\n      );\n    }\n  }\n  componentDidMount() {\n    // map settings\n    const extentView = transformExtent(\n      [\n        20.969893 /** min x */,\n        57.540673 /** min y */,\n        28.413477 /** max x */,\n        59.894102 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n    const extentLayer = transformExtent(\n      [\n        16.581885 /** min x */,\n        55.671002 /** min y */,\n        32.794556 /** max x */,\n        61.543774 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n\n    //custom map controls\n\n    const switchesVisibility = /*@__PURE__*/ (function (Control) {\n      function RotateNorthControl(opt_options) {\n        var options = opt_options || {};\n\n        var button = document.createElement(\"button\");\n        button.innerHTML = \"N\";\n\n        var element = document.createElement(\"div\");\n        element.className = \"rotate-north ol-unselectable ol-control\";\n        element.appendChild(button);\n\n        Control.call(this, {\n          element: element,\n          target: options.target,\n        });\n\n        button.addEventListener(\n          \"click\",\n          this.handleRotateNorth.bind(this),\n          false\n        );\n      }\n\n      if (Control) RotateNorthControl.__proto__ = Control;\n      RotateNorthControl.prototype = Object.create(\n        Control && Control.prototype\n      );\n      RotateNorthControl.prototype.constructor = RotateNorthControl;\n\n      RotateNorthControl.prototype.handleRotateNorth = function handleRotateNorth() {\n        this.getMap().getView().setRotation(0);\n      };\n\n      return RotateNorthControl;\n    })(Control);\n\n    //custom map controls\n\n    let map = new Map({\n      target: this.refs.mapContainer,\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n          extent: extentLayer,\n          zIndex: 0,\n        }),\n      ],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5,\n      }),\n      controls: defaults().extend([]),\n    });\n\n    // map settings\n\n    //map feature settings\n\n    var featureList = [];\n\n    switchesArray.map((data) => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n      });\n\n      featureList.push(featureElement);\n      console.log(featureElement.getKeys());\n    });\n\n    let vectorSource = new VectorSource({\n      features: featureList,\n    });\n\n    this.switchesLayer = new VectorLayer({\n      source: vectorSource,\n      visible: true,\n      style: new Style({\n        image: new CircleStyle({\n          radius: 3.8,\n          stroke: new Stroke({ color: \"black\", width: 1 }),\n          fill: new Fill({ color: \"tomato\" }),\n        }),\n      }),\n    });\n\n    const switchesCheckBoxElement = this.switchesCheckBoxRef;\n\n    // switchesCheckBoxElement.current.onclick = () => {\n    //   console.log(this.switchesLayer.visible);\n    // };\n    //map feature settings\n\n    //layers settings\n    map.addLayer(this.switchesLayer);\n    //layers settings\n    // get coordinates by click on map\n    map.on(\n      \"click\",\n      function (pointOfClick) {\n        const clickedCoordinate = transform(\n          pointOfClick.coordinate,\n          \"EPSG:3857\",\n          \"EPSG:4326\"\n        );\n        let coordinateString =\n          clickedCoordinate[0].toFixed(6) +\n          \",\" +\n          clickedCoordinate[1].toFixed(6);\n        this.setState({ coordinates: coordinateString });\n\n        map.forEachFeatureAtPixel(pointOfClick.pixel, function (\n          feature,\n          layer\n        ) {\n          console.log(feature.getProperties().address);\n          console.log(feature.getProperties().ipAddress);\n        });\n      }.bind(this)\n    );\n    // change features size on zoom change\n    map.getView().on(\"propertychange\", (e) => {\n      switch (e.key) {\n        case \"resolution\":\n          this.handleZoom(map.getView().getZoom());\n          console.log(map.getView().getZoom());\n\n          break;\n      }\n    });\n\n    this.setState({\n      map: map,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"opticMapComponent\">\n        <div className=\"leftMapPanel\">\n          <div\n            className=\"coordinateString\"\n            id=\"coordinateString\"\n            ref={this.coordinateRef}\n          >\n            <p>{this.state.coordinates}</p>\n          </div>\n\n          <div className=\"featureLayers\">\n            <div className=\"switches\">\n              <div>switches</div>\n            </div>\n\n            <div className=\"opticClutches\">\n              <div>optic clutches</div>\n            </div>\n            <div className=\"opticCable\">\n              <div>optic Cable</div>\n            </div>\n          </div>\n          <div className=\"featureInfo\" id=\"featureInfo\" ref=\"featureInfo\"></div>\n        </div>\n        <div\n          className=\"mapContainer\"\n          id=\"mapContainer\"\n          ref=\"mapContainer\"\n        ></div>\n        <div className=\"rightMapPanel\"></div>\n      </div>\n    );\n  }\n}\n\nexport default OpticMap;\n"]},"metadata":{},"sourceType":"module"}