{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\javascript_studying\\\\opticMap\\\\optic-map\\\\src\\\\OpticMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Circle as CircleStyle, Fill, Stroke, Style } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport switchesArray from \"./res/switches.json\";\nimport opticsArray from \"./res/optics.json\";\nimport LineString from \"ol/geom/LineString\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      displayedFeatures: null,\n      featureInfo: {\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null\n      }\n    };\n    this.handleZoom = this.handleZoom.bind(this);\n    this.setSwitchesToRightControlPanel = this.setSwitchesToRightControlPanel.bind(this);\n    this.setOpticsToRightControlPanel = this.setOpticsToRightControlPanel.bind(this);\n    this.initMapComponent = this.initMapComponent.bind(this);\n    this.changeFeaturesSize = this.changeFeaturesSize.bind(this);\n    this.getFeatureInfo = this.getFeatureInfo.bind(this);\n  }\n\n  initMapComponent() {\n    const extentView = transformExtent([20.969893\n    /** min x */\n    , 57.540673\n    /** min y */\n    , 28.413477\n    /** max x */\n    , 59.894102\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n    const extentLayer = transformExtent([16.581885\n    /** min x */\n    , 55.671002\n    /** min y */\n    , 32.794556\n    /** max x */\n    , 61.543774\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n\n    const layerVisibilityControl = function (Control) {\n      function layerVisibilityControl(layerName, className) {\n        const button = document.createElement(\"button\");\n        button.innerHTML = layerName;\n        var element = document.createElement(\"div\");\n        element.className = className + \" \" + \"ol-unselectable ol-control\";\n        element.appendChild(button);\n        Control.call(this, {\n          element: element\n        });\n        button.addEventListener(\"click\", this.handlelayerVisibilityControl.bind(this, layerName), false);\n      }\n\n      if (Control) layerVisibilityControl.__proto__ = Control;\n      layerVisibilityControl.prototype = Object.create(Control && Control.prototype);\n      layerVisibilityControl.prototype.constructor = layerVisibilityControl;\n\n      layerVisibilityControl.prototype.handlelayerVisibilityControl = function handlelayerVisibilityControl(layerName) {\n        map.getLayers().getArray().map(layer => {\n          if (layer.getClassName() === layerName) {\n            layer.setVisible(!layer.getVisible());\n          }\n        });\n      };\n\n      return layerVisibilityControl;\n    }(Control);\n\n    const map = new Map({\n      target: this.refs.mapContainer,\n      layers: [new TileLayer({\n        source: new OSM(),\n        extent: extentLayer,\n        zIndex: 0\n      })],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5\n      }),\n      controls: defaults({\n        attributionOptions: {\n          target: this.refs.mapContainer\n        }\n      }).extend([new layerVisibilityControl(\"switchesLayer\", \"switches-visible\"), new layerVisibilityControl(\"opticsLayer\", \"optics-visible\")])\n    });\n    let switchFeatureArray = [];\n    let opticsFeatureArray = [];\n    switchesArray.map(data => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo\n      });\n      switchFeatureArray.push(featureElement);\n    });\n    opticsArray.map(data => {\n      let coordinatesArray = [];\n      data.coordinates.map(coordinate => {\n        coordinatesArray.push(fromLonLat(coordinate));\n      });\n      let featureElement = new Feature({\n        geometry: new LineString(coordinatesArray),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo\n      });\n      opticsFeatureArray.push(featureElement);\n    });\n    let opticsLayerSource = new VectorSource({\n      features: opticsFeatureArray\n    });\n    this.opticsLayer = new VectorLayer({\n      className: \"opticsLayer\",\n      source: opticsLayerSource,\n      visible: true,\n      style: new Style({\n        stroke: new Stroke({\n          width: 2,\n          color: \"blue\"\n        })\n      })\n    });\n    let switchesLayerSource = new VectorSource({\n      features: switchFeatureArray\n    });\n    this.switchesLayer = new VectorLayer({\n      className: \"switchesLayer\",\n      source: switchesLayerSource,\n      visible: true,\n      style: new Style({\n        image: new CircleStyle({\n          radius: 3.8,\n          stroke: new Stroke({\n            color: \"black\",\n            width: 1\n          }),\n          fill: new Fill({\n            color: \"tomato\"\n          })\n        })\n      })\n    }); //layers with network equipment\n    //map feature settings\n    //layers settings\n\n    map.addLayer(this.switchesLayer);\n    map.addLayer(this.opticsLayer); //layers settings\n    //click on map\n\n    map.on(\"click\", function (pointOfClick) {\n      const clickedCoordinate = transform(pointOfClick.coordinate, \"EPSG:3857\", \"EPSG:4326\");\n      let coordinateString = clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n      this.setState({\n        coordinates: coordinateString\n      });\n      map.forEachFeatureAtPixel(pointOfClick.pixel, function (feature, layer) {\n        this.setState({\n          featureInfo: {\n            address: feature.getProperties().address,\n            ipAddress: feature.getProperties().ipAddress,\n            info: feature.getProperties().info,\n            locationInfo: feature.getProperties().locationInfo\n          }\n        });\n      }.bind(this));\n    }.bind(this)); // change features size on zoom change\n\n    map.getView().on(\"propertychange\", e => {\n      switch (e.key) {\n        case \"resolution\":\n          this.handleZoom(map.getView().getZoom());\n          break;\n      }\n    });\n    this.setState({\n      map: map\n    });\n  }\n\n  componentDidMount() {\n    this.initMapComponent();\n  }\n\n  setSwitchesToRightControlPanel() {\n    this.setState({\n      displayedFeatures: switchesArray\n    });\n  }\n\n  setOpticsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: opticsArray\n    });\n  }\n\n  handleRightPanelItemClick(item) {\n    if (item.ipAddress === null) {\n      this.state.map.getView().animate({\n        center: fromLonLat(item.coordinates[0])\n      }, {\n        zoom: 17.5\n      });\n    } else {\n      this.state.map.getView().animate({\n        center: fromLonLat(item.coordinates)\n      }, {\n        zoom: 19\n      });\n    }\n\n    this.setState({\n      featureInfo: {\n        address: item.address,\n        ipAddress: item.ipAddress,\n        info: item.info,\n        locationInfo: item.locationInfo\n      }\n    });\n  }\n\n  changeFeaturesSize(pointRadius, strokeWidth) {\n    this.switchesLayer.setStyle(new Style({\n      image: new CircleStyle({\n        radius: pointRadius,\n        stroke: new Stroke({\n          color: \"black\",\n          width: 1\n        }),\n        fill: new Fill({\n          color: \"tomato\"\n        })\n      })\n    }));\n    this.opticsLayer.setStyle(new Style({\n      stroke: new Stroke({\n        width: strokeWidth,\n        color: \"blue\"\n      })\n    }));\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12.8) {\n      this.changeFeaturesSize(1, 0.5);\n    } else if (zoomSize < 14) {\n      this.changeFeaturesSize(2.5, 2);\n    } else if (zoomSize < 18) {\n      this.changeFeaturesSize(5, 4);\n    } else {\n      this.changeFeaturesSize(9, 7);\n    }\n  }\n\n  getFeatureInfo(featureInfo) {\n    return featureInfo !== null ? React.createElement(\"div\", {\n      className: \"featureInfoElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, featureInfo) : React.createElement(\"div\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    });\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"opticMapComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"coordinateString\",\n      id: \"coordinateString\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, this.state.coordinates), React.createElement(\"div\", {\n      className: \"objectButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"switchesButton\",\n      onClick: this.setSwitchesToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 342\n      },\n      __self: this\n    }, \"switches\")), React.createElement(\"div\", {\n      className: \"objectButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"opticCableButton\",\n      onClick: this.setOpticsToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 351\n      },\n      __self: this\n    }, \"optic Cable\"))), React.createElement(\"div\", {\n      className: \"featureInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 360\n      },\n      __self: this\n    }, this.getFeatureInfo(this.state.featureInfo.address), this.getFeatureInfo(this.state.featureInfo.ipAddress), this.getFeatureInfo(this.state.featureInfo.info), this.getFeatureInfo(this.state.featureInfo.locationInfo))), React.createElement(\"div\", {\n      className: \"mapContainer\",\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rightMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"displayedFeatures\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369\n      },\n      __self: this\n    }, this.state.displayedFeatures !== null ? this.state.displayedFeatures.map(feature => {\n      return React.createElement(\"li\", {\n        className: \"displayedFeature\",\n        key: feature.coordinates,\n        onClick: this.handleRightPanelItemClick.bind(this, feature),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, feature.address);\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default OpticMap;","map":{"version":3,"sources":["C:/Users/asus/Documents/javascript_studying/opticMap/optic-map/src/OpticMap.js"],"names":["React","Component","Map","View","TileLayer","OSM","fromLonLat","transformExtent","transform","Circle","CircleStyle","Fill","Stroke","Style","Feature","Point","Control","defaults","VectorLayer","VectorSource","switchesArray","opticsArray","LineString","OpticMap","constructor","props","state","map","coordinates","displayedFeatures","featureInfo","address","ipAddress","info","locationInfo","handleZoom","bind","setSwitchesToRightControlPanel","setOpticsToRightControlPanel","initMapComponent","changeFeaturesSize","getFeatureInfo","extentView","extentLayer","layerVisibilityControl","layerName","className","button","document","createElement","innerHTML","element","appendChild","call","addEventListener","handlelayerVisibilityControl","__proto__","prototype","Object","create","getLayers","getArray","layer","getClassName","setVisible","getVisible","target","refs","mapContainer","layers","source","extent","zIndex","view","center","zoom","minZoom","controls","attributionOptions","extend","switchFeatureArray","opticsFeatureArray","data","featureElement","geometry","push","coordinatesArray","coordinate","opticsLayerSource","features","opticsLayer","visible","style","stroke","width","color","switchesLayerSource","switchesLayer","image","radius","fill","addLayer","on","pointOfClick","clickedCoordinate","coordinateString","toFixed","setState","forEachFeatureAtPixel","pixel","feature","getProperties","getView","e","key","getZoom","componentDidMount","handleRightPanelItemClick","item","animate","pointRadius","strokeWidth","setStyle","zoomSize","render","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,IAA1B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,SAAtC,QAAuD,SAAvD;AACA,OAAO,gBAAP;AACA,SAASC,MAAM,IAAIC,WAAnB,EAAgCC,IAAhC,EAAsCC,MAAtC,EAA8CC,KAA9C,QAA2D,UAA3D;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,YAAlC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;;AAEA,MAAMC,QAAN,SAAuBtB,SAAvB,CAAiC;AAC/BuB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,IADM;AAEXC,MAAAA,WAAW,EAAE,aAFF;AAGXC,MAAAA,iBAAiB,EAAE,IAHR;AAIXC,MAAAA,WAAW,EAAE;AACXC,QAAAA,OAAO,EAAE,IADE;AAEXC,QAAAA,SAAS,EAAE,IAFA;AAGXC,QAAAA,IAAI,EAAE,IAHK;AAIXC,QAAAA,YAAY,EAAE;AAJH;AAJF,KAAb;AAYA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKC,8BAAL,GAAsC,KAAKA,8BAAL,CAAoCD,IAApC,CACpC,IADoC,CAAtC;AAIA,SAAKE,4BAAL,GAAoC,KAAKA,4BAAL,CAAkCF,IAAlC,CAClC,IADkC,CAApC;AAIA,SAAKG,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBH,IAAtB,CAA2B,IAA3B,CAAxB;AAEA,SAAKI,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBJ,IAAxB,CAA6B,IAA7B,CAA1B;AAEA,SAAKK,cAAL,GAAsB,KAAKA,cAAL,CAAoBL,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDG,EAAAA,gBAAgB,GAAG;AACjB,UAAMG,UAAU,GAAGnC,eAAe,CAChC,CACE;AAAU;AADZ,MAEE;AAAU;AAFZ,MAGE;AAAU;AAHZ,MAIE;AAAU;AAJZ,KADgC,EAOhC,WAPgC,EAQhC,WARgC,CAAlC;AAUA,UAAMoC,WAAW,GAAGpC,eAAe,CACjC,CACE;AAAU;AADZ,MAEE;AAAU;AAFZ,MAGE;AAAU;AAHZ,MAIE;AAAU;AAJZ,KADiC,EAOjC,WAPiC,EAQjC,WARiC,CAAnC;;AAWA,UAAMqC,sBAAsB,GAAI,UAAU5B,OAAV,EAAmB;AACjD,eAAS4B,sBAAT,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsD;AACpD,cAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,QAAAA,MAAM,CAACG,SAAP,GAAmBL,SAAnB;AAEA,YAAIM,OAAO,GAAGH,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAE,QAAAA,OAAO,CAACL,SAAR,GAAoBA,SAAS,GAAG,GAAZ,GAAkB,4BAAtC;AACAK,QAAAA,OAAO,CAACC,WAAR,CAAoBL,MAApB;AAEA/B,QAAAA,OAAO,CAACqC,IAAR,CAAa,IAAb,EAAmB;AACjBF,UAAAA,OAAO,EAAEA;AADQ,SAAnB;AAIAJ,QAAAA,MAAM,CAACO,gBAAP,CACE,OADF,EAEE,KAAKC,4BAAL,CAAkCnB,IAAlC,CAAuC,IAAvC,EAA6CS,SAA7C,CAFF,EAGE,KAHF;AAKD;;AAED,UAAI7B,OAAJ,EAAa4B,sBAAsB,CAACY,SAAvB,GAAmCxC,OAAnC;AACb4B,MAAAA,sBAAsB,CAACa,SAAvB,GAAmCC,MAAM,CAACC,MAAP,CACjC3C,OAAO,IAAIA,OAAO,CAACyC,SADc,CAAnC;AAGAb,MAAAA,sBAAsB,CAACa,SAAvB,CAAiCjC,WAAjC,GAA+CoB,sBAA/C;;AAEAA,MAAAA,sBAAsB,CAACa,SAAvB,CAAiCF,4BAAjC,GAAgE,SAASA,4BAAT,CAC9DV,SAD8D,EAE9D;AACAlB,QAAAA,GAAG,CACAiC,SADH,GAEGC,QAFH,GAGGlC,GAHH,CAGQmC,KAAD,IAAW;AACd,cAAIA,KAAK,CAACC,YAAN,OAAyBlB,SAA7B,EAAwC;AACtCiB,YAAAA,KAAK,CAACE,UAAN,CAAiB,CAACF,KAAK,CAACG,UAAN,EAAlB;AACD;AACF,SAPH;AAQD,OAXD;;AAaA,aAAOrB,sBAAP;AACD,KAxC8B,CAwC5B5B,OAxC4B,CAA/B;;AA0CA,UAAMW,GAAG,GAAG,IAAIzB,GAAJ,CAAQ;AAClBgE,MAAAA,MAAM,EAAE,KAAKC,IAAL,CAAUC,YADA;AAElBC,MAAAA,MAAM,EAAE,CACN,IAAIjE,SAAJ,CAAc;AACZkE,QAAAA,MAAM,EAAE,IAAIjE,GAAJ,EADI;AAEZkE,QAAAA,MAAM,EAAE5B,WAFI;AAGZ6B,QAAAA,MAAM,EAAE;AAHI,OAAd,CADM,CAFU;AASlBC,MAAAA,IAAI,EAAE,IAAItE,IAAJ,CAAS;AACbuE,QAAAA,MAAM,EAAEpE,UAAU,CAAC,CAAC,SAAD,EAAY,SAAZ,CAAD,CADL;AAEbqE,QAAAA,IAAI,EAAE,EAFO;AAGbJ,QAAAA,MAAM,EAAE7B,UAHK;AAIbkC,QAAAA,OAAO,EAAE;AAJI,OAAT,CATY;AAelBC,MAAAA,QAAQ,EAAE5D,QAAQ,CAAC;AACjB6D,QAAAA,kBAAkB,EAAE;AAClBZ,UAAAA,MAAM,EAAE,KAAKC,IAAL,CAAUC;AADA;AADH,OAAD,CAAR,CAIPW,MAJO,CAIA,CACR,IAAInC,sBAAJ,CAA2B,eAA3B,EAA4C,kBAA5C,CADQ,EAER,IAAIA,sBAAJ,CAA2B,aAA3B,EAA0C,gBAA1C,CAFQ,CAJA;AAfQ,KAAR,CAAZ;AAwBA,QAAIoC,kBAAkB,GAAG,EAAzB;AACA,QAAIC,kBAAkB,GAAG,EAAzB;AAEA7D,IAAAA,aAAa,CAACO,GAAd,CAAmBuD,IAAD,IAAU;AAC1B,UAAIC,cAAc,GAAG,IAAIrE,OAAJ,CAAY;AAC/BsE,QAAAA,QAAQ,EAAE,IAAIrE,KAAJ,CAAUT,UAAU,CAAC4E,IAAI,CAACtD,WAAN,CAApB,CADqB;AAE/BG,QAAAA,OAAO,EAAEmD,IAAI,CAACnD,OAFiB;AAG/BC,QAAAA,SAAS,EAAEkD,IAAI,CAAClD,SAHe;AAI/BC,QAAAA,IAAI,EAAEiD,IAAI,CAACjD,IAJoB;AAK/BC,QAAAA,YAAY,EAAEgD,IAAI,CAAChD;AALY,OAAZ,CAArB;AAOA8C,MAAAA,kBAAkB,CAACK,IAAnB,CAAwBF,cAAxB;AACD,KATD;AAWA9D,IAAAA,WAAW,CAACM,GAAZ,CAAiBuD,IAAD,IAAU;AACxB,UAAII,gBAAgB,GAAG,EAAvB;AACAJ,MAAAA,IAAI,CAACtD,WAAL,CAAiBD,GAAjB,CAAsB4D,UAAD,IAAgB;AACnCD,QAAAA,gBAAgB,CAACD,IAAjB,CAAsB/E,UAAU,CAACiF,UAAD,CAAhC;AACD,OAFD;AAGA,UAAIJ,cAAc,GAAG,IAAIrE,OAAJ,CAAY;AAC/BsE,QAAAA,QAAQ,EAAE,IAAI9D,UAAJ,CAAegE,gBAAf,CADqB;AAE/BvD,QAAAA,OAAO,EAAEmD,IAAI,CAACnD,OAFiB;AAG/BC,QAAAA,SAAS,EAAEkD,IAAI,CAAClD,SAHe;AAI/BC,QAAAA,IAAI,EAAEiD,IAAI,CAACjD,IAJoB;AAK/BC,QAAAA,YAAY,EAAEgD,IAAI,CAAChD;AALY,OAAZ,CAArB;AAQA+C,MAAAA,kBAAkB,CAACI,IAAnB,CAAwBF,cAAxB;AACD,KAdD;AAgBA,QAAIK,iBAAiB,GAAG,IAAIrE,YAAJ,CAAiB;AACvCsE,MAAAA,QAAQ,EAAER;AAD6B,KAAjB,CAAxB;AAIA,SAAKS,WAAL,GAAmB,IAAIxE,WAAJ,CAAgB;AACjC4B,MAAAA,SAAS,EAAE,aADsB;AAEjCwB,MAAAA,MAAM,EAAEkB,iBAFyB;AAGjCG,MAAAA,OAAO,EAAE,IAHwB;AAIjCC,MAAAA,KAAK,EAAE,IAAI/E,KAAJ,CAAU;AACfgF,QAAAA,MAAM,EAAE,IAAIjF,MAAJ,CAAW;AACjBkF,UAAAA,KAAK,EAAE,CADU;AAEjBC,UAAAA,KAAK,EAAE;AAFU,SAAX;AADO,OAAV;AAJ0B,KAAhB,CAAnB;AAYA,QAAIC,mBAAmB,GAAG,IAAI7E,YAAJ,CAAiB;AACzCsE,MAAAA,QAAQ,EAAET;AAD+B,KAAjB,CAA1B;AAIA,SAAKiB,aAAL,GAAqB,IAAI/E,WAAJ,CAAgB;AACnC4B,MAAAA,SAAS,EAAE,eADwB;AAEnCwB,MAAAA,MAAM,EAAE0B,mBAF2B;AAGnCL,MAAAA,OAAO,EAAE,IAH0B;AAInCC,MAAAA,KAAK,EAAE,IAAI/E,KAAJ,CAAU;AACfqF,QAAAA,KAAK,EAAE,IAAIxF,WAAJ,CAAgB;AACrByF,UAAAA,MAAM,EAAE,GADa;AAErBN,UAAAA,MAAM,EAAE,IAAIjF,MAAJ,CAAW;AAAEmF,YAAAA,KAAK,EAAE,OAAT;AAAkBD,YAAAA,KAAK,EAAE;AAAzB,WAAX,CAFa;AAGrBM,UAAAA,IAAI,EAAE,IAAIzF,IAAJ,CAAS;AAAEoF,YAAAA,KAAK,EAAE;AAAT,WAAT;AAHe,SAAhB;AADQ,OAAV;AAJ4B,KAAhB,CAArB,CA1IiB,CAuJjB;AAEA;AAEA;;AACApE,IAAAA,GAAG,CAAC0E,QAAJ,CAAa,KAAKJ,aAAlB;AACAtE,IAAAA,GAAG,CAAC0E,QAAJ,CAAa,KAAKX,WAAlB,EA7JiB,CA8JjB;AACA;;AACA/D,IAAAA,GAAG,CAAC2E,EAAJ,CACE,OADF,EAEE,UAAUC,YAAV,EAAwB;AACtB,YAAMC,iBAAiB,GAAGhG,SAAS,CACjC+F,YAAY,CAAChB,UADoB,EAEjC,WAFiC,EAGjC,WAHiC,CAAnC;AAMA,UAAIkB,gBAAgB,GAClBD,iBAAiB,CAAC,CAAD,CAAjB,CAAqBE,OAArB,CAA6B,CAA7B,IACA,GADA,GAEAF,iBAAiB,CAAC,CAAD,CAAjB,CAAqBE,OAArB,CAA6B,CAA7B,CAHF;AAIA,WAAKC,QAAL,CAAc;AAAE/E,QAAAA,WAAW,EAAE6E;AAAf,OAAd;AAEA9E,MAAAA,GAAG,CAACiF,qBAAJ,CACEL,YAAY,CAACM,KADf,EAEE,UAAUC,OAAV,EAAmBhD,KAAnB,EAA0B;AACxB,aAAK6C,QAAL,CAAc;AACZ7E,UAAAA,WAAW,EAAE;AACXC,YAAAA,OAAO,EAAE+E,OAAO,CAACC,aAAR,GAAwBhF,OADtB;AAEXC,YAAAA,SAAS,EAAE8E,OAAO,CAACC,aAAR,GAAwB/E,SAFxB;AAGXC,YAAAA,IAAI,EAAE6E,OAAO,CAACC,aAAR,GAAwB9E,IAHnB;AAIXC,YAAAA,YAAY,EAAE4E,OAAO,CAACC,aAAR,GAAwB7E;AAJ3B;AADD,SAAd;AAQD,OATD,CASEE,IATF,CASO,IATP,CAFF;AAaD,KA1BD,CA0BEA,IA1BF,CA0BO,IA1BP,CAFF,EAhKiB,CA+LjB;;AACAT,IAAAA,GAAG,CAACqF,OAAJ,GAAcV,EAAd,CAAiB,gBAAjB,EAAoCW,CAAD,IAAO;AACxC,cAAQA,CAAC,CAACC,GAAV;AACE,aAAK,YAAL;AACE,eAAK/E,UAAL,CAAgBR,GAAG,CAACqF,OAAJ,GAAcG,OAAd,EAAhB;AACA;AAHJ;AAKD,KAND;AAOA,SAAKR,QAAL,CAAc;AACZhF,MAAAA,GAAG,EAAEA;AADO,KAAd;AAGD;;AAEDyF,EAAAA,iBAAiB,GAAG;AAClB,SAAK7E,gBAAL;AACD;;AAEDF,EAAAA,8BAA8B,GAAG;AAC/B,SAAKsE,QAAL,CAAc;AACZ9E,MAAAA,iBAAiB,EAAET;AADP,KAAd;AAGD;;AACDkB,EAAAA,4BAA4B,GAAG;AAC7B,SAAKqE,QAAL,CAAc;AACZ9E,MAAAA,iBAAiB,EAAER;AADP,KAAd;AAGD;;AAEDgG,EAAAA,yBAAyB,CAACC,IAAD,EAAO;AAC9B,QAAIA,IAAI,CAACtF,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,WAAKN,KAAL,CAAWC,GAAX,CAAeqF,OAAf,GAAyBO,OAAzB,CACE;AACE7C,QAAAA,MAAM,EAAEpE,UAAU,CAACgH,IAAI,CAAC1F,WAAL,CAAiB,CAAjB,CAAD;AADpB,OADF,EAIE;AAAE+C,QAAAA,IAAI,EAAE;AAAR,OAJF;AAMD,KAPD,MAOO;AACL,WAAKjD,KAAL,CAAWC,GAAX,CACGqF,OADH,GAEGO,OAFH,CAEW;AAAE7C,QAAAA,MAAM,EAAEpE,UAAU,CAACgH,IAAI,CAAC1F,WAAN;AAApB,OAFX,EAEqD;AAAE+C,QAAAA,IAAI,EAAE;AAAR,OAFrD;AAGD;;AACD,SAAKgC,QAAL,CAAc;AACZ7E,MAAAA,WAAW,EAAE;AACXC,QAAAA,OAAO,EAAEuF,IAAI,CAACvF,OADH;AAEXC,QAAAA,SAAS,EAAEsF,IAAI,CAACtF,SAFL;AAGXC,QAAAA,IAAI,EAAEqF,IAAI,CAACrF,IAHA;AAIXC,QAAAA,YAAY,EAAEoF,IAAI,CAACpF;AAJR;AADD,KAAd;AAQD;;AAEDM,EAAAA,kBAAkB,CAACgF,WAAD,EAAcC,WAAd,EAA2B;AAC3C,SAAKxB,aAAL,CAAmByB,QAAnB,CACE,IAAI7G,KAAJ,CAAU;AACRqF,MAAAA,KAAK,EAAE,IAAIxF,WAAJ,CAAgB;AACrByF,QAAAA,MAAM,EAAEqB,WADa;AAErB3B,QAAAA,MAAM,EAAE,IAAIjF,MAAJ,CAAW;AAAEmF,UAAAA,KAAK,EAAE,OAAT;AAAkBD,UAAAA,KAAK,EAAE;AAAzB,SAAX,CAFa;AAGrBM,QAAAA,IAAI,EAAE,IAAIzF,IAAJ,CAAS;AAAEoF,UAAAA,KAAK,EAAE;AAAT,SAAT;AAHe,OAAhB;AADC,KAAV,CADF;AASA,SAAKL,WAAL,CAAiBgC,QAAjB,CACE,IAAI7G,KAAJ,CAAU;AACRgF,MAAAA,MAAM,EAAE,IAAIjF,MAAJ,CAAW;AACjBkF,QAAAA,KAAK,EAAE2B,WADU;AAEjB1B,QAAAA,KAAK,EAAE;AAFU,OAAX;AADA,KAAV,CADF;AAQD;;AAED5D,EAAAA,UAAU,CAACwF,QAAD,EAAW;AACnB,QAAIA,QAAQ,GAAG,IAAf,EAAqB;AACnB,WAAKnF,kBAAL,CAAwB,CAAxB,EAA2B,GAA3B;AACD,KAFD,MAEO,IAAImF,QAAQ,GAAG,EAAf,EAAmB;AACxB,WAAKnF,kBAAL,CAAwB,GAAxB,EAA6B,CAA7B;AACD,KAFM,MAEA,IAAImF,QAAQ,GAAG,EAAf,EAAmB;AACxB,WAAKnF,kBAAL,CAAwB,CAAxB,EAA2B,CAA3B;AACD,KAFM,MAEA;AACL,WAAKA,kBAAL,CAAwB,CAAxB,EAA2B,CAA3B;AACD;AACF;;AAEDC,EAAAA,cAAc,CAACX,WAAD,EAAc;AAC1B,WAAOA,WAAW,KAAK,IAAhB,GACL;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCA,WAArC,CADK,GAGL;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF;AAKD;;AACD8F,EAAAA,MAAM,GAAG;AACPC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKpG,KAAjB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,EAAE,EAAC,kBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,KAAL,CAAWE,WADd,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,gBADZ;AAEE,MAAA,OAAO,EAAE,KAAKS,8BAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAUE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,kBADZ;AAEE,MAAA,OAAO,EAAE,KAAKC,4BAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAVF,CALF,EAyBE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKG,cAAL,CAAoB,KAAKf,KAAL,CAAWI,WAAX,CAAuBC,OAA3C,CADH,EAEG,KAAKU,cAAL,CAAoB,KAAKf,KAAL,CAAWI,WAAX,CAAuBE,SAA3C,CAFH,EAGG,KAAKS,cAAL,CAAoB,KAAKf,KAAL,CAAWI,WAAX,CAAuBG,IAA3C,CAHH,EAIG,KAAKQ,cAAL,CAAoB,KAAKf,KAAL,CAAWI,WAAX,CAAuBI,YAA3C,CAJH,CAzBF,CADF,EAiCE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjCF,EAkCE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKR,KAAL,CAAWG,iBAAX,KAAiC,IAAjC,GACC,KAAKH,KAAL,CAAWG,iBAAX,CAA6BF,GAA7B,CAAkCmF,OAAD,IAAa;AAC5C,aACE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,GAAG,EAAEA,OAAO,CAAClF,WAFf;AAGE,QAAA,OAAO,EAAE,KAAKyF,yBAAL,CAA+BjF,IAA/B,CAAoC,IAApC,EAA0C0E,OAA1C,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,OAAO,CAAC/E,OALX,CADF;AASD,KAVD,CADD,GAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,CADF,CAlCF,CADF;AAwDD;;AApX8B;;AAuXjC,eAAeR,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Circle as CircleStyle, Fill, Stroke, Style } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport switchesArray from \"./res/switches.json\";\nimport opticsArray from \"./res/optics.json\";\nimport LineString from \"ol/geom/LineString\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      displayedFeatures: null,\n      featureInfo: {\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null,\n      },\n    };\n\n    this.handleZoom = this.handleZoom.bind(this);\n\n    this.setSwitchesToRightControlPanel = this.setSwitchesToRightControlPanel.bind(\n      this\n    );\n\n    this.setOpticsToRightControlPanel = this.setOpticsToRightControlPanel.bind(\n      this\n    );\n\n    this.initMapComponent = this.initMapComponent.bind(this);\n\n    this.changeFeaturesSize = this.changeFeaturesSize.bind(this);\n\n    this.getFeatureInfo = this.getFeatureInfo.bind(this);\n  }\n\n  initMapComponent() {\n    const extentView = transformExtent(\n      [\n        20.969893 /** min x */,\n        57.540673 /** min y */,\n        28.413477 /** max x */,\n        59.894102 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n    const extentLayer = transformExtent(\n      [\n        16.581885 /** min x */,\n        55.671002 /** min y */,\n        32.794556 /** max x */,\n        61.543774 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n\n    const layerVisibilityControl = (function (Control) {\n      function layerVisibilityControl(layerName, className) {\n        const button = document.createElement(\"button\");\n        button.innerHTML = layerName;\n\n        var element = document.createElement(\"div\");\n        element.className = className + \" \" + \"ol-unselectable ol-control\";\n        element.appendChild(button);\n\n        Control.call(this, {\n          element: element,\n        });\n\n        button.addEventListener(\n          \"click\",\n          this.handlelayerVisibilityControl.bind(this, layerName),\n          false\n        );\n      }\n\n      if (Control) layerVisibilityControl.__proto__ = Control;\n      layerVisibilityControl.prototype = Object.create(\n        Control && Control.prototype\n      );\n      layerVisibilityControl.prototype.constructor = layerVisibilityControl;\n\n      layerVisibilityControl.prototype.handlelayerVisibilityControl = function handlelayerVisibilityControl(\n        layerName\n      ) {\n        map\n          .getLayers()\n          .getArray()\n          .map((layer) => {\n            if (layer.getClassName() === layerName) {\n              layer.setVisible(!layer.getVisible());\n            }\n          });\n      };\n\n      return layerVisibilityControl;\n    })(Control);\n\n    const map = new Map({\n      target: this.refs.mapContainer,\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n          extent: extentLayer,\n          zIndex: 0,\n        }),\n      ],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5,\n      }),\n      controls: defaults({\n        attributionOptions: {\n          target: this.refs.mapContainer,\n        },\n      }).extend([\n        new layerVisibilityControl(\"switchesLayer\", \"switches-visible\"),\n        new layerVisibilityControl(\"opticsLayer\", \"optics-visible\"),\n      ]),\n    });\n    let switchFeatureArray = [];\n    let opticsFeatureArray = [];\n\n    switchesArray.map((data) => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n      });\n      switchFeatureArray.push(featureElement);\n    });\n\n    opticsArray.map((data) => {\n      let coordinatesArray = [];\n      data.coordinates.map((coordinate) => {\n        coordinatesArray.push(fromLonLat(coordinate));\n      });\n      let featureElement = new Feature({\n        geometry: new LineString(coordinatesArray),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n      });\n\n      opticsFeatureArray.push(featureElement);\n    });\n\n    let opticsLayerSource = new VectorSource({\n      features: opticsFeatureArray,\n    });\n\n    this.opticsLayer = new VectorLayer({\n      className: \"opticsLayer\",\n      source: opticsLayerSource,\n      visible: true,\n      style: new Style({\n        stroke: new Stroke({\n          width: 2,\n          color: \"blue\",\n        }),\n      }),\n    });\n\n    let switchesLayerSource = new VectorSource({\n      features: switchFeatureArray,\n    });\n\n    this.switchesLayer = new VectorLayer({\n      className: \"switchesLayer\",\n      source: switchesLayerSource,\n      visible: true,\n      style: new Style({\n        image: new CircleStyle({\n          radius: 3.8,\n          stroke: new Stroke({ color: \"black\", width: 1 }),\n          fill: new Fill({ color: \"tomato\" }),\n        }),\n      }),\n    });\n\n    //layers with network equipment\n\n    //map feature settings\n\n    //layers settings\n    map.addLayer(this.switchesLayer);\n    map.addLayer(this.opticsLayer);\n    //layers settings\n    //click on map\n    map.on(\n      \"click\",\n      function (pointOfClick) {\n        const clickedCoordinate = transform(\n          pointOfClick.coordinate,\n          \"EPSG:3857\",\n          \"EPSG:4326\"\n        );\n\n        let coordinateString =\n          clickedCoordinate[0].toFixed(6) +\n          \",\" +\n          clickedCoordinate[1].toFixed(6);\n        this.setState({ coordinates: coordinateString });\n\n        map.forEachFeatureAtPixel(\n          pointOfClick.pixel,\n          function (feature, layer) {\n            this.setState({\n              featureInfo: {\n                address: feature.getProperties().address,\n                ipAddress: feature.getProperties().ipAddress,\n                info: feature.getProperties().info,\n                locationInfo: feature.getProperties().locationInfo,\n              },\n            });\n          }.bind(this)\n        );\n      }.bind(this)\n    );\n\n    // change features size on zoom change\n    map.getView().on(\"propertychange\", (e) => {\n      switch (e.key) {\n        case \"resolution\":\n          this.handleZoom(map.getView().getZoom());\n          break;\n      }\n    });\n    this.setState({\n      map: map,\n    });\n  }\n\n  componentDidMount() {\n    this.initMapComponent();\n  }\n\n  setSwitchesToRightControlPanel() {\n    this.setState({\n      displayedFeatures: switchesArray,\n    });\n  }\n  setOpticsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: opticsArray,\n    });\n  }\n\n  handleRightPanelItemClick(item) {\n    if (item.ipAddress === null) {\n      this.state.map.getView().animate(\n        {\n          center: fromLonLat(item.coordinates[0]),\n        },\n        { zoom: 17.5 }\n      );\n    } else {\n      this.state.map\n        .getView()\n        .animate({ center: fromLonLat(item.coordinates) }, { zoom: 19 });\n    }\n    this.setState({\n      featureInfo: {\n        address: item.address,\n        ipAddress: item.ipAddress,\n        info: item.info,\n        locationInfo: item.locationInfo,\n      },\n    });\n  }\n\n  changeFeaturesSize(pointRadius, strokeWidth) {\n    this.switchesLayer.setStyle(\n      new Style({\n        image: new CircleStyle({\n          radius: pointRadius,\n          stroke: new Stroke({ color: \"black\", width: 1 }),\n          fill: new Fill({ color: \"tomato\" }),\n        }),\n      })\n    );\n    this.opticsLayer.setStyle(\n      new Style({\n        stroke: new Stroke({\n          width: strokeWidth,\n          color: \"blue\",\n        }),\n      })\n    );\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12.8) {\n      this.changeFeaturesSize(1, 0.5);\n    } else if (zoomSize < 14) {\n      this.changeFeaturesSize(2.5, 2);\n    } else if (zoomSize < 18) {\n      this.changeFeaturesSize(5, 4);\n    } else {\n      this.changeFeaturesSize(9, 7);\n    }\n  }\n\n  getFeatureInfo(featureInfo) {\n    return featureInfo !== null ? (\n      <div className=\"featureInfoElement\">{featureInfo}</div>\n    ) : (\n      <div className=\"hidden\"></div>\n    );\n  }\n  render() {\n    console.log(this.state);\n    return (\n      <div className=\"opticMapComponent\">\n        <div className=\"leftMapPanel\">\n          <div className=\"coordinateString\" id=\"coordinateString\">\n            {this.state.coordinates}\n          </div>\n\n          <div className=\"objectButtons\">\n            <div className=\"objectButton\">\n              <div\n                className=\"switchesButton\"\n                onClick={this.setSwitchesToRightControlPanel}\n              >\n                switches\n              </div>\n            </div>\n\n            <div className=\"objectButton\">\n              <div\n                className=\"opticCableButton\"\n                onClick={this.setOpticsToRightControlPanel}\n              >\n                optic Cable\n              </div>\n            </div>\n          </div>\n\n          <div className=\"featureInfo\">\n            {this.getFeatureInfo(this.state.featureInfo.address)}\n            {this.getFeatureInfo(this.state.featureInfo.ipAddress)}\n            {this.getFeatureInfo(this.state.featureInfo.info)}\n            {this.getFeatureInfo(this.state.featureInfo.locationInfo)}\n          </div>\n        </div>\n        <div className=\"mapContainer\" ref=\"mapContainer\"></div>\n        <div className=\"rightMapPanel\">\n          <div className=\"displayedFeatures\">\n            {this.state.displayedFeatures !== null ? (\n              this.state.displayedFeatures.map((feature) => {\n                return (\n                  <li\n                    className=\"displayedFeature\"\n                    key={feature.coordinates}\n                    onClick={this.handleRightPanelItemClick.bind(this, feature)}\n                  >\n                    {feature.address}\n                  </li>\n                );\n              })\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OpticMap;\n"]},"metadata":{},"sourceType":"module"}