{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\javascript_studying\\\\opticMap\\\\optic-map\\\\src\\\\OpticMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Circle as CircleStyle, Fill, Stroke, Style } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\"; // import Group from \"ol/layer/Group\";\n\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport switchesArray from \"./res/switches.json\";\n\nclass OpticMap extends Component {\n  componentDidMount() {\n    // map settings\n    const extentView = transformExtent([20.969893\n    /** min x */\n    , 57.540673\n    /** min y */\n    , 28.413477\n    /** max x */\n    , 59.894102\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n    const extentLayer = transformExtent([16.581885\n    /** min x */\n    , 55.671002\n    /** min y */\n    , 32.794556\n    /** max x */\n    , 61.543774\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n    let map = new Map({\n      target: this.refs.mapContainer,\n      layers: [new TileLayer({\n        source: new OSM(),\n        extent: extentLayer,\n        zIndex: 0\n      })],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5\n      })\n    });\n    this.setState({\n      map: map\n    }); // map settings\n    //map feature settings\n\n    var featureList = [];\n    switchesArray.map(data => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress\n      });\n      featureList.push(featureElement);\n      console.log(data.address);\n      console.log(featureElement.getKeys());\n    });\n    let vectorSource = new VectorSource({\n      features: featureList\n    });\n    let switchesLayer = new VectorLayer({\n      source: vectorSource,\n      visible: true,\n      style: new Style({\n        image: new CircleStyle({\n          radius: 3.8,\n          stroke: new Stroke({\n            color: \"black\",\n            width: 1\n          }),\n          fill: new Fill({\n            color: \"tomato\"\n          })\n        })\n      })\n    }); //map feature settings\n\n    const coordinateString = \"coordinates\";\n    const featureInfoRef = React.createRef(); //map feature settings\n    //layers settings\n\n    map.addLayer(switchesLayer); //layers settings\n    // get coordinates by click on map\n\n    map.on(\"click\", function (pointOfClick) {\n      const clickedCoordinate = transform(pointOfClick.coordinate, \"EPSG:3857\", \"EPSG:4326\");\n      coordinateString = clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n      map.forEachFeatureAtPixel(pointOfClick.pixel, function (feature, layer) {\n        featureInfoRef.current = feature.getProperties().address;\n        console.log(feature.getProperties().address);\n        console.log(feature.getProperties().ipAddress);\n      });\n    });\n    map.getView().on(\"propertychange\", function (e) {\n      switch (e.key) {\n        case \"resolution\":\n          console.log(map.getView().getZoom());\n\n          if (map.getView().getZoom() < 12.8) {\n            switchesLayer.setStyle(new Style({\n              image: new CircleStyle({\n                radius: 1,\n                stroke: new Stroke({\n                  color: \"black\",\n                  width: 1\n                }),\n                fill: new Fill({\n                  color: \"tomato\"\n                })\n              })\n            }));\n          } else if (map.getView().getZoom() < 14) {\n            switchesLayer.setStyle(new Style({\n              image: new CircleStyle({\n                radius: 2.5,\n                stroke: new Stroke({\n                  color: \"black\",\n                  width: 1\n                }),\n                fill: new Fill({\n                  color: \"tomato\"\n                })\n              })\n            }));\n          } else {\n            switchesLayer.setStyle(new Style({\n              image: new CircleStyle({\n                radius: 4,\n                stroke: new Stroke({\n                  color: \"black\",\n                  width: 1\n                }),\n                fill: new Fill({\n                  color: \"tomato\"\n                })\n              })\n            }));\n          }\n\n          break;\n      }\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"opticMapComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"coordinateString\",\n      id: \"coordinateString\",\n      text: \"coordinates\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"featureLayers\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"layerCheckBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"switchesLayer\",\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, \"switches\")), React.createElement(\"div\", {\n      className: \"layerCheckBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"clutchesLayer\",\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, \"optic clutches\")), React.createElement(\"div\", {\n      className: \"layerCheckBox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"checkbox\",\n      value: \"cableLayer\",\n      className: \"switch\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"slider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, \"optic Cable\"))), React.createElement(\"div\", {\n      className: \"featureInfo\",\n      id: \"featureInfo\",\n      ref: \"featureInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapContainer\",\n      id: \"mapContainer\",\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rightMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default OpticMap;","map":{"version":3,"sources":["C:/Users/asus/Documents/javascript_studying/opticMap/optic-map/src/OpticMap.js"],"names":["React","Component","Map","View","TileLayer","OSM","fromLonLat","transformExtent","transform","Circle","CircleStyle","Fill","Stroke","Style","Feature","Point","VectorLayer","VectorSource","switchesArray","OpticMap","componentDidMount","extentView","extentLayer","map","target","refs","mapContainer","layers","source","extent","zIndex","view","center","zoom","minZoom","setState","featureList","data","featureElement","geometry","coordinates","address","ipAddress","push","console","log","getKeys","vectorSource","features","switchesLayer","visible","style","image","radius","stroke","color","width","fill","coordinateString","featureInfoRef","createRef","addLayer","on","pointOfClick","clickedCoordinate","coordinate","toFixed","forEachFeatureAtPixel","pixel","feature","layer","current","getProperties","getView","e","key","getZoom","setStyle","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Circle as CircleStyle, Fill, Stroke, Style } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\n// import Group from \"ol/layer/Group\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport switchesArray from \"./res/switches.json\";\n\nclass OpticMap extends Component {\n  componentDidMount() {\n    // map settings\n    const extentView = transformExtent(\n      [\n        20.969893 /** min x */,\n        57.540673 /** min y */,\n        28.413477 /** max x */,\n        59.894102 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n    const extentLayer = transformExtent(\n      [\n        16.581885 /** min x */,\n        55.671002 /** min y */,\n        32.794556 /** max x */,\n        61.543774 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n\n    let map = new Map({\n      target: this.refs.mapContainer,\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n          extent: extentLayer,\n          zIndex: 0,\n        }),\n      ],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5,\n      }),\n    });\n\n    this.setState({\n      map: map,\n    });\n    // map settings\n\n    //map feature settings\n    var featureList = [];\n\n    switchesArray.map((data) => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n      });\n\n      featureList.push(featureElement);\n      console.log(data.address);\n      console.log(featureElement.getKeys());\n    });\n\n    let vectorSource = new VectorSource({\n      features: featureList,\n    });\n\n    let switchesLayer = new VectorLayer({\n      source: vectorSource,\n      visible: true,\n      style: new Style({\n        image: new CircleStyle({\n          radius: 3.8,\n          stroke: new Stroke({ color: \"black\", width: 1 }),\n          fill: new Fill({ color: \"tomato\" }),\n        }),\n      }),\n    });\n\n    //map feature settings\n\n    const coordinateString = \"coordinates\";\n    const featureInfoRef = React.createRef();\n\n    //map feature settings\n\n    //layers settings\n\n    map.addLayer(switchesLayer);\n\n    //layers settings\n\n    // get coordinates by click on map\n    map.on(\"click\", function (pointOfClick) {\n      const clickedCoordinate = transform(\n        pointOfClick.coordinate,\n        \"EPSG:3857\",\n        \"EPSG:4326\"\n      );\n\n      coordinateString =\n        clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n\n      map.forEachFeatureAtPixel(pointOfClick.pixel, function (feature, layer) {\n        featureInfoRef.current = feature.getProperties().address;\n        console.log(feature.getProperties().address);\n        console.log(feature.getProperties().ipAddress);\n      });\n    });\n\n    map.getView().on(\"propertychange\", function (e) {\n      switch (e.key) {\n        case \"resolution\":\n          console.log(map.getView().getZoom());\n          if (map.getView().getZoom() < 12.8) {\n            switchesLayer.setStyle(\n              new Style({\n                image: new CircleStyle({\n                  radius: 1,\n                  stroke: new Stroke({ color: \"black\", width: 1 }),\n                  fill: new Fill({ color: \"tomato\" }),\n                }),\n              })\n            );\n          } else if (map.getView().getZoom() < 14) {\n            switchesLayer.setStyle(\n              new Style({\n                image: new CircleStyle({\n                  radius: 2.5,\n                  stroke: new Stroke({ color: \"black\", width: 1 }),\n                  fill: new Fill({ color: \"tomato\" }),\n                }),\n              })\n            );\n          } else {\n            switchesLayer.setStyle(\n              new Style({\n                image: new CircleStyle({\n                  radius: 4,\n                  stroke: new Stroke({ color: \"black\", width: 1 }),\n                  fill: new Fill({ color: \"tomato\" }),\n                }),\n              })\n            );\n          }\n\n          break;\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"opticMapComponent\">\n        <div className=\"leftMapPanel\">\n          <div\n            className=\"coordinateString\"\n            id=\"coordinateString\"\n            text=\"coordinates\"\n          ></div>\n          <div className=\"featureLayers\">\n            <div className=\"layerCheckBox\">\n              <input type=\"checkbox\" value=\"switchesLayer\" className=\"switch\" />\n\n              <span className=\"slider\"></span>\n              <div>switches</div>\n            </div>\n\n            <div className=\"layerCheckBox\">\n              <input type=\"checkbox\" value=\"clutchesLayer\" className=\"switch\" />\n              <span className=\"slider\"></span>\n              <div>optic clutches</div>\n            </div>\n\n            <div className=\"layerCheckBox\">\n              <input type=\"checkbox\" value=\"cableLayer\" className=\"switch\" />\n              <span className=\"slider\"></span>\n              <div>optic Cable</div>\n            </div>\n          </div>\n          <div className=\"featureInfo\" id=\"featureInfo\" ref=\"featureInfo\"></div>\n        </div>\n        <div\n          className=\"mapContainer\"\n          id=\"mapContainer\"\n          ref=\"mapContainer\"\n        ></div>\n        <div className=\"rightMapPanel\"></div>\n      </div>\n    );\n  }\n}\n\nexport default OpticMap;\n"]},"metadata":{},"sourceType":"module"}