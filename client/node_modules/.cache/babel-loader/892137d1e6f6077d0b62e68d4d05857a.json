{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\javascript_studying\\\\opticMap\\\\optic-map\\\\src\\\\OpticMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, View, Overlay } from \"ol\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport KML from \"ol/format/KML\";\nimport { Style, Stroke } from \"ol/style\";\nimport VectorTileSource from \"ol/source/VectorTile\";\nimport VectorTileLayer from \"ol/layer/VectorTile\";\nimport TopoJSON from \"ol/format/TopoJSON\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat } from \"ol/proj\";\nimport \"ol/style\";\nimport \"./OpticMap.css\";\n\nclass OpticMap extends Component {\n  componentDidMount() {\n    // create feature layer and vector source\n    // var featuresLayer = new VectorLayer({\n    //   source: new VectorSource({\n    //     features: []\n    //   })\n    // });\n    const narvaWebMercator = fromLonLat([28.16804, 59.37911]);\n    const vectorLayer = new VectorLayer({\n      title: \"Buildings\",\n      source: new VectorSource({\n        url: \"../data/layers/ordnance-survey-buildings.kml\",\n        format: new KML({\n          extractStyles: false\n        })\n      }),\n      style: new Style({\n        stroke: new Stroke({\n          color: \"red\",\n          width: 2\n        })\n      })\n    }); // create map object with feature layer\n\n    let map = new Map({\n      target: this.refs.mapContainer,\n      layers: [//default OSM layer\n      // new TileLayer({\n      //   source: new OSM()\n      // }),\n      new VectorLayer({\n        title: \"Buildings\",\n        source: new VectorSource({\n          url: \"../data/layers/ordnance-survey-buildings.kml\",\n          format: new KML({\n            extractStyles: false\n          })\n        }),\n        style: new Style({\n          stroke: new Stroke({\n            color: \"red\",\n            width: 2\n          })\n        })\n      }) // ,\n      // featuresLayer\n      ],\n      view: new View({\n        center: narvaWebMercator,\n        //Boulder\n        zoom: 13\n      })\n    }); // save map and layer references to local state\n\n    this.setState({\n      map: map\n    });\n  } // pass new features from props into the OpenLayers layer object\n  // componentDidUpdate(prevProps, prevState) {\n  //   this.state.featuresLayer.setSource(\n  //     new VectorSource({\n  //       features: this.props.routes\n  //     })\n  //   );\n  // }\n\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"mapContainer\",\n      id: \"mapContainer\",\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default OpticMap;","map":{"version":3,"sources":["C:/Users/asus/Documents/javascript_studying/opticMap/optic-map/src/OpticMap.js"],"names":["React","Component","Map","View","Overlay","VectorLayer","VectorSource","KML","Style","Stroke","VectorTileSource","VectorTileLayer","TopoJSON","TileLayer","OSM","fromLonLat","OpticMap","componentDidMount","narvaWebMercator","vectorLayer","title","source","url","format","extractStyles","style","stroke","color","width","map","target","refs","mapContainer","layers","view","center","zoom","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,GAAT,EAAcC,IAAd,EAAoBC,OAApB,QAAmC,IAAnC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,UAA9B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,OAAOC,eAAP,MAA4B,qBAA5B;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,OAAO,UAAP;AACA,OAAO,gBAAP;;AAEA,MAAMC,QAAN,SAAuBf,SAAvB,CAAiC;AAC/BgB,EAAAA,iBAAiB,GAAG;AAClB;AACA;AACA;AACA;AACA;AACA;AAEA,UAAMC,gBAAgB,GAAGH,UAAU,CAAC,CAAC,QAAD,EAAW,QAAX,CAAD,CAAnC;AACA,UAAMI,WAAW,GAAG,IAAId,WAAJ,CAAgB;AAClCe,MAAAA,KAAK,EAAE,WAD2B;AAElCC,MAAAA,MAAM,EAAE,IAAIf,YAAJ,CAAiB;AACvBgB,QAAAA,GAAG,EAAE,8CADkB;AAEvBC,QAAAA,MAAM,EAAE,IAAIhB,GAAJ,CAAQ;AACdiB,UAAAA,aAAa,EAAE;AADD,SAAR;AAFe,OAAjB,CAF0B;AAQlCC,MAAAA,KAAK,EAAE,IAAIjB,KAAJ,CAAU;AACfkB,QAAAA,MAAM,EAAE,IAAIjB,MAAJ,CAAW;AAAEkB,UAAAA,KAAK,EAAE,KAAT;AAAgBC,UAAAA,KAAK,EAAE;AAAvB,SAAX;AADO,OAAV;AAR2B,KAAhB,CAApB,CATkB,CAqBlB;;AACA,QAAIC,GAAG,GAAG,IAAI3B,GAAJ,CAAQ;AAChB4B,MAAAA,MAAM,EAAE,KAAKC,IAAL,CAAUC,YADF;AAEhBC,MAAAA,MAAM,EAAE,CACN;AACA;AACA;AACA;AACA,UAAI5B,WAAJ,CAAgB;AACde,QAAAA,KAAK,EAAE,WADO;AAEdC,QAAAA,MAAM,EAAE,IAAIf,YAAJ,CAAiB;AACvBgB,UAAAA,GAAG,EAAE,8CADkB;AAEvBC,UAAAA,MAAM,EAAE,IAAIhB,GAAJ,CAAQ;AACdiB,YAAAA,aAAa,EAAE;AADD,WAAR;AAFe,SAAjB,CAFM;AAQdC,QAAAA,KAAK,EAAE,IAAIjB,KAAJ,CAAU;AACfkB,UAAAA,MAAM,EAAE,IAAIjB,MAAJ,CAAW;AAAEkB,YAAAA,KAAK,EAAE,KAAT;AAAgBC,YAAAA,KAAK,EAAE;AAAvB,WAAX;AADO,SAAV;AARO,OAAhB,CALM,CAiBN;AACA;AAlBM,OAFQ;AAsBhBM,MAAAA,IAAI,EAAE,IAAI/B,IAAJ,CAAS;AACbgC,QAAAA,MAAM,EAAEjB,gBADK;AACa;AAC1BkB,QAAAA,IAAI,EAAE;AAFO,OAAT;AAtBU,KAAR,CAAV,CAtBkB,CAkDlB;;AACA,SAAKC,QAAL,CAAc;AACZR,MAAAA,GAAG,EAAEA;AADO,KAAd;AAGD,GAvD8B,CAyD/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEAS,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,EAAE,EAAC,cAAjC;AAAgD,MAAA,GAAG,EAAC,cAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD;;AAtE8B;;AAyEjC,eAAetB,QAAf","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Map, View, Overlay } from \"ol\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport KML from \"ol/format/KML\";\nimport { Style, Stroke } from \"ol/style\";\nimport VectorTileSource from \"ol/source/VectorTile\";\nimport VectorTileLayer from \"ol/layer/VectorTile\";\nimport TopoJSON from \"ol/format/TopoJSON\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat } from \"ol/proj\";\nimport \"ol/style\";\nimport \"./OpticMap.css\";\n\nclass OpticMap extends Component {\n  componentDidMount() {\n    // create feature layer and vector source\n    // var featuresLayer = new VectorLayer({\n    //   source: new VectorSource({\n    //     features: []\n    //   })\n    // });\n\n    const narvaWebMercator = fromLonLat([28.16804, 59.37911]);\n    const vectorLayer = new VectorLayer({\n      title: \"Buildings\",\n      source: new VectorSource({\n        url: \"../data/layers/ordnance-survey-buildings.kml\",\n        format: new KML({\n          extractStyles: false\n        })\n      }),\n      style: new Style({\n        stroke: new Stroke({ color: \"red\", width: 2 })\n      })\n    });\n    // create map object with feature layer\n    let map = new Map({\n      target: this.refs.mapContainer,\n      layers: [\n        //default OSM layer\n        // new TileLayer({\n        //   source: new OSM()\n        // }),\n        new VectorLayer({\n          title: \"Buildings\",\n          source: new VectorSource({\n            url: \"../data/layers/ordnance-survey-buildings.kml\",\n            format: new KML({\n              extractStyles: false\n            })\n          }),\n          style: new Style({\n            stroke: new Stroke({ color: \"red\", width: 2 })\n          })\n        })\n        // ,\n        // featuresLayer\n      ],\n      view: new View({\n        center: narvaWebMercator, //Boulder\n        zoom: 13\n      })\n    });\n\n    // save map and layer references to local state\n    this.setState({\n      map: map\n    });\n  }\n\n  // pass new features from props into the OpenLayers layer object\n  // componentDidUpdate(prevProps, prevState) {\n  //   this.state.featuresLayer.setSource(\n  //     new VectorSource({\n  //       features: this.props.routes\n  //     })\n  //   );\n  // }\n\n  render() {\n    return (\n      <div className=\"mapContainer\" id=\"mapContainer\" ref=\"mapContainer\"></div>\n    );\n  }\n}\n\nexport default OpticMap;\n"]},"metadata":{},"sourceType":"module"}