{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\javascript_studying\\\\opticMap\\\\optic-map\\\\src\\\\OpticMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Circle as CircleStyle, Fill, Stroke, Style } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\"; // import Group from \"ol/layer/Group\";\n\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport switchesArray from \"./res/switches.json\";\nimport opticsArray from \"./res/optics.json\";\nimport Layer from \"ol/layer/Layer\";\nimport LineString from \"ol/geom/LineString\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      displayedFeatures: null,\n      featureInfo: {\n        address: null,\n        ipAddress: null,\n        info: null\n      },\n      switchesLayerVisible: true\n    };\n    this.handleZoom = this.handleZoom.bind(this);\n    this.setSwitchesToDisplayedFeatures = this.setSwitchesToDisplayedFeatures.bind(this); // this.renderDisplayedFeatures = this.returnDisplayedFeatures.bind(this);\n  }\n\n  setSwitchesToDisplayedFeatures() {\n    this.setState({\n      displayedFeatures: switchesArray\n    });\n  }\n\n  handleRightPanelItemClick(item) {\n    console.log(item.coordinates);\n    this.state.map.getView().animate({\n      center: fromLonLat(item.coordinates)\n    }, {\n      zoom: 19\n    });\n    this.setState({\n      featureInfo: {\n        address: item.address,\n        ipAddress: item.ipAddress,\n        info: item.info\n      }\n    });\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12.8) {\n      this.switchesLayer.setStyle(new Style({\n        image: new CircleStyle({\n          radius: 1,\n          stroke: new Stroke({\n            color: \"black\",\n            width: 1\n          }),\n          fill: new Fill({\n            color: \"tomato\"\n          })\n        })\n      }));\n    } else if (zoomSize < 14) {\n      this.switchesLayer.setStyle(new Style({\n        image: new CircleStyle({\n          radius: 2.5,\n          stroke: new Stroke({\n            color: \"black\",\n            width: 1\n          }),\n          fill: new Fill({\n            color: \"tomato\"\n          })\n        })\n      }));\n    } else {\n      this.switchesLayer.setStyle(new Style({\n        image: new CircleStyle({\n          radius: 4,\n          stroke: new Stroke({\n            color: \"black\",\n            width: 1\n          }),\n          fill: new Fill({\n            color: \"tomato\"\n          })\n        })\n      }));\n    }\n  }\n\n  componentDidMount() {\n    // map settings\n    const extentView = transformExtent([20.969893\n    /** min x */\n    , 57.540673\n    /** min y */\n    , 28.413477\n    /** max x */\n    , 59.894102\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n    const extentLayer = transformExtent([16.581885\n    /** min x */\n    , 55.671002\n    /** min y */\n    , 32.794556\n    /** max x */\n    , 61.543774\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\"); //custom map controls\n\n    const switchesVisible = function (Control) {\n      function switchesVisible() {\n        const button = document.createElement(\"button\");\n        button.innerHTML = \"switches\";\n        var element = document.createElement(\"div\");\n        element.className = \"switches-visible ol-unselectable ol-control\";\n        element.appendChild(button);\n        Control.call(this, {\n          element: element\n        });\n        button.addEventListener(\"click\", this.handleSwitchesVisible.bind(this), false);\n      }\n\n      if (Control) switchesVisible.__proto__ = Control;\n      switchesVisible.prototype = Object.create(Control && Control.prototype);\n      switchesVisible.prototype.constructor = switchesVisible;\n\n      switchesVisible.prototype.handleSwitchesVisible = function handleSwitchesVisible() {\n        map.getLayers().getArray().map(layer => {\n          if (layer.getClassName() === \"switchesLayer\") {\n            layer.setVisible(!layer.getVisible());\n          }\n        });\n        console.log(map.getLayers());\n      };\n\n      return switchesVisible;\n    }(Control); //custom map controls\n\n\n    let map = new Map({\n      target: this.refs.mapContainer,\n      layers: [new TileLayer({\n        source: new OSM(),\n        extent: extentLayer,\n        zIndex: 0\n      })],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5\n      }),\n      controls: defaults().extend([new switchesVisible()])\n    }); // map settings\n    //map feature settings\n\n    var switchFeatureList = [];\n    switchesArray.map(data => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info\n      });\n      switchFeatureList.push(featureElement);\n      console.log(featureElement.getKeys());\n    });\n    var opticsFeatureList = [];\n    opticsArray.map(data => {\n      let coordinatesArray = [];\n      data.coordinates.map(coordinate => {\n        coordinatesArray.push(fromLonLat(coordinate));\n      });\n      let featureElement = new Feature({\n        geometry: new LineString(fromLonLat(data.coordinates)),\n        locationInfo: data.locationInfo,\n        info: data.info\n      });\n      opticsFeatureList.push(featureElement);\n      console.log(featureElement.getKeys());\n    });\n    let opticsLayerSource = new VectorSource({\n      features: opticsFeatureList\n    });\n    this.opticsLayer = new VectorLayer({\n      className: \"opticsLayer\",\n      source: opticsLayerSource,\n      visible: true,\n      style: new Style({\n        stroke: new Stroke({\n          width: 2,\n          color: \"red\"\n        })\n      })\n    });\n    let switchesLayerSource = new VectorSource({\n      features: switchFeatureList\n    });\n    this.switchesLayer = new VectorLayer({\n      className: \"switchesLayer\",\n      source: switchesLayerSource,\n      visible: true,\n      style: new Style({\n        image: new CircleStyle({\n          radius: 3.8,\n          stroke: new Stroke({\n            color: \"black\",\n            width: 1\n          }),\n          fill: new Fill({\n            color: \"tomato\"\n          })\n        })\n      })\n    }); //map feature settings\n    //layers settings\n\n    map.addLayer(this.switchesLayer);\n    map.addLayer(this.opticsLayer); //layers settings\n    // get coordinates by click on map\n\n    map.on(\"click\", function (pointOfClick) {\n      const clickedCoordinate = transform(pointOfClick.coordinate, \"EPSG:3857\", \"EPSG:4326\");\n      let coordinateString = clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n      this.setState({\n        coordinates: coordinateString\n      }); // let featureAddress = \"\";\n      // let featureIpAddress = \"\";\n      // let featureInfo = \"\";\n\n      map.forEachFeatureAtPixel(pointOfClick.pixel, function (feature, layer) {\n        this.setState({\n          featureInfo: {\n            address: feature.getProperties().address,\n            ipAddress: feature.getProperties().ipAddress,\n            info: feature.getProperties().info\n          }\n        });\n      }.bind(this));\n    }.bind(this)); // change features size on zoom change\n\n    map.getView().on(\"propertychange\", e => {\n      switch (e.key) {\n        case \"resolution\":\n          this.handleZoom(map.getView().getZoom());\n          console.log(map.getView().getZoom());\n          break;\n      }\n    });\n    this.setState({\n      map: map\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"opticMapComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"coordinateString\",\n      id: \"coordinateString\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304\n      },\n      __self: this\n    }, this.state.coordinates)), React.createElement(\"div\", {\n      className: \"objectButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"switchesButton\",\n      onClick: this.setSwitchesToDisplayedFeatures,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"switches\")), React.createElement(\"div\", {\n      className: \"objectButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"opticClutchesButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, \"optic clutches\")), React.createElement(\"div\", {\n      className: \"objectButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"opticCableButton\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322\n      },\n      __self: this\n    }, \"optic Cable\"))), React.createElement(\"div\", {\n      className: \"featureInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326\n      },\n      __self: this\n    }, this.state.featureInfo.address !== null ? React.createElement(\"div\", {\n      className: \"featureInfoElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328\n      },\n      __self: this\n    }, this.state.featureInfo.address) : React.createElement(\"div\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }), this.state.featureInfo.ipAddress !== null ? React.createElement(\"div\", {\n      className: \"featureInfoElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336\n      },\n      __self: this\n    }, this.state.featureInfo.ipAddress) : React.createElement(\"div\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }), this.state.featureInfo.info !== null ? React.createElement(\"div\", {\n      className: \"featureInfoElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, this.state.featureInfo.info) : React.createElement(\"div\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"mapContainer\",\n      id: \"mapContainer\",\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 352\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rightMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"displayedFeatures\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, this.state.displayedFeatures !== null ? this.state.displayedFeatures.map(feature => {\n      return React.createElement(\"li\", {\n        className: \"displayedFeature\",\n        key: feature.coordinates,\n        onClick: this.handleRightPanelItemClick.bind(this, feature),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 362\n        },\n        __self: this\n      }, feature.address);\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default OpticMap;","map":{"version":3,"sources":["C:/Users/asus/Documents/javascript_studying/opticMap/optic-map/src/OpticMap.js"],"names":["React","Component","Map","View","TileLayer","OSM","fromLonLat","transformExtent","transform","Circle","CircleStyle","Fill","Stroke","Style","Feature","Point","Control","defaults","VectorLayer","VectorSource","switchesArray","opticsArray","Layer","LineString","OpticMap","constructor","props","state","map","coordinates","displayedFeatures","featureInfo","address","ipAddress","info","switchesLayerVisible","handleZoom","bind","setSwitchesToDisplayedFeatures","setState","handleRightPanelItemClick","item","console","log","getView","animate","center","zoom","zoomSize","switchesLayer","setStyle","image","radius","stroke","color","width","fill","componentDidMount","extentView","extentLayer","switchesVisible","button","document","createElement","innerHTML","element","className","appendChild","call","addEventListener","handleSwitchesVisible","__proto__","prototype","Object","create","getLayers","getArray","layer","getClassName","setVisible","getVisible","target","refs","mapContainer","layers","source","extent","zIndex","view","minZoom","controls","extend","switchFeatureList","data","featureElement","geometry","push","getKeys","opticsFeatureList","coordinatesArray","coordinate","locationInfo","opticsLayerSource","features","opticsLayer","visible","style","switchesLayerSource","addLayer","on","pointOfClick","clickedCoordinate","coordinateString","toFixed","forEachFeatureAtPixel","pixel","feature","getProperties","e","key","getZoom","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Circle as CircleStyle, Fill, Stroke, Style } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\";\n// import Group from \"ol/layer/Group\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport switchesArray from \"./res/switches.json\";\nimport opticsArray from \"./res/optics.json\";\nimport Layer from \"ol/layer/Layer\";\nimport LineString from \"ol/geom/LineString\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      displayedFeatures: null,\n      featureInfo: { address: null, ipAddress: null, info: null },\n      switchesLayerVisible: true,\n    };\n\n    this.handleZoom = this.handleZoom.bind(this);\n    this.setSwitchesToDisplayedFeatures = this.setSwitchesToDisplayedFeatures.bind(\n      this\n    );\n    // this.renderDisplayedFeatures = this.returnDisplayedFeatures.bind(this);\n  }\n\n  setSwitchesToDisplayedFeatures() {\n    this.setState({\n      displayedFeatures: switchesArray,\n    });\n  }\n\n  handleRightPanelItemClick(item) {\n    console.log(item.coordinates);\n    this.state.map\n      .getView()\n      .animate({ center: fromLonLat(item.coordinates) }, { zoom: 19 });\n    this.setState({\n      featureInfo: {\n        address: item.address,\n        ipAddress: item.ipAddress,\n        info: item.info,\n      },\n    });\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12.8) {\n      this.switchesLayer.setStyle(\n        new Style({\n          image: new CircleStyle({\n            radius: 1,\n            stroke: new Stroke({ color: \"black\", width: 1 }),\n            fill: new Fill({ color: \"tomato\" }),\n          }),\n        })\n      );\n    } else if (zoomSize < 14) {\n      this.switchesLayer.setStyle(\n        new Style({\n          image: new CircleStyle({\n            radius: 2.5,\n            stroke: new Stroke({ color: \"black\", width: 1 }),\n            fill: new Fill({ color: \"tomato\" }),\n          }),\n        })\n      );\n    } else {\n      this.switchesLayer.setStyle(\n        new Style({\n          image: new CircleStyle({\n            radius: 4,\n            stroke: new Stroke({ color: \"black\", width: 1 }),\n            fill: new Fill({ color: \"tomato\" }),\n          }),\n        })\n      );\n    }\n  }\n  componentDidMount() {\n    // map settings\n    const extentView = transformExtent(\n      [\n        20.969893 /** min x */,\n        57.540673 /** min y */,\n        28.413477 /** max x */,\n        59.894102 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n    const extentLayer = transformExtent(\n      [\n        16.581885 /** min x */,\n        55.671002 /** min y */,\n        32.794556 /** max x */,\n        61.543774 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n\n    //custom map controls\n\n    const switchesVisible = (function (Control) {\n      function switchesVisible() {\n        const button = document.createElement(\"button\");\n        button.innerHTML = \"switches\";\n\n        var element = document.createElement(\"div\");\n        element.className = \"switches-visible ol-unselectable ol-control\";\n        element.appendChild(button);\n\n        Control.call(this, {\n          element: element,\n        });\n\n        button.addEventListener(\n          \"click\",\n          this.handleSwitchesVisible.bind(this),\n          false\n        );\n      }\n\n      if (Control) switchesVisible.__proto__ = Control;\n      switchesVisible.prototype = Object.create(Control && Control.prototype);\n      switchesVisible.prototype.constructor = switchesVisible;\n\n      switchesVisible.prototype.handleSwitchesVisible = function handleSwitchesVisible() {\n        map\n          .getLayers()\n          .getArray()\n          .map((layer) => {\n            if (layer.getClassName() === \"switchesLayer\") {\n              layer.setVisible(!layer.getVisible());\n            }\n          });\n        console.log(map.getLayers());\n      };\n\n      return switchesVisible;\n    })(Control);\n\n    //custom map controls\n\n    let map = new Map({\n      target: this.refs.mapContainer,\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n          extent: extentLayer,\n          zIndex: 0,\n        }),\n      ],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5,\n      }),\n      controls: defaults().extend([new switchesVisible()]),\n    });\n\n    // map settings\n\n    //map feature settings\n\n    var switchFeatureList = [];\n\n    switchesArray.map((data) => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n      });\n      switchFeatureList.push(featureElement);\n\n      console.log(featureElement.getKeys());\n    });\n\n    var opticsFeatureList = [];\n\n    opticsArray.map((data) => {\n      let coordinatesArray = [];\n      data.coordinates.map((coordinate) => {\n        coordinatesArray.push(fromLonLat(coordinate));\n      });\n      let featureElement = new Feature({\n        geometry: new LineString(fromLonLat(data.coordinates)),\n        locationInfo: data.locationInfo,\n        info: data.info,\n      });\n      opticsFeatureList.push(featureElement);\n\n      console.log(featureElement.getKeys());\n    });\n\n    let opticsLayerSource = new VectorSource({\n      features: opticsFeatureList,\n    });\n\n    this.opticsLayer = new VectorLayer({\n      className: \"opticsLayer\",\n      source: opticsLayerSource,\n      visible: true,\n      style: new Style({\n        stroke: new Stroke({\n          width: 2,\n          color: \"red\",\n        }),\n      }),\n    });\n\n    let switchesLayerSource = new VectorSource({\n      features: switchFeatureList,\n    });\n\n    this.switchesLayer = new VectorLayer({\n      className: \"switchesLayer\",\n      source: switchesLayerSource,\n      visible: true,\n      style: new Style({\n        image: new CircleStyle({\n          radius: 3.8,\n          stroke: new Stroke({ color: \"black\", width: 1 }),\n          fill: new Fill({ color: \"tomato\" }),\n        }),\n      }),\n    });\n\n    //map feature settings\n\n    //layers settings\n    map.addLayer(this.switchesLayer);\n    map.addLayer(this.opticsLayer);\n    //layers settings\n    // get coordinates by click on map\n    map.on(\n      \"click\",\n      function (pointOfClick) {\n        const clickedCoordinate = transform(\n          pointOfClick.coordinate,\n          \"EPSG:3857\",\n          \"EPSG:4326\"\n        );\n        let coordinateString =\n          clickedCoordinate[0].toFixed(6) +\n          \",\" +\n          clickedCoordinate[1].toFixed(6);\n        this.setState({ coordinates: coordinateString });\n\n        // let featureAddress = \"\";\n        // let featureIpAddress = \"\";\n        // let featureInfo = \"\";\n\n        map.forEachFeatureAtPixel(\n          pointOfClick.pixel,\n          function (feature, layer) {\n            this.setState({\n              featureInfo: {\n                address: feature.getProperties().address,\n                ipAddress: feature.getProperties().ipAddress,\n                info: feature.getProperties().info,\n              },\n            });\n          }.bind(this)\n        );\n      }.bind(this)\n    );\n    // change features size on zoom change\n    map.getView().on(\"propertychange\", (e) => {\n      switch (e.key) {\n        case \"resolution\":\n          this.handleZoom(map.getView().getZoom());\n          console.log(map.getView().getZoom());\n\n          break;\n      }\n    });\n\n    this.setState({\n      map: map,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"opticMapComponent\">\n        <div className=\"leftMapPanel\">\n          <div className=\"coordinateString\" id=\"coordinateString\">\n            <p>{this.state.coordinates}</p>\n          </div>\n\n          <div className=\"objectButtons\">\n            <div className=\"objectButton\">\n              <div\n                className=\"switchesButton\"\n                onClick={this.setSwitchesToDisplayedFeatures}\n              >\n                switches\n              </div>\n            </div>\n\n            <div className=\"objectButton\">\n              <div className=\"opticClutchesButton\">optic clutches</div>\n            </div>\n\n            <div className=\"objectButton\">\n              <div className=\"opticCableButton\">optic Cable</div>\n            </div>\n          </div>\n\n          <div className=\"featureInfo\">\n            {this.state.featureInfo.address !== null ? (\n              <div className=\"featureInfoElement\">\n                {this.state.featureInfo.address}\n              </div>\n            ) : (\n              <div className=\"hidden\"></div>\n            )}\n\n            {this.state.featureInfo.ipAddress !== null ? (\n              <div className=\"featureInfoElement\">\n                {this.state.featureInfo.ipAddress}\n              </div>\n            ) : (\n              <div className=\"hidden\"></div>\n            )}\n\n            {this.state.featureInfo.info !== null ? (\n              <div className=\"featureInfoElement\">\n                {this.state.featureInfo.info}\n              </div>\n            ) : (\n              <div className=\"hidden\"></div>\n            )}\n          </div>\n        </div>\n        <div\n          className=\"mapContainer\"\n          id=\"mapContainer\"\n          ref=\"mapContainer\"\n        ></div>\n        <div className=\"rightMapPanel\">\n          <div className=\"displayedFeatures\">\n            {this.state.displayedFeatures !== null ? (\n              this.state.displayedFeatures.map((feature) => {\n                return (\n                  <li\n                    className=\"displayedFeature\"\n                    key={feature.coordinates}\n                    onClick={this.handleRightPanelItemClick.bind(this, feature)}\n                  >\n                    {feature.address}\n                  </li>\n                );\n              })\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OpticMap;\n"]},"metadata":{},"sourceType":"module"}