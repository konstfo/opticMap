{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\javascript_studying\\\\opticMap\\\\optic-map\\\\src\\\\OpticMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Stroke, Style, Icon } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport LineString from \"ol/geom/LineString\";\nimport switchesArray from \"./res/switches.json\";\nimport opticsArray from \"./res/optics.json\";\nimport clientStationsArray from \"./res/clientStations.json\";\nimport clientStationIcon from \"./res/client_station_icon.png\";\nimport switchIcon from \"./res/switch_icon.png\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      currentForm: null,\n      displayedFeatures: null,\n      featureInfo: {\n        featureCoordinates: null,\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null\n      }\n    };\n    this.funForTest = this.funForTest.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.setSwitchesToRightControlPanel = this.setSwitchesToRightControlPanel.bind(this);\n    this.setOpticsToRightControlPanel = this.setOpticsToRightControlPanel.bind(this);\n    this.setClientStationsToRightControlPanel = this.setClientStationsToRightControlPanel.bind(this);\n    this.initMapComponent = this.initMapComponent.bind(this);\n    this.changeFeaturesSize = this.changeFeaturesSize.bind(this);\n    this.getFeatureInfo = this.getFeatureInfo.bind(this);\n  }\n\n  initMapComponent() {\n    const extentView = transformExtent([20.969893\n    /** min x */\n    , 57.540673\n    /** min y */\n    , 28.413477\n    /** max x */\n    , 59.894102\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n    const extentLayer = transformExtent([16.581885\n    /** min x */\n    , 55.671002\n    /** min y */\n    , 32.794556\n    /** max x */\n    , 61.543774\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n\n    const layerVisibilityControl = function (Control) {\n      function layerVisibilityControl(layerName, className, buttontext) {\n        const button = document.createElement(\"button\");\n        button.innerHTML = buttontext;\n        var element = document.createElement(\"div\");\n        element.className = className + \" \" + \"ol-unselectable ol-control\";\n        element.appendChild(button);\n        Control.call(this, {\n          element: element\n        });\n        button.addEventListener(\"click\", this.handlelayerVisibilityControl.bind(this, layerName), false);\n      }\n\n      if (Control) layerVisibilityControl.__proto__ = Control;\n      layerVisibilityControl.prototype = Object.create(Control && Control.prototype);\n      layerVisibilityControl.prototype.constructor = layerVisibilityControl;\n\n      layerVisibilityControl.prototype.handlelayerVisibilityControl = function handlelayerVisibilityControl(layerName) {\n        map.getLayers().getArray().map(layer => {\n          if (layer.getClassName() === layerName) {\n            layer.setVisible(!layer.getVisible());\n          }\n        });\n      };\n\n      return layerVisibilityControl;\n    }(Control);\n\n    const map = new Map({\n      target: this.refs.mapContainer,\n      layers: [new TileLayer({\n        source: new OSM(),\n        extent: extentLayer,\n        zIndex: 0\n      })],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5\n      }),\n      controls: defaults({\n        attributionOptions: {\n          target: this.refs.mapContainer\n        }\n      }).extend([new layerVisibilityControl(\"switchesLayer\", \"switches-visible\", \"switches\"), new layerVisibilityControl(\"opticsLayer\", \"optics-visible\", \"optics\"), new layerVisibilityControl(\"clientStationsLayer\", \"clientStations-visible\", \"clientStations\")])\n    });\n    let switchFeatureArray = [];\n    let opticsFeatureArray = [];\n    let clientStationsFeatureArray = [];\n    switchesArray.map(data => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n        featureCoordinates: data.coordinates\n      });\n      switchFeatureArray.push(featureElement);\n    });\n    opticsArray.map(data => {\n      let coordinatesArray = [];\n      data.coordinates.map(coordinate => {\n        coordinatesArray.push(fromLonLat(coordinate));\n      });\n      let featureElement = new Feature({\n        geometry: new LineString(coordinatesArray),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo\n      });\n      opticsFeatureArray.push(featureElement);\n    });\n    clientStationsArray.map(data => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo\n      });\n      clientStationsFeatureArray.push(featureElement);\n    });\n    let opticsLayerSource = new VectorSource({\n      features: opticsFeatureArray\n    });\n    this.opticsLayer = new VectorLayer({\n      className: \"opticsLayer\",\n      source: opticsLayerSource,\n      visible: true,\n      style: new Style({\n        stroke: new Stroke({\n          width: 2,\n          color: \"skyblue\"\n        })\n      })\n    });\n    let clientStationsLayerSource = new VectorSource({\n      features: clientStationsFeatureArray\n    });\n    this.clientStationsLayer = new VectorLayer({\n      className: \"clientStationsLayer\",\n      source: clientStationsLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: clientStationIcon,\n          scale: 0.09\n        })\n      })\n    });\n    console.log(this.clientStationsLayer);\n    let switchesLayerSource = new VectorSource({\n      features: switchFeatureArray\n    });\n    this.switchesLayer = new VectorLayer({\n      className: \"switchesLayer\",\n      source: switchesLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: switchIcon,\n          scale: 0.09\n        })\n      })\n    }); //layers with network equipment\n    //map feature settings\n    //layers settings\n\n    map.addLayer(this.clientStationsLayer);\n    map.addLayer(this.switchesLayer);\n    map.addLayer(this.opticsLayer); //layers settings\n    //click on map\n\n    map.on(\"click\", function (pointOfClick) {\n      const clickedCoordinate = transform(pointOfClick.coordinate, \"EPSG:3857\", \"EPSG:4326\");\n      let coordinateString = clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n      this.setState({\n        coordinates: coordinateString\n      });\n      map.forEachFeatureAtPixel(pointOfClick.pixel, function (feature, layer) {\n        this.setState({\n          featureInfo: {\n            featureCoordinates: feature.getProperties().featureCoordinates,\n            address: feature.getProperties().address,\n            ipAddress: feature.getProperties().ipAddress,\n            info: feature.getProperties().info,\n            locationInfo: feature.getProperties().locationInfo\n          }\n        });\n        this.state.map.getView().animate({\n          center: fromLonLat(clickedCoordinate)\n        }, {\n          zoom: 19\n        });\n      }.bind(this));\n    }.bind(this)); // change features size on zoom change\n\n    map.getView().on(\"propertychange\", e => {\n      switch (e.key) {\n        case \"resolution\":\n          this.handleZoom(map.getView().getZoom());\n          break;\n      }\n    });\n    this.setState({\n      map: map\n    });\n  }\n\n  componentDidMount() {\n    this.initMapComponent();\n  }\n\n  setSwitchesToRightControlPanel() {\n    this.setState({\n      displayedFeatures: switchesArray\n    });\n  }\n\n  setOpticsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: opticsArray\n    });\n  }\n\n  setClientStationsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: clientStationsArray\n    });\n  }\n\n  handleRightPanelItemClick(item) {\n    if (item.ipAddress === null) {\n      this.state.map.getView().animate({\n        center: fromLonLat(item.coordinates[0])\n      }, {\n        zoom: 17.5\n      });\n    } else {\n      this.state.map.getView().animate({\n        center: fromLonLat(item.coordinates)\n      }, {\n        zoom: 19\n      });\n    }\n\n    this.setState({\n      featureInfo: {\n        address: item.address,\n        ipAddress: item.ipAddress,\n        info: item.info,\n        locationInfo: item.locationInfo\n      }\n    });\n  }\n\n  changeFeaturesSize(pointRadius, strokeWidth, iconsScale) {\n    this.switchesLayer.setStyle(new Style({\n      image: new Icon({\n        opacity: 1,\n        src: switchIcon,\n        scale: iconsScale\n      })\n    }));\n    this.opticsLayer.setStyle(new Style({\n      stroke: new Stroke({\n        width: strokeWidth,\n        color: \"skyblue\"\n      })\n    }));\n    this.clientStationsLayer.setStyle(new Style({\n      image: new Icon({\n        opacity: 1,\n        src: clientStationIcon,\n        scale: iconsScale\n      })\n    }));\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12) {\n      this.changeFeaturesSize(1, 0.5, 0.01);\n    } else if (zoomSize < 13) {\n      this.changeFeaturesSize(2.5, 2, 0.05);\n    } else if (zoomSize < 14) {\n      this.changeFeaturesSize(2.5, 2, 0.08);\n    } else if (zoomSize < 16) {\n      this.changeFeaturesSize(2.5, 2, 0.1);\n    } else if (zoomSize < 18) {\n      this.changeFeaturesSize(5, 4, 0.12);\n    } else {\n      this.changeFeaturesSize(9, 7, 0.25);\n    }\n  }\n\n  getFeatureInfo(featureInfo) {\n    return featureInfo !== null ? React.createElement(\"div\", {\n      className: \"featureInfoElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402\n      },\n      __self: this\n    }, featureInfo) : React.createElement(\"div\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404\n      },\n      __self: this\n    });\n  }\n\n  funForTest(ob) {\n    console.log(ob.featureInfo);\n  }\n\n  getEditingOrAddingForm(coordinatesToEdit, addressToEdit, ipAddressToEdit, locationInfoToEdit, infoToEdit) {\n    if (this.state.currentForm === \"add\") {\n      return React.createElement(\"div\", {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 420\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"addForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 421\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"coordinateField\",\n        id: \"coordinateField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 422\n        },\n        __self: this\n      }, this.state.coordinates), React.createElement(\"input\", {\n        className: \"addressField\",\n        id: \"addressField\",\n        placeholder: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"ipAddressField\",\n        id: \"ipAddressField\",\n        placeholder: \"ip address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 430\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"locationInfoField\",\n        id: \"locationInfoField\",\n        placeholder: \"location info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 435\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        className: \"infoField\",\n        id: \"infoField\",\n        placeholder: \"additional info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      })));\n    } else if (this.state.currentForm === \"edit\") {\n      return React.createElement(\"div\", {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"editForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"coordinateField\",\n        id: \"coordinateField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, coordinatesToEdit), React.createElement(\"input\", {\n        className: \"addressField\",\n        id: \"addressField\",\n        placeholder: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 455\n        },\n        __self: this\n      }, addressToEdit), React.createElement(\"input\", {\n        className: \"ipAddressField\",\n        id: \"ipAddressField\",\n        placeholder: \"ip address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, ipAddressToEdit), React.createElement(\"input\", {\n        className: \"locationInfoField\",\n        id: \"locationInfoField\",\n        placeholder: \"location info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 469\n        },\n        __self: this\n      }, locationInfoToEdit), React.createElement(\"input\", {\n        className: \"infoField\",\n        id: \"infoField\",\n        placeholder: \"additional info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 476\n        },\n        __self: this\n      }, infoToEdit)));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    this.funForTest(this.state);\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"opticMapComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 495\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 496\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"coordinateString\",\n      id: \"coordinateString\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 497\n      },\n      __self: this\n    }, this.state.coordinates), React.createElement(\"div\", {\n      className: \"objectButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 501\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"featureInfoAddControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 502\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      onClick: this.setSwitchesToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 503\n      },\n      __self: this\n    }, \"switches\")), React.createElement(\"div\", {\n      className: \"featureInfoAddControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 511\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      onClick: this.setOpticsToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 512\n      },\n      __self: this\n    }, \"optic cable\")), React.createElement(\"div\", {\n      className: \"featureInfoAddControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 520\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      onClick: this.setClientStationsToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 521\n      },\n      __self: this\n    }, \"client stations\"))), React.createElement(\"div\", {\n      className: \"featureInfo\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531\n      },\n      __self: this\n    }, this.getFeatureInfo(this.state.featureInfo.address), this.getFeatureInfo(this.state.featureInfo.ipAddress), this.getFeatureInfo(this.state.featureInfo.info), this.getFeatureInfo(this.state.featureInfo.locationInfo)), React.createElement(\"div\", {\n      className: \"formContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mapContainer\",\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rightMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"displayedFeatures\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, this.state.displayedFeatures !== null ? this.state.displayedFeatures.map(feature => {\n      return React.createElement(\"li\", {\n        className: \"displayedFeature\",\n        key: feature.coordinates,\n        onClick: this.handleRightPanelItemClick.bind(this, feature),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545\n        },\n        __self: this\n      }, feature.address);\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default OpticMap;","map":{"version":3,"sources":["C:/Users/asus/Documents/javascript_studying/opticMap/optic-map/src/OpticMap.js"],"names":["React","Component","Map","View","TileLayer","OSM","fromLonLat","transformExtent","transform","Stroke","Style","Icon","Feature","Point","Control","defaults","VectorLayer","VectorSource","LineString","switchesArray","opticsArray","clientStationsArray","clientStationIcon","switchIcon","OpticMap","constructor","props","state","map","coordinates","currentForm","displayedFeatures","featureInfo","featureCoordinates","address","ipAddress","info","locationInfo","funForTest","bind","handleZoom","setSwitchesToRightControlPanel","setOpticsToRightControlPanel","setClientStationsToRightControlPanel","initMapComponent","changeFeaturesSize","getFeatureInfo","extentView","extentLayer","layerVisibilityControl","layerName","className","buttontext","button","document","createElement","innerHTML","element","appendChild","call","addEventListener","handlelayerVisibilityControl","__proto__","prototype","Object","create","getLayers","getArray","layer","getClassName","setVisible","getVisible","target","refs","mapContainer","layers","source","extent","zIndex","view","center","zoom","minZoom","controls","attributionOptions","extend","switchFeatureArray","opticsFeatureArray","clientStationsFeatureArray","data","featureElement","geometry","push","coordinatesArray","coordinate","opticsLayerSource","features","opticsLayer","visible","style","stroke","width","color","clientStationsLayerSource","clientStationsLayer","image","opacity","src","scale","console","log","switchesLayerSource","switchesLayer","addLayer","on","pointOfClick","clickedCoordinate","coordinateString","toFixed","setState","forEachFeatureAtPixel","pixel","feature","getProperties","getView","animate","e","key","getZoom","componentDidMount","handleRightPanelItemClick","item","pointRadius","strokeWidth","iconsScale","setStyle","zoomSize","ob","getEditingOrAddingForm","coordinatesToEdit","addressToEdit","ipAddressToEdit","locationInfoToEdit","infoToEdit","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,EAAcC,IAAd,QAA0B,IAA1B;AACA,OAAOC,SAAP,MAAsB,eAAtB;AACA,OAAOC,GAAP,MAAgB,eAAhB;AACA,SAASC,UAAT,EAAqBC,eAArB,EAAsCC,SAAtC,QAAuD,SAAvD;AACA,OAAO,gBAAP;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,UAApC;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,KAAP,MAAkB,eAAlB;AACA,SAASC,OAAT,EAAkBC,QAAlB,QAAkC,YAAlC;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,OAAOC,aAAP,MAA0B,qBAA1B;AACA,OAAOC,WAAP,MAAwB,mBAAxB;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,OAAOC,iBAAP,MAA8B,+BAA9B;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,QAAN,SAAuBvB,SAAvB,CAAiC;AAC/BwB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,IADM;AAEXC,MAAAA,WAAW,EAAE,aAFF;AAGXC,MAAAA,WAAW,EAAE,IAHF;AAIXC,MAAAA,iBAAiB,EAAE,IAJR;AAKXC,MAAAA,WAAW,EAAE;AACXC,QAAAA,kBAAkB,EAAE,IADT;AAEXC,QAAAA,OAAO,EAAE,IAFE;AAGXC,QAAAA,SAAS,EAAE,IAHA;AAIXC,QAAAA,IAAI,EAAE,IAJK;AAKXC,QAAAA,YAAY,EAAE;AALH;AALF,KAAb;AAcA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AAEA,SAAKE,8BAAL,GAAsC,KAAKA,8BAAL,CAAoCF,IAApC,CACpC,IADoC,CAAtC;AAIA,SAAKG,4BAAL,GAAoC,KAAKA,4BAAL,CAAkCH,IAAlC,CAClC,IADkC,CAApC;AAIA,SAAKI,oCAAL,GAA4C,KAAKA,oCAAL,CAA0CJ,IAA1C,CAC1C,IAD0C,CAA5C;AAIA,SAAKK,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBL,IAAtB,CAA2B,IAA3B,CAAxB;AAEA,SAAKM,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBN,IAAxB,CAA6B,IAA7B,CAA1B;AAEA,SAAKO,cAAL,GAAsB,KAAKA,cAAL,CAAoBP,IAApB,CAAyB,IAAzB,CAAtB;AACD;;AAEDK,EAAAA,gBAAgB,GAAG;AACjB,UAAMG,UAAU,GAAGxC,eAAe,CAChC,CACE;AAAU;AADZ,MAEE;AAAU;AAFZ,MAGE;AAAU;AAHZ,MAIE;AAAU;AAJZ,KADgC,EAOhC,WAPgC,EAQhC,WARgC,CAAlC;AAUA,UAAMyC,WAAW,GAAGzC,eAAe,CACjC,CACE;AAAU;AADZ,MAEE;AAAU;AAFZ,MAGE;AAAU;AAHZ,MAIE;AAAU;AAJZ,KADiC,EAOjC,WAPiC,EAQjC,WARiC,CAAnC;;AAWA,UAAM0C,sBAAsB,GAAI,UAAUnC,OAAV,EAAmB;AACjD,eAASmC,sBAAT,CAAgCC,SAAhC,EAA2CC,SAA3C,EAAsDC,UAAtD,EAAkE;AAChE,cAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,QAAAA,MAAM,CAACG,SAAP,GAAmBJ,UAAnB;AAEA,YAAIK,OAAO,GAAGH,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAE,QAAAA,OAAO,CAACN,SAAR,GAAoBA,SAAS,GAAG,GAAZ,GAAkB,4BAAtC;AACAM,QAAAA,OAAO,CAACC,WAAR,CAAoBL,MAApB;AAEAvC,QAAAA,OAAO,CAAC6C,IAAR,CAAa,IAAb,EAAmB;AACjBF,UAAAA,OAAO,EAAEA;AADQ,SAAnB;AAIAJ,QAAAA,MAAM,CAACO,gBAAP,CACE,OADF,EAEE,KAAKC,4BAAL,CAAkCtB,IAAlC,CAAuC,IAAvC,EAA6CW,SAA7C,CAFF,EAGE,KAHF;AAKD;;AAED,UAAIpC,OAAJ,EAAamC,sBAAsB,CAACa,SAAvB,GAAmChD,OAAnC;AACbmC,MAAAA,sBAAsB,CAACc,SAAvB,GAAmCC,MAAM,CAACC,MAAP,CACjCnD,OAAO,IAAIA,OAAO,CAACiD,SADc,CAAnC;AAGAd,MAAAA,sBAAsB,CAACc,SAAvB,CAAiCtC,WAAjC,GAA+CwB,sBAA/C;;AAEAA,MAAAA,sBAAsB,CAACc,SAAvB,CAAiCF,4BAAjC,GAAgE,SAASA,4BAAT,CAC9DX,SAD8D,EAE9D;AACAtB,QAAAA,GAAG,CACAsC,SADH,GAEGC,QAFH,GAGGvC,GAHH,CAGQwC,KAAD,IAAW;AACd,cAAIA,KAAK,CAACC,YAAN,OAAyBnB,SAA7B,EAAwC;AACtCkB,YAAAA,KAAK,CAACE,UAAN,CAAiB,CAACF,KAAK,CAACG,UAAN,EAAlB;AACD;AACF,SAPH;AAQD,OAXD;;AAaA,aAAOtB,sBAAP;AACD,KAxC8B,CAwC5BnC,OAxC4B,CAA/B;;AA0CA,UAAMc,GAAG,GAAG,IAAI1B,GAAJ,CAAQ;AAClBsE,MAAAA,MAAM,EAAE,KAAKC,IAAL,CAAUC,YADA;AAElBC,MAAAA,MAAM,EAAE,CACN,IAAIvE,SAAJ,CAAc;AACZwE,QAAAA,MAAM,EAAE,IAAIvE,GAAJ,EADI;AAEZwE,QAAAA,MAAM,EAAE7B,WAFI;AAGZ8B,QAAAA,MAAM,EAAE;AAHI,OAAd,CADM,CAFU;AASlBC,MAAAA,IAAI,EAAE,IAAI5E,IAAJ,CAAS;AACb6E,QAAAA,MAAM,EAAE1E,UAAU,CAAC,CAAC,SAAD,EAAY,SAAZ,CAAD,CADL;AAEb2E,QAAAA,IAAI,EAAE,EAFO;AAGbJ,QAAAA,MAAM,EAAE9B,UAHK;AAIbmC,QAAAA,OAAO,EAAE;AAJI,OAAT,CATY;AAelBC,MAAAA,QAAQ,EAAEpE,QAAQ,CAAC;AACjBqE,QAAAA,kBAAkB,EAAE;AAClBZ,UAAAA,MAAM,EAAE,KAAKC,IAAL,CAAUC;AADA;AADH,OAAD,CAAR,CAIPW,MAJO,CAIA,CACR,IAAIpC,sBAAJ,CACE,eADF,EAEE,kBAFF,EAGE,UAHF,CADQ,EAMR,IAAIA,sBAAJ,CAA2B,aAA3B,EAA0C,gBAA1C,EAA4D,QAA5D,CANQ,EAOR,IAAIA,sBAAJ,CACE,qBADF,EAEE,wBAFF,EAGE,gBAHF,CAPQ,CAJA;AAfQ,KAAR,CAAZ;AAiCA,QAAIqC,kBAAkB,GAAG,EAAzB;AACA,QAAIC,kBAAkB,GAAG,EAAzB;AACA,QAAIC,0BAA0B,GAAG,EAAjC;AAEArE,IAAAA,aAAa,CAACS,GAAd,CAAmB6D,IAAD,IAAU;AAC1B,UAAIC,cAAc,GAAG,IAAI9E,OAAJ,CAAY;AAC/B+E,QAAAA,QAAQ,EAAE,IAAI9E,KAAJ,CAAUP,UAAU,CAACmF,IAAI,CAAC5D,WAAN,CAApB,CADqB;AAE/BK,QAAAA,OAAO,EAAEuD,IAAI,CAACvD,OAFiB;AAG/BC,QAAAA,SAAS,EAAEsD,IAAI,CAACtD,SAHe;AAI/BC,QAAAA,IAAI,EAAEqD,IAAI,CAACrD,IAJoB;AAK/BC,QAAAA,YAAY,EAAEoD,IAAI,CAACpD,YALY;AAM/BJ,QAAAA,kBAAkB,EAAEwD,IAAI,CAAC5D;AANM,OAAZ,CAArB;AAQAyD,MAAAA,kBAAkB,CAACM,IAAnB,CAAwBF,cAAxB;AACD,KAVD;AAYAtE,IAAAA,WAAW,CAACQ,GAAZ,CAAiB6D,IAAD,IAAU;AACxB,UAAII,gBAAgB,GAAG,EAAvB;AACAJ,MAAAA,IAAI,CAAC5D,WAAL,CAAiBD,GAAjB,CAAsBkE,UAAD,IAAgB;AACnCD,QAAAA,gBAAgB,CAACD,IAAjB,CAAsBtF,UAAU,CAACwF,UAAD,CAAhC;AACD,OAFD;AAIA,UAAIJ,cAAc,GAAG,IAAI9E,OAAJ,CAAY;AAC/B+E,QAAAA,QAAQ,EAAE,IAAIzE,UAAJ,CAAe2E,gBAAf,CADqB;AAE/B3D,QAAAA,OAAO,EAAEuD,IAAI,CAACvD,OAFiB;AAG/BC,QAAAA,SAAS,EAAEsD,IAAI,CAACtD,SAHe;AAI/BC,QAAAA,IAAI,EAAEqD,IAAI,CAACrD,IAJoB;AAK/BC,QAAAA,YAAY,EAAEoD,IAAI,CAACpD;AALY,OAAZ,CAArB;AAQAkD,MAAAA,kBAAkB,CAACK,IAAnB,CAAwBF,cAAxB;AACD,KAfD;AAiBArE,IAAAA,mBAAmB,CAACO,GAApB,CAAyB6D,IAAD,IAAU;AAChC,UAAIC,cAAc,GAAG,IAAI9E,OAAJ,CAAY;AAC/B+E,QAAAA,QAAQ,EAAE,IAAI9E,KAAJ,CAAUP,UAAU,CAACmF,IAAI,CAAC5D,WAAN,CAApB,CADqB;AAE/BK,QAAAA,OAAO,EAAEuD,IAAI,CAACvD,OAFiB;AAG/BC,QAAAA,SAAS,EAAEsD,IAAI,CAACtD,SAHe;AAI/BC,QAAAA,IAAI,EAAEqD,IAAI,CAACrD,IAJoB;AAK/BC,QAAAA,YAAY,EAAEoD,IAAI,CAACpD;AALY,OAAZ,CAArB;AAQAmD,MAAAA,0BAA0B,CAACI,IAA3B,CAAgCF,cAAhC;AACD,KAVD;AAYA,QAAIK,iBAAiB,GAAG,IAAI9E,YAAJ,CAAiB;AACvC+E,MAAAA,QAAQ,EAAET;AAD6B,KAAjB,CAAxB;AAIA,SAAKU,WAAL,GAAmB,IAAIjF,WAAJ,CAAgB;AACjCmC,MAAAA,SAAS,EAAE,aADsB;AAEjCyB,MAAAA,MAAM,EAAEmB,iBAFyB;AAGjCG,MAAAA,OAAO,EAAE,IAHwB;AAIjCC,MAAAA,KAAK,EAAE,IAAIzF,KAAJ,CAAU;AACf0F,QAAAA,MAAM,EAAE,IAAI3F,MAAJ,CAAW;AACjB4F,UAAAA,KAAK,EAAE,CADU;AAEjBC,UAAAA,KAAK,EAAE;AAFU,SAAX;AADO,OAAV;AAJ0B,KAAhB,CAAnB;AAYA,QAAIC,yBAAyB,GAAG,IAAItF,YAAJ,CAAiB;AAC/C+E,MAAAA,QAAQ,EAAER;AADqC,KAAjB,CAAhC;AAIA,SAAKgB,mBAAL,GAA2B,IAAIxF,WAAJ,CAAgB;AACzCmC,MAAAA,SAAS,EAAE,qBAD8B;AAEzCyB,MAAAA,MAAM,EAAE2B,yBAFiC;AAGzCL,MAAAA,OAAO,EAAE,IAHgC;AAIzCC,MAAAA,KAAK,EAAE,IAAIzF,KAAJ,CAAU;AACf+F,QAAAA,KAAK,EAAE,IAAI9F,IAAJ,CAAS;AACd+F,UAAAA,OAAO,EAAE,CADK;AAEdC,UAAAA,GAAG,EAAErF,iBAFS;AAGdsF,UAAAA,KAAK,EAAE;AAHO,SAAT;AADQ,OAAV;AAJkC,KAAhB,CAA3B;AAYAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,mBAAjB;AAEA,QAAIO,mBAAmB,GAAG,IAAI9F,YAAJ,CAAiB;AACzC+E,MAAAA,QAAQ,EAAEV;AAD+B,KAAjB,CAA1B;AAIA,SAAK0B,aAAL,GAAqB,IAAIhG,WAAJ,CAAgB;AACnCmC,MAAAA,SAAS,EAAE,eADwB;AAEnCyB,MAAAA,MAAM,EAAEmC,mBAF2B;AAGnCb,MAAAA,OAAO,EAAE,IAH0B;AAInCC,MAAAA,KAAK,EAAE,IAAIzF,KAAJ,CAAU;AACf+F,QAAAA,KAAK,EAAE,IAAI9F,IAAJ,CAAS;AACd+F,UAAAA,OAAO,EAAE,CADK;AAEdC,UAAAA,GAAG,EAAEpF,UAFS;AAGdqF,UAAAA,KAAK,EAAE;AAHO,SAAT;AADQ,OAAV;AAJ4B,KAAhB,CAArB,CApLiB,CAiMjB;AAEA;AAEA;;AACAhF,IAAAA,GAAG,CAACqF,QAAJ,CAAa,KAAKT,mBAAlB;AACA5E,IAAAA,GAAG,CAACqF,QAAJ,CAAa,KAAKD,aAAlB;AACApF,IAAAA,GAAG,CAACqF,QAAJ,CAAa,KAAKhB,WAAlB,EAxMiB,CAyMjB;AACA;;AACArE,IAAAA,GAAG,CAACsF,EAAJ,CACE,OADF,EAEE,UAAUC,YAAV,EAAwB;AACtB,YAAMC,iBAAiB,GAAG5G,SAAS,CACjC2G,YAAY,CAACrB,UADoB,EAEjC,WAFiC,EAGjC,WAHiC,CAAnC;AAMA,UAAIuB,gBAAgB,GAClBD,iBAAiB,CAAC,CAAD,CAAjB,CAAqBE,OAArB,CAA6B,CAA7B,IACA,GADA,GAEAF,iBAAiB,CAAC,CAAD,CAAjB,CAAqBE,OAArB,CAA6B,CAA7B,CAHF;AAIA,WAAKC,QAAL,CAAc;AAAE1F,QAAAA,WAAW,EAAEwF;AAAf,OAAd;AAEAzF,MAAAA,GAAG,CAAC4F,qBAAJ,CACEL,YAAY,CAACM,KADf,EAEE,UAAUC,OAAV,EAAmBtD,KAAnB,EAA0B;AACxB,aAAKmD,QAAL,CAAc;AACZvF,UAAAA,WAAW,EAAE;AACXC,YAAAA,kBAAkB,EAAEyF,OAAO,CAACC,aAAR,GAAwB1F,kBADjC;AAEXC,YAAAA,OAAO,EAAEwF,OAAO,CAACC,aAAR,GAAwBzF,OAFtB;AAGXC,YAAAA,SAAS,EAAEuF,OAAO,CAACC,aAAR,GAAwBxF,SAHxB;AAIXC,YAAAA,IAAI,EAAEsF,OAAO,CAACC,aAAR,GAAwBvF,IAJnB;AAKXC,YAAAA,YAAY,EAAEqF,OAAO,CAACC,aAAR,GAAwBtF;AAL3B;AADD,SAAd;AASA,aAAKV,KAAL,CAAWC,GAAX,CACGgG,OADH,GAEGC,OAFH,CAEW;AAAE7C,UAAAA,MAAM,EAAE1E,UAAU,CAAC8G,iBAAD;AAApB,SAFX,EAEsD;AAAEnC,UAAAA,IAAI,EAAE;AAAR,SAFtD;AAGD,OAbD,CAaE1C,IAbF,CAaO,IAbP,CAFF;AAiBD,KA9BD,CA8BEA,IA9BF,CA8BO,IA9BP,CAFF,EA3MiB,CA8OjB;;AACAX,IAAAA,GAAG,CAACgG,OAAJ,GAAcV,EAAd,CAAiB,gBAAjB,EAAoCY,CAAD,IAAO;AACxC,cAAQA,CAAC,CAACC,GAAV;AACE,aAAK,YAAL;AACE,eAAKvF,UAAL,CAAgBZ,GAAG,CAACgG,OAAJ,GAAcI,OAAd,EAAhB;AACA;AAHJ;AAKD,KAND;AAOA,SAAKT,QAAL,CAAc;AACZ3F,MAAAA,GAAG,EAAEA;AADO,KAAd;AAGD;;AAEDqG,EAAAA,iBAAiB,GAAG;AAClB,SAAKrF,gBAAL;AACD;;AAEDH,EAAAA,8BAA8B,GAAG;AAC/B,SAAK8E,QAAL,CAAc;AACZxF,MAAAA,iBAAiB,EAAEZ;AADP,KAAd;AAGD;;AACDuB,EAAAA,4BAA4B,GAAG;AAC7B,SAAK6E,QAAL,CAAc;AACZxF,MAAAA,iBAAiB,EAAEX;AADP,KAAd;AAGD;;AACDuB,EAAAA,oCAAoC,GAAG;AACrC,SAAK4E,QAAL,CAAc;AACZxF,MAAAA,iBAAiB,EAAEV;AADP,KAAd;AAGD;;AAED6G,EAAAA,yBAAyB,CAACC,IAAD,EAAO;AAC9B,QAAIA,IAAI,CAAChG,SAAL,KAAmB,IAAvB,EAA6B;AAC3B,WAAKR,KAAL,CAAWC,GAAX,CAAegG,OAAf,GAAyBC,OAAzB,CACE;AACE7C,QAAAA,MAAM,EAAE1E,UAAU,CAAC6H,IAAI,CAACtG,WAAL,CAAiB,CAAjB,CAAD;AADpB,OADF,EAIE;AAAEoD,QAAAA,IAAI,EAAE;AAAR,OAJF;AAMD,KAPD,MAOO;AACL,WAAKtD,KAAL,CAAWC,GAAX,CACGgG,OADH,GAEGC,OAFH,CAEW;AAAE7C,QAAAA,MAAM,EAAE1E,UAAU,CAAC6H,IAAI,CAACtG,WAAN;AAApB,OAFX,EAEqD;AAAEoD,QAAAA,IAAI,EAAE;AAAR,OAFrD;AAGD;;AACD,SAAKsC,QAAL,CAAc;AACZvF,MAAAA,WAAW,EAAE;AACXE,QAAAA,OAAO,EAAEiG,IAAI,CAACjG,OADH;AAEXC,QAAAA,SAAS,EAAEgG,IAAI,CAAChG,SAFL;AAGXC,QAAAA,IAAI,EAAE+F,IAAI,CAAC/F,IAHA;AAIXC,QAAAA,YAAY,EAAE8F,IAAI,CAAC9F;AAJR;AADD,KAAd;AAQD;;AAEDQ,EAAAA,kBAAkB,CAACuF,WAAD,EAAcC,WAAd,EAA2BC,UAA3B,EAAuC;AACvD,SAAKtB,aAAL,CAAmBuB,QAAnB,CACE,IAAI7H,KAAJ,CAAU;AACR+F,MAAAA,KAAK,EAAE,IAAI9F,IAAJ,CAAS;AACd+F,QAAAA,OAAO,EAAE,CADK;AAEdC,QAAAA,GAAG,EAAEpF,UAFS;AAGdqF,QAAAA,KAAK,EAAE0B;AAHO,OAAT;AADC,KAAV,CADF;AASA,SAAKrC,WAAL,CAAiBsC,QAAjB,CACE,IAAI7H,KAAJ,CAAU;AACR0F,MAAAA,MAAM,EAAE,IAAI3F,MAAJ,CAAW;AACjB4F,QAAAA,KAAK,EAAEgC,WADU;AAEjB/B,QAAAA,KAAK,EAAE;AAFU,OAAX;AADA,KAAV,CADF;AAQA,SAAKE,mBAAL,CAAyB+B,QAAzB,CACE,IAAI7H,KAAJ,CAAU;AACR+F,MAAAA,KAAK,EAAE,IAAI9F,IAAJ,CAAS;AACd+F,QAAAA,OAAO,EAAE,CADK;AAEdC,QAAAA,GAAG,EAAErF,iBAFS;AAGdsF,QAAAA,KAAK,EAAE0B;AAHO,OAAT;AADC,KAAV,CADF;AASD;;AAED9F,EAAAA,UAAU,CAACgG,QAAD,EAAW;AACnB,QAAIA,QAAQ,GAAG,EAAf,EAAmB;AACjB,WAAK3F,kBAAL,CAAwB,CAAxB,EAA2B,GAA3B,EAAgC,IAAhC;AACD,KAFD,MAEO,IAAI2F,QAAQ,GAAG,EAAf,EAAmB;AACxB,WAAK3F,kBAAL,CAAwB,GAAxB,EAA6B,CAA7B,EAAgC,IAAhC;AACD,KAFM,MAEA,IAAI2F,QAAQ,GAAG,EAAf,EAAmB;AACxB,WAAK3F,kBAAL,CAAwB,GAAxB,EAA6B,CAA7B,EAAgC,IAAhC;AACD,KAFM,MAEA,IAAI2F,QAAQ,GAAG,EAAf,EAAmB;AACxB,WAAK3F,kBAAL,CAAwB,GAAxB,EAA6B,CAA7B,EAAgC,GAAhC;AACD,KAFM,MAEA,IAAI2F,QAAQ,GAAG,EAAf,EAAmB;AACxB,WAAK3F,kBAAL,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,IAA9B;AACD,KAFM,MAEA;AACL,WAAKA,kBAAL,CAAwB,CAAxB,EAA2B,CAA3B,EAA8B,IAA9B;AACD;AACF;;AAEDC,EAAAA,cAAc,CAACd,WAAD,EAAc;AAC1B,WAAOA,WAAW,KAAK,IAAhB,GACL;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCA,WAArC,CADK,GAGL;AAAK,MAAA,SAAS,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF;AAKD;;AACDM,EAAAA,UAAU,CAACmG,EAAD,EAAK;AACb5B,IAAAA,OAAO,CAACC,GAAR,CAAY2B,EAAE,CAACzG,WAAf;AACD;;AAED0G,EAAAA,sBAAsB,CACpBC,iBADoB,EAEpBC,aAFoB,EAGpBC,eAHoB,EAIpBC,kBAJoB,EAKpBC,UALoB,EAMpB;AACA,QAAI,KAAKpH,KAAL,CAAWG,WAAX,KAA2B,KAA/B,EAAsC;AACpC,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAmC,QAAA,EAAE,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKH,KAAL,CAAWE,WADd,CADF,EAIE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,EAAE,EAAC,cAFL;AAGE,QAAA,WAAW,EAAC,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,EASE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,EAAE,EAAC,gBAFL;AAGE,QAAA,WAAW,EAAC,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATF,EAcE;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,QAAA,EAAE,EAAC,mBAFL;AAGE,QAAA,WAAW,EAAC,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAdF,EAmBE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,EAAE,EAAC,WAFL;AAGE,QAAA,WAAW,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAnBF,CADF,CADF;AA6BD,KA9BD,MA8BO,IAAI,KAAKF,KAAL,CAAWG,WAAX,KAA2B,MAA/B,EAAuC;AAC5C,aACE;AAAK,QAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,SAAS,EAAC,UAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,SAAS,EAAC,iBAAjB;AAAmC,QAAA,EAAE,EAAC,iBAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG6G,iBADH,CADF,EAIE;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,EAAE,EAAC,cAFL;AAGE,QAAA,WAAW,EAAC,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGC,aALH,CAJF,EAWE;AACE,QAAA,SAAS,EAAC,gBADZ;AAEE,QAAA,EAAE,EAAC,gBAFL;AAGE,QAAA,WAAW,EAAC,YAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGC,eALH,CAXF,EAkBE;AACE,QAAA,SAAS,EAAC,mBADZ;AAEE,QAAA,EAAE,EAAC,mBAFL;AAGE,QAAA,WAAW,EAAC,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGC,kBALH,CAlBF,EAyBE;AACE,QAAA,SAAS,EAAC,WADZ;AAEE,QAAA,EAAE,EAAC,WAFL;AAGE,QAAA,WAAW,EAAC,iBAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGC,UALH,CAzBF,CADF,CADF;AAqCD,KAtCM,MAsCA;AACL,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;;AAEDC,EAAAA,MAAM,GAAG;AACP,SAAK1G,UAAL,CAAgB,KAAKX,KAArB;AACAkF,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKnF,KAAjB;AACA,WACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAkC,MAAA,EAAE,EAAC,kBAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKA,KAAL,CAAWE,WADd,CADF,EAKE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,OAAO,EAAE,KAAKY,8BAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,CADF,EAUE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,OAAO,EAAE,KAAKC,4BAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,CAVF,EAmBE;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,SAAS,EAAC,cADZ;AAEE,MAAA,OAAO,EAAE,KAAKC,oCAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAnBF,CALF,EAmCE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKG,cAAL,CAAoB,KAAKnB,KAAL,CAAWK,WAAX,CAAuBE,OAA3C,CADH,EAEG,KAAKY,cAAL,CAAoB,KAAKnB,KAAL,CAAWK,WAAX,CAAuBG,SAA3C,CAFH,EAGG,KAAKW,cAAL,CAAoB,KAAKnB,KAAL,CAAWK,WAAX,CAAuBI,IAA3C,CAHH,EAIG,KAAKU,cAAL,CAAoB,KAAKnB,KAAL,CAAWK,WAAX,CAAuBK,YAA3C,CAJH,CAnCF,EAyCE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzCF,CADF,EA4CE;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,GAAG,EAAC,cAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA5CF,EA6CE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKV,KAAL,CAAWI,iBAAX,KAAiC,IAAjC,GACC,KAAKJ,KAAL,CAAWI,iBAAX,CAA6BH,GAA7B,CAAkC8F,OAAD,IAAa;AAC5C,aACE;AACE,QAAA,SAAS,EAAC,kBADZ;AAEE,QAAA,GAAG,EAAEA,OAAO,CAAC7F,WAFf;AAGE,QAAA,OAAO,EAAE,KAAKqG,yBAAL,CAA+B3F,IAA/B,CAAoC,IAApC,EAA0CmF,OAA1C,CAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGA,OAAO,CAACxF,OALX,CADF;AASD,KAVD,CADD,GAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdJ,CADF,CA7CF,CADF;AAmED;;AA7hB8B;;AAgiBjC,eAAeV,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Stroke, Style, Icon } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport LineString from \"ol/geom/LineString\";\nimport switchesArray from \"./res/switches.json\";\nimport opticsArray from \"./res/optics.json\";\nimport clientStationsArray from \"./res/clientStations.json\";\nimport clientStationIcon from \"./res/client_station_icon.png\";\nimport switchIcon from \"./res/switch_icon.png\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      currentForm: null,\n      displayedFeatures: null,\n      featureInfo: {\n        featureCoordinates: null,\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null,\n      },\n    };\n\n    this.funForTest = this.funForTest.bind(this);\n\n    this.handleZoom = this.handleZoom.bind(this);\n\n    this.setSwitchesToRightControlPanel = this.setSwitchesToRightControlPanel.bind(\n      this\n    );\n\n    this.setOpticsToRightControlPanel = this.setOpticsToRightControlPanel.bind(\n      this\n    );\n\n    this.setClientStationsToRightControlPanel = this.setClientStationsToRightControlPanel.bind(\n      this\n    );\n\n    this.initMapComponent = this.initMapComponent.bind(this);\n\n    this.changeFeaturesSize = this.changeFeaturesSize.bind(this);\n\n    this.getFeatureInfo = this.getFeatureInfo.bind(this);\n  }\n\n  initMapComponent() {\n    const extentView = transformExtent(\n      [\n        20.969893 /** min x */,\n        57.540673 /** min y */,\n        28.413477 /** max x */,\n        59.894102 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n    const extentLayer = transformExtent(\n      [\n        16.581885 /** min x */,\n        55.671002 /** min y */,\n        32.794556 /** max x */,\n        61.543774 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n\n    const layerVisibilityControl = (function (Control) {\n      function layerVisibilityControl(layerName, className, buttontext) {\n        const button = document.createElement(\"button\");\n        button.innerHTML = buttontext;\n\n        var element = document.createElement(\"div\");\n        element.className = className + \" \" + \"ol-unselectable ol-control\";\n        element.appendChild(button);\n\n        Control.call(this, {\n          element: element,\n        });\n\n        button.addEventListener(\n          \"click\",\n          this.handlelayerVisibilityControl.bind(this, layerName),\n          false\n        );\n      }\n\n      if (Control) layerVisibilityControl.__proto__ = Control;\n      layerVisibilityControl.prototype = Object.create(\n        Control && Control.prototype\n      );\n      layerVisibilityControl.prototype.constructor = layerVisibilityControl;\n\n      layerVisibilityControl.prototype.handlelayerVisibilityControl = function handlelayerVisibilityControl(\n        layerName\n      ) {\n        map\n          .getLayers()\n          .getArray()\n          .map((layer) => {\n            if (layer.getClassName() === layerName) {\n              layer.setVisible(!layer.getVisible());\n            }\n          });\n      };\n\n      return layerVisibilityControl;\n    })(Control);\n\n    const map = new Map({\n      target: this.refs.mapContainer,\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n          extent: extentLayer,\n          zIndex: 0,\n        }),\n      ],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5,\n      }),\n      controls: defaults({\n        attributionOptions: {\n          target: this.refs.mapContainer,\n        },\n      }).extend([\n        new layerVisibilityControl(\n          \"switchesLayer\",\n          \"switches-visible\",\n          \"switches\"\n        ),\n        new layerVisibilityControl(\"opticsLayer\", \"optics-visible\", \"optics\"),\n        new layerVisibilityControl(\n          \"clientStationsLayer\",\n          \"clientStations-visible\",\n          \"clientStations\"\n        ),\n      ]),\n    });\n    let switchFeatureArray = [];\n    let opticsFeatureArray = [];\n    let clientStationsFeatureArray = [];\n\n    switchesArray.map((data) => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n        featureCoordinates: data.coordinates,\n      });\n      switchFeatureArray.push(featureElement);\n    });\n\n    opticsArray.map((data) => {\n      let coordinatesArray = [];\n      data.coordinates.map((coordinate) => {\n        coordinatesArray.push(fromLonLat(coordinate));\n      });\n\n      let featureElement = new Feature({\n        geometry: new LineString(coordinatesArray),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n      });\n\n      opticsFeatureArray.push(featureElement);\n    });\n\n    clientStationsArray.map((data) => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n      });\n\n      clientStationsFeatureArray.push(featureElement);\n    });\n\n    let opticsLayerSource = new VectorSource({\n      features: opticsFeatureArray,\n    });\n\n    this.opticsLayer = new VectorLayer({\n      className: \"opticsLayer\",\n      source: opticsLayerSource,\n      visible: true,\n      style: new Style({\n        stroke: new Stroke({\n          width: 2,\n          color: \"skyblue\",\n        }),\n      }),\n    });\n\n    let clientStationsLayerSource = new VectorSource({\n      features: clientStationsFeatureArray,\n    });\n\n    this.clientStationsLayer = new VectorLayer({\n      className: \"clientStationsLayer\",\n      source: clientStationsLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: clientStationIcon,\n          scale: 0.09,\n        }),\n      }),\n    });\n    console.log(this.clientStationsLayer);\n\n    let switchesLayerSource = new VectorSource({\n      features: switchFeatureArray,\n    });\n\n    this.switchesLayer = new VectorLayer({\n      className: \"switchesLayer\",\n      source: switchesLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: switchIcon,\n          scale: 0.09,\n        }),\n      }),\n    });\n\n    //layers with network equipment\n\n    //map feature settings\n\n    //layers settings\n    map.addLayer(this.clientStationsLayer);\n    map.addLayer(this.switchesLayer);\n    map.addLayer(this.opticsLayer);\n    //layers settings\n    //click on map\n    map.on(\n      \"click\",\n      function (pointOfClick) {\n        const clickedCoordinate = transform(\n          pointOfClick.coordinate,\n          \"EPSG:3857\",\n          \"EPSG:4326\"\n        );\n\n        let coordinateString =\n          clickedCoordinate[0].toFixed(6) +\n          \",\" +\n          clickedCoordinate[1].toFixed(6);\n        this.setState({ coordinates: coordinateString });\n\n        map.forEachFeatureAtPixel(\n          pointOfClick.pixel,\n          function (feature, layer) {\n            this.setState({\n              featureInfo: {\n                featureCoordinates: feature.getProperties().featureCoordinates,\n                address: feature.getProperties().address,\n                ipAddress: feature.getProperties().ipAddress,\n                info: feature.getProperties().info,\n                locationInfo: feature.getProperties().locationInfo,\n              },\n            });\n            this.state.map\n              .getView()\n              .animate({ center: fromLonLat(clickedCoordinate) }, { zoom: 19 });\n          }.bind(this)\n        );\n      }.bind(this)\n    );\n\n    // change features size on zoom change\n    map.getView().on(\"propertychange\", (e) => {\n      switch (e.key) {\n        case \"resolution\":\n          this.handleZoom(map.getView().getZoom());\n          break;\n      }\n    });\n    this.setState({\n      map: map,\n    });\n  }\n\n  componentDidMount() {\n    this.initMapComponent();\n  }\n\n  setSwitchesToRightControlPanel() {\n    this.setState({\n      displayedFeatures: switchesArray,\n    });\n  }\n  setOpticsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: opticsArray,\n    });\n  }\n  setClientStationsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: clientStationsArray,\n    });\n  }\n\n  handleRightPanelItemClick(item) {\n    if (item.ipAddress === null) {\n      this.state.map.getView().animate(\n        {\n          center: fromLonLat(item.coordinates[0]),\n        },\n        { zoom: 17.5 }\n      );\n    } else {\n      this.state.map\n        .getView()\n        .animate({ center: fromLonLat(item.coordinates) }, { zoom: 19 });\n    }\n    this.setState({\n      featureInfo: {\n        address: item.address,\n        ipAddress: item.ipAddress,\n        info: item.info,\n        locationInfo: item.locationInfo,\n      },\n    });\n  }\n\n  changeFeaturesSize(pointRadius, strokeWidth, iconsScale) {\n    this.switchesLayer.setStyle(\n      new Style({\n        image: new Icon({\n          opacity: 1,\n          src: switchIcon,\n          scale: iconsScale,\n        }),\n      })\n    );\n    this.opticsLayer.setStyle(\n      new Style({\n        stroke: new Stroke({\n          width: strokeWidth,\n          color: \"skyblue\",\n        }),\n      })\n    );\n    this.clientStationsLayer.setStyle(\n      new Style({\n        image: new Icon({\n          opacity: 1,\n          src: clientStationIcon,\n          scale: iconsScale,\n        }),\n      })\n    );\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12) {\n      this.changeFeaturesSize(1, 0.5, 0.01);\n    } else if (zoomSize < 13) {\n      this.changeFeaturesSize(2.5, 2, 0.05);\n    } else if (zoomSize < 14) {\n      this.changeFeaturesSize(2.5, 2, 0.08);\n    } else if (zoomSize < 16) {\n      this.changeFeaturesSize(2.5, 2, 0.1);\n    } else if (zoomSize < 18) {\n      this.changeFeaturesSize(5, 4, 0.12);\n    } else {\n      this.changeFeaturesSize(9, 7, 0.25);\n    }\n  }\n\n  getFeatureInfo(featureInfo) {\n    return featureInfo !== null ? (\n      <div className=\"featureInfoElement\">{featureInfo}</div>\n    ) : (\n      <div className=\"hidden\"></div>\n    );\n  }\n  funForTest(ob) {\n    console.log(ob.featureInfo);\n  }\n\n  getEditingOrAddingForm(\n    coordinatesToEdit,\n    addressToEdit,\n    ipAddressToEdit,\n    locationInfoToEdit,\n    infoToEdit\n  ) {\n    if (this.state.currentForm === \"add\") {\n      return (\n        <div className=\"formContainer\">\n          <form className=\"addForm\">\n            <input className=\"coordinateField\" id=\"coordinateField\">\n              {this.state.coordinates}\n            </input>\n            <input\n              className=\"addressField\"\n              id=\"addressField\"\n              placeholder=\"address\"\n            ></input>\n            <input\n              className=\"ipAddressField\"\n              id=\"ipAddressField\"\n              placeholder=\"ip address\"\n            ></input>\n            <input\n              className=\"locationInfoField\"\n              id=\"locationInfoField\"\n              placeholder=\"location info\"\n            ></input>\n            <input\n              className=\"infoField\"\n              id=\"infoField\"\n              placeholder=\"additional info\"\n            ></input>\n          </form>\n        </div>\n      );\n    } else if (this.state.currentForm === \"edit\") {\n      return (\n        <div className=\"formContainer\">\n          <form className=\"editForm\">\n            <input className=\"coordinateField\" id=\"coordinateField\">\n              {coordinatesToEdit}\n            </input>\n            <input\n              className=\"addressField\"\n              id=\"addressField\"\n              placeholder=\"address\"\n            >\n              {addressToEdit}\n            </input>\n            <input\n              className=\"ipAddressField\"\n              id=\"ipAddressField\"\n              placeholder=\"ip address\"\n            >\n              {ipAddressToEdit}\n            </input>\n            <input\n              className=\"locationInfoField\"\n              id=\"locationInfoField\"\n              placeholder=\"location info\"\n            >\n              {locationInfoToEdit}\n            </input>\n            <input\n              className=\"infoField\"\n              id=\"infoField\"\n              placeholder=\"additional info\"\n            >\n              {infoToEdit}\n            </input>\n          </form>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n\n  render() {\n    this.funForTest(this.state);\n    console.log(this.state);\n    return (\n      <div className=\"opticMapComponent\">\n        <div className=\"leftMapPanel\">\n          <div className=\"coordinateString\" id=\"coordinateString\">\n            {this.state.coordinates}\n          </div>\n\n          <div className=\"objectButtons\">\n            <div className=\"featureInfoAddControls\">\n              <div\n                className=\"objectButton\"\n                onClick={this.setSwitchesToRightControlPanel}\n              >\n                switches\n              </div>\n              {/* <div className=\"addFeatureButton\">add</div> */}\n            </div>\n            <div className=\"featureInfoAddControls\">\n              <div\n                className=\"objectButton\"\n                onClick={this.setOpticsToRightControlPanel}\n              >\n                optic cable\n              </div>\n              {/* <div className=\"addFeatureButton\">add</div> */}\n            </div>\n            <div className=\"featureInfoAddControls\">\n              <div\n                className=\"objectButton\"\n                onClick={this.setClientStationsToRightControlPanel}\n              >\n                client stations\n              </div>\n              {/* <div className=\"addFeatureButton\">add</div> */}\n            </div>\n          </div>\n\n          <div className=\"featureInfo\">\n            {this.getFeatureInfo(this.state.featureInfo.address)}\n            {this.getFeatureInfo(this.state.featureInfo.ipAddress)}\n            {this.getFeatureInfo(this.state.featureInfo.info)}\n            {this.getFeatureInfo(this.state.featureInfo.locationInfo)}\n          </div>\n          <div className=\"formContainer\"></div>\n        </div>\n        <div className=\"mapContainer\" ref=\"mapContainer\"></div>\n        <div className=\"rightMapPanel\">\n          <div className=\"displayedFeatures\">\n            {this.state.displayedFeatures !== null ? (\n              this.state.displayedFeatures.map((feature) => {\n                return (\n                  <li\n                    className=\"displayedFeature\"\n                    key={feature.coordinates}\n                    onClick={this.handleRightPanelItemClick.bind(this, feature)}\n                  >\n                    {feature.address}\n                  </li>\n                );\n              })\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OpticMap;\n"]},"metadata":{},"sourceType":"module"}