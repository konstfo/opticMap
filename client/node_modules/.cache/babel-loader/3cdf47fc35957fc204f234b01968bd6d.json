{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\asus\\\\Documents\\\\javascript_studying\\\\opticMap\\\\optic-map\\\\src\\\\OpticMap.js\";\nimport React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Stroke, Style, Icon } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport LineString from \"ol/geom/LineString\";\nimport switchesArray from \"./res/switches.json\";\nimport opticsArray from \"./res/optics.json\";\nimport clientStationsArray from \"./res/clientStations.json\";\nimport clientStationIcon from \"./res/client_station_icon.png\";\nimport switchIcon from \"./res/switch_icon.png\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = evt => {\n      // this.setState({\n      //   currentForm: null,\n      // });\n      evt.preventDefault();\n    };\n\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      currentForm: null,\n      displayedFeatures: null,\n      featureInfo: {\n        featureCoordinates: null,\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null\n      },\n      editedFeatureInfo: {\n        featureCoordinates: null,\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null\n      }\n    };\n    this.funForTest = this.funForTest.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleZoom = this.handleZoom.bind(this);\n    this.setSwitchesToRightControlPanel = this.setSwitchesToRightControlPanel.bind(this);\n    this.setOpticsToRightControlPanel = this.setOpticsToRightControlPanel.bind(this);\n    this.setClientStationsToRightControlPanel = this.setClientStationsToRightControlPanel.bind(this);\n    this.initMapComponent = this.initMapComponent.bind(this);\n    this.changeFeaturesSize = this.changeFeaturesSize.bind(this);\n    this.getFeatureInfo = this.getFeatureInfo.bind(this);\n    this.getfeatureInfoBlock = this.getfeatureInfoBlock.bind(this);\n    this.getEditingOrAddingForm = this.getEditingOrAddingForm.bind(this);\n  }\n\n  initMapComponent() {\n    const extentView = transformExtent([20.969893\n    /** min x */\n    , 57.540673\n    /** min y */\n    , 28.413477\n    /** max x */\n    , 59.894102\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n    const extentLayer = transformExtent([16.581885\n    /** min x */\n    , 55.671002\n    /** min y */\n    , 32.794556\n    /** max x */\n    , 61.543774\n    /** max y */\n    ], \"EPSG:4326\", \"EPSG:3857\");\n\n    const layerVisibilityControl = function (Control) {\n      function layerVisibilityControl(layerName, className, buttontext) {\n        const button = document.createElement(\"button\");\n        button.innerHTML = buttontext;\n        var element = document.createElement(\"div\");\n        element.className = className + \" \" + \"ol-unselectable ol-control\";\n        element.appendChild(button);\n        Control.call(this, {\n          element: element\n        });\n        button.addEventListener(\"click\", this.handlelayerVisibilityControl.bind(this, layerName), false);\n      }\n\n      if (Control) layerVisibilityControl.__proto__ = Control;\n      layerVisibilityControl.prototype = Object.create(Control && Control.prototype);\n      layerVisibilityControl.prototype.constructor = layerVisibilityControl;\n\n      layerVisibilityControl.prototype.handlelayerVisibilityControl = function handlelayerVisibilityControl(layerName) {\n        map.getLayers().getArray().map(layer => {\n          if (layer.getClassName() === layerName) {\n            layer.setVisible(!layer.getVisible());\n          }\n        });\n      };\n\n      return layerVisibilityControl;\n    }(Control);\n\n    const map = new Map({\n      target: this.refs.mapContainer,\n      layers: [new TileLayer({\n        source: new OSM(),\n        extent: extentLayer,\n        zIndex: 0\n      })],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5\n      }),\n      controls: defaults({\n        attributionOptions: {\n          target: this.refs.mapContainer\n        }\n      }).extend([new layerVisibilityControl(\"switchesLayer\", \"switches-visible\", \"switches\"), new layerVisibilityControl(\"opticsLayer\", \"optics-visible\", \"optic cables\"), new layerVisibilityControl(\"clientStationsLayer\", \"clientStations-visible\", \"client stations\")])\n    });\n    let switchFeatureArray = [];\n    let opticsFeatureArray = [];\n    let clientStationsFeatureArray = [];\n    switchesArray.map(data => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n        featureCoordinates: data.coordinates\n      });\n      switchFeatureArray.push(featureElement);\n    });\n    opticsArray.map(data => {\n      let coordinatesArray = [];\n      data.coordinates.map(coordinate => {\n        coordinatesArray.push(fromLonLat(coordinate));\n      });\n      let featureElement = new Feature({\n        geometry: new LineString(coordinatesArray),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo\n      });\n      opticsFeatureArray.push(featureElement);\n    });\n    clientStationsArray.map(data => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo\n      });\n      clientStationsFeatureArray.push(featureElement);\n    });\n    let opticsLayerSource = new VectorSource({\n      features: opticsFeatureArray\n    });\n    this.opticsLayer = new VectorLayer({\n      className: \"opticsLayer\",\n      source: opticsLayerSource,\n      visible: true,\n      style: new Style({\n        stroke: new Stroke({\n          width: 2,\n          color: \"skyblue\"\n        })\n      })\n    });\n    let clientStationsLayerSource = new VectorSource({\n      features: clientStationsFeatureArray\n    });\n    this.clientStationsLayer = new VectorLayer({\n      className: \"clientStationsLayer\",\n      source: clientStationsLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: clientStationIcon,\n          scale: 0.09\n        })\n      })\n    });\n    let switchesLayerSource = new VectorSource({\n      features: switchFeatureArray\n    });\n    this.switchesLayer = new VectorLayer({\n      className: \"switchesLayer\",\n      source: switchesLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: switchIcon,\n          scale: 0.09\n        })\n      })\n    }); //layers with network equipment\n    //map feature settings\n    //layers settings\n\n    map.addLayer(this.clientStationsLayer);\n    map.addLayer(this.switchesLayer);\n    map.addLayer(this.opticsLayer); //layers settings\n    //click on map\n\n    map.on(\"click\", function (pointOfClick) {\n      const clickedCoordinate = transform(pointOfClick.coordinate, \"EPSG:3857\", \"EPSG:4326\");\n      let coordinateString = clickedCoordinate[0].toFixed(6) + \",\" + clickedCoordinate[1].toFixed(6);\n      this.setState({\n        coordinates: coordinateString\n      });\n      map.forEachFeatureAtPixel(pointOfClick.pixel, function (feature, layer) {\n        this.setState({\n          featureInfo: {\n            featureCoordinates: feature.getProperties().featureCoordinates,\n            address: feature.getProperties().address,\n            ipAddress: feature.getProperties().ipAddress,\n            info: feature.getProperties().info,\n            locationInfo: feature.getProperties().locationInfo\n          }\n        });\n        this.state.map.getView().animate({\n          center: fromLonLat(clickedCoordinate)\n        }, {\n          zoom: 19\n        });\n      }.bind(this));\n    }.bind(this)); // change features size on zoom change\n\n    map.getView().on(\"propertychange\", e => {\n      switch (e.key) {\n        case \"resolution\":\n          this.handleZoom(map.getView().getZoom());\n          break;\n      }\n    });\n    this.setState({\n      map: map\n    });\n  }\n\n  componentDidMount() {\n    this.initMapComponent();\n  }\n\n  setSwitchesToRightControlPanel() {\n    this.setState({\n      displayedFeatures: switchesArray\n    });\n  }\n\n  setOpticsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: opticsArray\n    });\n  }\n\n  setClientStationsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: clientStationsArray\n    });\n  }\n\n  handleRightPanelItemClick(item) {\n    if (item.ipAddress === null) {\n      this.state.map.getView().animate({\n        center: fromLonLat(item.coordinates[0])\n      }, {\n        zoom: 17.5\n      });\n    } else {\n      this.state.map.getView().animate({\n        center: fromLonLat(item.coordinates)\n      }, {\n        zoom: 19\n      });\n    }\n\n    this.setState({\n      featureInfo: {\n        address: item.address,\n        ipAddress: item.ipAddress,\n        info: item.info,\n        locationInfo: item.locationInfo,\n        featureCoordinates: item.coordinates\n      }\n    });\n  }\n\n  changeFeaturesSize(pointRadius, strokeWidth, iconsScale) {\n    this.switchesLayer.setStyle(new Style({\n      image: new Icon({\n        opacity: 1,\n        src: switchIcon,\n        scale: iconsScale\n      })\n    }));\n    this.opticsLayer.setStyle(new Style({\n      stroke: new Stroke({\n        width: strokeWidth,\n        color: \"skyblue\"\n      })\n    }));\n    this.clientStationsLayer.setStyle(new Style({\n      image: new Icon({\n        opacity: 1,\n        src: clientStationIcon,\n        scale: iconsScale\n      })\n    }));\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12) {\n      this.changeFeaturesSize(1, 0.5, 0.01);\n    } else if (zoomSize < 13) {\n      this.changeFeaturesSize(2.5, 2, 0.05);\n    } else if (zoomSize < 14) {\n      this.changeFeaturesSize(2.5, 2, 0.08);\n    } else if (zoomSize < 16) {\n      this.changeFeaturesSize(2.5, 2, 0.1);\n    } else if (zoomSize < 18) {\n      this.changeFeaturesSize(5, 4, 0.12);\n    } else {\n      this.changeFeaturesSize(9, 7, 0.25);\n    }\n  }\n\n  getFeatureInfo(featureInfo) {\n    return featureInfo !== null ? React.createElement(\"div\", {\n      className: \"featureInfoElement\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418\n      },\n      __self: this\n    }, featureInfo) : React.createElement(\"div\", {\n      className: \"hidden\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420\n      },\n      __self: this\n    });\n  }\n\n  getfeatureInfoBlock() {\n    if (this.state.featureInfo.featureCoordinates !== null) {\n      return React.createElement(\"div\", {\n        className: \"featureInfo\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, this.getFeatureInfo(this.state.featureInfo.address), this.getFeatureInfo(this.state.featureInfo.ipAddress), this.getFeatureInfo(this.state.featureInfo.info), this.getFeatureInfo(this.state.featureInfo.locationInfo), React.createElement(\"div\", {\n        className: \"editButton\",\n        onClick: () => {\n          this.setState({\n            currentForm: \"edit\"\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 431\n        },\n        __self: this\n      }, \"Edit\"));\n    } else {\n      return React.createElement(\"div\", {\n        className: \"hidden\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 444\n        },\n        __self: this\n      });\n    }\n  }\n\n  funForTest(ob) {\n    console.log(ob.featureInfo);\n  }\n\n  getEditingOrAddingForm() {\n    if (this.state.currentForm === \"add\") {\n      return React.createElement(\"div\", {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 460\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"addForm\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 461\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"coordinateFormField\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 462\n        },\n        __self: this\n      }, this.state.coordinates), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"addressFormField\",\n        placeholder: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 465\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"ipAddressFormField\",\n        placeholder: \"ip address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"locationInfoFormField\",\n        placeholder: \"location info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 475\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        ref: \"infoFormField\",\n        placeholder: \"additional info\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 480\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"formButtonsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      }, \"Submit\"))));\n    } else if (this.state.currentForm === \"edit\") {\n      return React.createElement(\"div\", {\n        className: \"formContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        className: \"editForm\",\n        onSubmit: this.handleSubmit(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(\"textarea\", {\n        className: \"formField\",\n        id: \"coordinateField\",\n        defaultValue: this.state.featureInfo.featureCoordinates,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        id: \"addressField\",\n        placeholder: \"address\",\n        defaultValue: this.state.featureInfo.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        id: \"ipAddressField\",\n        placeholder: \"ip address\",\n        defaultValue: this.state.featureInfo.ipAddress,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 506\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        id: \"locationInfoField\",\n        placeholder: \"location info\",\n        defaultValue: this.state.featureInfo.locationInfo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        className: \"formField\",\n        id: \"infoField\",\n        placeholder: \"additional info\",\n        defaultValue: this.state.featureInfo.info,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 518\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"formButtonsContainer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 525\n        },\n        __self: this\n      }, \"Delete\"), React.createElement(\"button\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 526\n        },\n        __self: this\n      }, \"Submit\"))));\n    } else {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 532\n        },\n        __self: this\n      });\n    }\n  }\n\n  render() {\n    this.funForTest(this.state);\n    return React.createElement(\"div\", {\n      className: \"opticMapComponent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 539\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"leftMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"coordinateString\",\n      id: \"coordinateString\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 541\n      },\n      __self: this\n    }, this.state.coordinates), React.createElement(\"div\", {\n      className: \"objectButtons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 545\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"featureInfoAddControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 546\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      onClick: this.setSwitchesToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 547\n      },\n      __self: this\n    }, \"switches\")), React.createElement(\"div\", {\n      className: \"featureInfoAddControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 555\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      onClick: this.setOpticsToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 556\n      },\n      __self: this\n    }, \"optic cable\")), React.createElement(\"div\", {\n      className: \"featureInfoAddControls\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 564\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"objectButton\",\n      onClick: this.setClientStationsToRightControlPanel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 565\n      },\n      __self: this\n    }, \"client stations\"))), this.getfeatureInfoBlock(), this.getEditingOrAddingForm(this.state.featureInfo.featureCoordinates, this.state.featureInfo.address, this.state.featureInfo.ipAddress, this.state.featureInfo.locationInfo, this.state.featureInfo.info)), React.createElement(\"div\", {\n      className: \"mapContainer\",\n      ref: \"mapContainer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 583\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"rightMapPanel\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 584\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"displayedFeatures\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 585\n      },\n      __self: this\n    }, this.state.displayedFeatures !== null ? this.state.displayedFeatures.map(feature => {\n      return React.createElement(\"li\", {\n        className: \"displayedFeature\",\n        key: feature.coordinates,\n        onClick: this.handleRightPanelItemClick.bind(this, feature),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589\n        },\n        __self: this\n      }, feature.address);\n    }) : React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 599\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default OpticMap;","map":{"version":3,"sources":["C:/Users/asus/Documents/javascript_studying/opticMap/optic-map/src/OpticMap.js"],"names":["React","Component","Map","View","TileLayer","OSM","fromLonLat","transformExtent","transform","Stroke","Style","Icon","Feature","Point","Control","defaults","VectorLayer","VectorSource","LineString","switchesArray","opticsArray","clientStationsArray","clientStationIcon","switchIcon","OpticMap","constructor","props","handleSubmit","evt","preventDefault","state","map","coordinates","currentForm","displayedFeatures","featureInfo","featureCoordinates","address","ipAddress","info","locationInfo","editedFeatureInfo","funForTest","bind","handleZoom","setSwitchesToRightControlPanel","setOpticsToRightControlPanel","setClientStationsToRightControlPanel","initMapComponent","changeFeaturesSize","getFeatureInfo","getfeatureInfoBlock","getEditingOrAddingForm","extentView","extentLayer","layerVisibilityControl","layerName","className","buttontext","button","document","createElement","innerHTML","element","appendChild","call","addEventListener","handlelayerVisibilityControl","__proto__","prototype","Object","create","getLayers","getArray","layer","getClassName","setVisible","getVisible","target","refs","mapContainer","layers","source","extent","zIndex","view","center","zoom","minZoom","controls","attributionOptions","extend","switchFeatureArray","opticsFeatureArray","clientStationsFeatureArray","data","featureElement","geometry","push","coordinatesArray","coordinate","opticsLayerSource","features","opticsLayer","visible","style","stroke","width","color","clientStationsLayerSource","clientStationsLayer","image","opacity","src","scale","switchesLayerSource","switchesLayer","addLayer","on","pointOfClick","clickedCoordinate","coordinateString","toFixed","setState","forEachFeatureAtPixel","pixel","feature","getProperties","getView","animate","e","key","getZoom","componentDidMount","handleRightPanelItemClick","item","pointRadius","strokeWidth","iconsScale","setStyle","zoomSize","ob","console","log","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { Map, View } from \"ol\";\nimport TileLayer from \"ol/layer/Tile\";\nimport OSM from \"ol/source/OSM\";\nimport { fromLonLat, transformExtent, transform } from \"ol/proj\";\nimport \"./OpticMap.css\";\nimport { Stroke, Style, Icon } from \"ol/style\";\nimport Feature from \"ol/Feature\";\nimport Point from \"ol/geom/Point\";\nimport { Control, defaults } from \"ol/control\";\nimport VectorLayer from \"ol/layer/Vector\";\nimport VectorSource from \"ol/source/Vector\";\nimport LineString from \"ol/geom/LineString\";\nimport switchesArray from \"./res/switches.json\";\nimport opticsArray from \"./res/optics.json\";\nimport clientStationsArray from \"./res/clientStations.json\";\nimport clientStationIcon from \"./res/client_station_icon.png\";\nimport switchIcon from \"./res/switch_icon.png\";\n\nclass OpticMap extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      map: null,\n      coordinates: \"coordinates\",\n      currentForm: null,\n      displayedFeatures: null,\n      featureInfo: {\n        featureCoordinates: null,\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null,\n      },\n      editedFeatureInfo: {\n        featureCoordinates: null,\n        address: null,\n        ipAddress: null,\n        info: null,\n        locationInfo: null,\n      },\n    };\n\n    this.funForTest = this.funForTest.bind(this);\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n\n    this.handleZoom = this.handleZoom.bind(this);\n\n    this.setSwitchesToRightControlPanel = this.setSwitchesToRightControlPanel.bind(\n      this\n    );\n\n    this.setOpticsToRightControlPanel = this.setOpticsToRightControlPanel.bind(\n      this\n    );\n\n    this.setClientStationsToRightControlPanel = this.setClientStationsToRightControlPanel.bind(\n      this\n    );\n\n    this.initMapComponent = this.initMapComponent.bind(this);\n\n    this.changeFeaturesSize = this.changeFeaturesSize.bind(this);\n\n    this.getFeatureInfo = this.getFeatureInfo.bind(this);\n    this.getfeatureInfoBlock = this.getfeatureInfoBlock.bind(this);\n\n    this.getEditingOrAddingForm = this.getEditingOrAddingForm.bind(this);\n  }\n\n  initMapComponent() {\n    const extentView = transformExtent(\n      [\n        20.969893 /** min x */,\n        57.540673 /** min y */,\n        28.413477 /** max x */,\n        59.894102 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n    const extentLayer = transformExtent(\n      [\n        16.581885 /** min x */,\n        55.671002 /** min y */,\n        32.794556 /** max x */,\n        61.543774 /** max y */,\n      ],\n      \"EPSG:4326\",\n      \"EPSG:3857\"\n    );\n\n    const layerVisibilityControl = (function (Control) {\n      function layerVisibilityControl(layerName, className, buttontext) {\n        const button = document.createElement(\"button\");\n        button.innerHTML = buttontext;\n\n        var element = document.createElement(\"div\");\n        element.className = className + \" \" + \"ol-unselectable ol-control\";\n        element.appendChild(button);\n\n        Control.call(this, {\n          element: element,\n        });\n\n        button.addEventListener(\n          \"click\",\n          this.handlelayerVisibilityControl.bind(this, layerName),\n          false\n        );\n      }\n\n      if (Control) layerVisibilityControl.__proto__ = Control;\n      layerVisibilityControl.prototype = Object.create(\n        Control && Control.prototype\n      );\n      layerVisibilityControl.prototype.constructor = layerVisibilityControl;\n\n      layerVisibilityControl.prototype.handlelayerVisibilityControl = function handlelayerVisibilityControl(\n        layerName\n      ) {\n        map\n          .getLayers()\n          .getArray()\n          .map((layer) => {\n            if (layer.getClassName() === layerName) {\n              layer.setVisible(!layer.getVisible());\n            }\n          });\n      };\n\n      return layerVisibilityControl;\n    })(Control);\n\n    const map = new Map({\n      target: this.refs.mapContainer,\n      layers: [\n        new TileLayer({\n          source: new OSM(),\n          extent: extentLayer,\n          zIndex: 0,\n        }),\n      ],\n      view: new View({\n        center: fromLonLat([28.185281, 59.374348]),\n        zoom: 14,\n        extent: extentView,\n        minZoom: 7.5,\n      }),\n      controls: defaults({\n        attributionOptions: {\n          target: this.refs.mapContainer,\n        },\n      }).extend([\n        new layerVisibilityControl(\n          \"switchesLayer\",\n          \"switches-visible\",\n          \"switches\"\n        ),\n        new layerVisibilityControl(\n          \"opticsLayer\",\n          \"optics-visible\",\n          \"optic cables\"\n        ),\n        new layerVisibilityControl(\n          \"clientStationsLayer\",\n          \"clientStations-visible\",\n          \"client stations\"\n        ),\n      ]),\n    });\n    let switchFeatureArray = [];\n    let opticsFeatureArray = [];\n    let clientStationsFeatureArray = [];\n\n    switchesArray.map((data) => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n        featureCoordinates: data.coordinates,\n      });\n      switchFeatureArray.push(featureElement);\n    });\n\n    opticsArray.map((data) => {\n      let coordinatesArray = [];\n      data.coordinates.map((coordinate) => {\n        coordinatesArray.push(fromLonLat(coordinate));\n      });\n\n      let featureElement = new Feature({\n        geometry: new LineString(coordinatesArray),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n      });\n\n      opticsFeatureArray.push(featureElement);\n    });\n\n    clientStationsArray.map((data) => {\n      let featureElement = new Feature({\n        geometry: new Point(fromLonLat(data.coordinates)),\n        address: data.address,\n        ipAddress: data.ipAddress,\n        info: data.info,\n        locationInfo: data.locationInfo,\n      });\n\n      clientStationsFeatureArray.push(featureElement);\n    });\n\n    let opticsLayerSource = new VectorSource({\n      features: opticsFeatureArray,\n    });\n\n    this.opticsLayer = new VectorLayer({\n      className: \"opticsLayer\",\n      source: opticsLayerSource,\n      visible: true,\n      style: new Style({\n        stroke: new Stroke({\n          width: 2,\n          color: \"skyblue\",\n        }),\n      }),\n    });\n\n    let clientStationsLayerSource = new VectorSource({\n      features: clientStationsFeatureArray,\n    });\n\n    this.clientStationsLayer = new VectorLayer({\n      className: \"clientStationsLayer\",\n      source: clientStationsLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: clientStationIcon,\n          scale: 0.09,\n        }),\n      }),\n    });\n\n    let switchesLayerSource = new VectorSource({\n      features: switchFeatureArray,\n    });\n\n    this.switchesLayer = new VectorLayer({\n      className: \"switchesLayer\",\n      source: switchesLayerSource,\n      visible: true,\n      style: new Style({\n        image: new Icon({\n          opacity: 1,\n          src: switchIcon,\n          scale: 0.09,\n        }),\n      }),\n    });\n\n    //layers with network equipment\n\n    //map feature settings\n\n    //layers settings\n    map.addLayer(this.clientStationsLayer);\n    map.addLayer(this.switchesLayer);\n    map.addLayer(this.opticsLayer);\n    //layers settings\n    //click on map\n    map.on(\n      \"click\",\n      function (pointOfClick) {\n        const clickedCoordinate = transform(\n          pointOfClick.coordinate,\n          \"EPSG:3857\",\n          \"EPSG:4326\"\n        );\n\n        let coordinateString =\n          clickedCoordinate[0].toFixed(6) +\n          \",\" +\n          clickedCoordinate[1].toFixed(6);\n        this.setState({ coordinates: coordinateString });\n\n        map.forEachFeatureAtPixel(\n          pointOfClick.pixel,\n          function (feature, layer) {\n            this.setState({\n              featureInfo: {\n                featureCoordinates: feature.getProperties().featureCoordinates,\n                address: feature.getProperties().address,\n                ipAddress: feature.getProperties().ipAddress,\n                info: feature.getProperties().info,\n                locationInfo: feature.getProperties().locationInfo,\n              },\n            });\n            this.state.map\n              .getView()\n              .animate({ center: fromLonLat(clickedCoordinate) }, { zoom: 19 });\n          }.bind(this)\n        );\n      }.bind(this)\n    );\n\n    // change features size on zoom change\n    map.getView().on(\"propertychange\", (e) => {\n      switch (e.key) {\n        case \"resolution\":\n          this.handleZoom(map.getView().getZoom());\n          break;\n      }\n    });\n    this.setState({\n      map: map,\n    });\n  }\n\n  componentDidMount() {\n    this.initMapComponent();\n  }\n\n  setSwitchesToRightControlPanel() {\n    this.setState({\n      displayedFeatures: switchesArray,\n    });\n  }\n  setOpticsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: opticsArray,\n    });\n  }\n  setClientStationsToRightControlPanel() {\n    this.setState({\n      displayedFeatures: clientStationsArray,\n    });\n  }\n\n  handleRightPanelItemClick(item) {\n    if (item.ipAddress === null) {\n      this.state.map.getView().animate(\n        {\n          center: fromLonLat(item.coordinates[0]),\n        },\n        { zoom: 17.5 }\n      );\n    } else {\n      this.state.map\n        .getView()\n        .animate({ center: fromLonLat(item.coordinates) }, { zoom: 19 });\n    }\n    this.setState({\n      featureInfo: {\n        address: item.address,\n        ipAddress: item.ipAddress,\n        info: item.info,\n        locationInfo: item.locationInfo,\n        featureCoordinates: item.coordinates,\n      },\n    });\n  }\n\n  changeFeaturesSize(pointRadius, strokeWidth, iconsScale) {\n    this.switchesLayer.setStyle(\n      new Style({\n        image: new Icon({\n          opacity: 1,\n          src: switchIcon,\n          scale: iconsScale,\n        }),\n      })\n    );\n    this.opticsLayer.setStyle(\n      new Style({\n        stroke: new Stroke({\n          width: strokeWidth,\n          color: \"skyblue\",\n        }),\n      })\n    );\n    this.clientStationsLayer.setStyle(\n      new Style({\n        image: new Icon({\n          opacity: 1,\n          src: clientStationIcon,\n          scale: iconsScale,\n        }),\n      })\n    );\n  }\n\n  handleZoom(zoomSize) {\n    if (zoomSize < 12) {\n      this.changeFeaturesSize(1, 0.5, 0.01);\n    } else if (zoomSize < 13) {\n      this.changeFeaturesSize(2.5, 2, 0.05);\n    } else if (zoomSize < 14) {\n      this.changeFeaturesSize(2.5, 2, 0.08);\n    } else if (zoomSize < 16) {\n      this.changeFeaturesSize(2.5, 2, 0.1);\n    } else if (zoomSize < 18) {\n      this.changeFeaturesSize(5, 4, 0.12);\n    } else {\n      this.changeFeaturesSize(9, 7, 0.25);\n    }\n  }\n\n  getFeatureInfo(featureInfo) {\n    return featureInfo !== null ? (\n      <div className=\"featureInfoElement\">{featureInfo}</div>\n    ) : (\n      <div className=\"hidden\"></div>\n    );\n  }\n  getfeatureInfoBlock() {\n    if (this.state.featureInfo.featureCoordinates !== null) {\n      return (\n        <div className=\"featureInfo\">\n          {this.getFeatureInfo(this.state.featureInfo.address)}\n          {this.getFeatureInfo(this.state.featureInfo.ipAddress)}\n          {this.getFeatureInfo(this.state.featureInfo.info)}\n          {this.getFeatureInfo(this.state.featureInfo.locationInfo)}\n          <div\n            className=\"editButton\"\n            onClick={() => {\n              this.setState({\n                currentForm: \"edit\",\n              });\n            }}\n          >\n            Edit\n          </div>\n        </div>\n      );\n    } else {\n      return <div className=\"hidden\"></div>;\n    }\n  }\n  funForTest(ob) {\n    console.log(ob.featureInfo);\n  }\n  handleSubmit = (evt) => {\n    // this.setState({\n    //   currentForm: null,\n    // });\n\n    evt.preventDefault();\n  };\n  getEditingOrAddingForm() {\n    if (this.state.currentForm === \"add\") {\n      return (\n        <div className=\"formContainer\">\n          <form className=\"addForm\">\n            <textarea className=\"formField\" ref=\"coordinateFormField\">\n              {this.state.coordinates}\n            </textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"addressFormField\"\n              placeholder=\"address\"\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"ipAddressFormField\"\n              placeholder=\"ip address\"\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"locationInfoFormField\"\n              placeholder=\"location info\"\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              ref=\"infoFormField\"\n              placeholder=\"additional info\"\n            ></textarea>\n            <div className=\"formButtonsContainer\">\n              <button type=\"submit\">Submit</button>\n            </div>\n          </form>\n        </div>\n      );\n    } else if (this.state.currentForm === \"edit\") {\n      return (\n        <div className=\"formContainer\">\n          <form className=\"editForm\" onSubmit={this.handleSubmit()}>\n            <textarea\n              className=\"formField\"\n              id=\"coordinateField\"\n              defaultValue={this.state.featureInfo.featureCoordinates}\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              id=\"addressField\"\n              placeholder=\"address\"\n              defaultValue={this.state.featureInfo.address}\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              id=\"ipAddressField\"\n              placeholder=\"ip address\"\n              defaultValue={this.state.featureInfo.ipAddress}\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              id=\"locationInfoField\"\n              placeholder=\"location info\"\n              defaultValue={this.state.featureInfo.locationInfo}\n            ></textarea>\n            <textarea\n              className=\"formField\"\n              id=\"infoField\"\n              placeholder=\"additional info\"\n              defaultValue={this.state.featureInfo.info}\n            ></textarea>\n            <div className=\"formButtonsContainer\">\n              <button type=\"button\">Delete</button>\n              <button type=\"submit\">Submit</button>\n            </div>\n          </form>\n        </div>\n      );\n    } else {\n      return <div></div>;\n    }\n  }\n\n  render() {\n    this.funForTest(this.state);\n    return (\n      <div className=\"opticMapComponent\">\n        <div className=\"leftMapPanel\">\n          <div className=\"coordinateString\" id=\"coordinateString\">\n            {this.state.coordinates}\n          </div>\n\n          <div className=\"objectButtons\">\n            <div className=\"featureInfoAddControls\">\n              <div\n                className=\"objectButton\"\n                onClick={this.setSwitchesToRightControlPanel}\n              >\n                switches\n              </div>\n              {/* <div className=\"addFeatureButton\">add</div> */}\n            </div>\n            <div className=\"featureInfoAddControls\">\n              <div\n                className=\"objectButton\"\n                onClick={this.setOpticsToRightControlPanel}\n              >\n                optic cable\n              </div>\n              {/* <div className=\"addFeatureButton\">add</div> */}\n            </div>\n            <div className=\"featureInfoAddControls\">\n              <div\n                className=\"objectButton\"\n                onClick={this.setClientStationsToRightControlPanel}\n              >\n                client stations\n              </div>\n              {/* <div className=\"addFeatureButton\">add</div> */}\n            </div>\n          </div>\n          {this.getfeatureInfoBlock()}\n          {this.getEditingOrAddingForm(\n            this.state.featureInfo.featureCoordinates,\n            this.state.featureInfo.address,\n            this.state.featureInfo.ipAddress,\n            this.state.featureInfo.locationInfo,\n            this.state.featureInfo.info\n          )}\n        </div>\n        <div className=\"mapContainer\" ref=\"mapContainer\"></div>\n        <div className=\"rightMapPanel\">\n          <div className=\"displayedFeatures\">\n            {this.state.displayedFeatures !== null ? (\n              this.state.displayedFeatures.map((feature) => {\n                return (\n                  <li\n                    className=\"displayedFeature\"\n                    key={feature.coordinates}\n                    onClick={this.handleRightPanelItemClick.bind(this, feature)}\n                  >\n                    {feature.address}\n                  </li>\n                );\n              })\n            ) : (\n              <div></div>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default OpticMap;\n"]},"metadata":{},"sourceType":"module"}